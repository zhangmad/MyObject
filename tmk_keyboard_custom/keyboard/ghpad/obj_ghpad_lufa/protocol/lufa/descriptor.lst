   1               		.file	"descriptor.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.CALLBACK_USB_GetDescriptor,"ax",@progbits
  11               	.global	CALLBACK_USB_GetDescriptor
  13               	CALLBACK_USB_GetDescriptor:
  14               	.LFB100:
  15               		.file 1 "../../tmk_core_custom/protocol/lufa/descriptor.c"
   1:../../tmk_core_custom/protocol/lufa/descriptor.c **** /* 
   2:../../tmk_core_custom/protocol/lufa/descriptor.c ****  * Copyright 2012 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core_custom/protocol/lufa/descriptor.c ****  * This file is based on:
   4:../../tmk_core_custom/protocol/lufa/descriptor.c ****  *     LUFA-120219/Demos/Device/Lowlevel/KeyboardMouse
   5:../../tmk_core_custom/protocol/lufa/descriptor.c ****  *     LUFA-120219/Demos/Device/Lowlevel/GenericHID
   6:../../tmk_core_custom/protocol/lufa/descriptor.c ****  */
   7:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
   8:../../tmk_core_custom/protocol/lufa/descriptor.c **** /*
   9:../../tmk_core_custom/protocol/lufa/descriptor.c ****              LUFA Library
  10:../../tmk_core_custom/protocol/lufa/descriptor.c ****      Copyright (C) Dean Camera, 2012.
  11:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
  12:../../tmk_core_custom/protocol/lufa/descriptor.c ****   dean [at] fourwalledcubicle [dot] com
  13:../../tmk_core_custom/protocol/lufa/descriptor.c ****            www.lufa-lib.org
  14:../../tmk_core_custom/protocol/lufa/descriptor.c **** */
  15:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
  16:../../tmk_core_custom/protocol/lufa/descriptor.c **** /*
  17:../../tmk_core_custom/protocol/lufa/descriptor.c ****   Copyright 2012  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  18:../../tmk_core_custom/protocol/lufa/descriptor.c ****   Copyright 2010  Denver Gingerich (denver [at] ossguy [dot] com)
  19:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
  20:../../tmk_core_custom/protocol/lufa/descriptor.c ****   Permission to use, copy, modify, distribute, and sell this
  21:../../tmk_core_custom/protocol/lufa/descriptor.c ****   software and its documentation for any purpose is hereby granted
  22:../../tmk_core_custom/protocol/lufa/descriptor.c ****   without fee, provided that the above copyright notice appear in
  23:../../tmk_core_custom/protocol/lufa/descriptor.c ****   all copies and that both that the copyright notice and this
  24:../../tmk_core_custom/protocol/lufa/descriptor.c ****   permission notice and warranty disclaimer appear in supporting
  25:../../tmk_core_custom/protocol/lufa/descriptor.c ****   documentation, and that the name of the author not be used in
  26:../../tmk_core_custom/protocol/lufa/descriptor.c ****   advertising or publicity pertaining to distribution of the
  27:../../tmk_core_custom/protocol/lufa/descriptor.c ****   software without specific, written prior permission.
  28:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
  29:../../tmk_core_custom/protocol/lufa/descriptor.c ****   The author disclaim all warranties with regard to this
  30:../../tmk_core_custom/protocol/lufa/descriptor.c ****   software, including all implied warranties of merchantability
  31:../../tmk_core_custom/protocol/lufa/descriptor.c ****   and fitness.  In no event shall the author be liable for any
  32:../../tmk_core_custom/protocol/lufa/descriptor.c ****   special, indirect or consequential damages or any damages
  33:../../tmk_core_custom/protocol/lufa/descriptor.c ****   whatsoever resulting from loss of use, data or profits, whether
  34:../../tmk_core_custom/protocol/lufa/descriptor.c ****   in an action of contract, negligence or other tortious action,
  35:../../tmk_core_custom/protocol/lufa/descriptor.c ****   arising out of or in connection with the use or performance of
  36:../../tmk_core_custom/protocol/lufa/descriptor.c ****   this software.
  37:../../tmk_core_custom/protocol/lufa/descriptor.c **** */
  38:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
  39:../../tmk_core_custom/protocol/lufa/descriptor.c **** #include "util.h"
  40:../../tmk_core_custom/protocol/lufa/descriptor.c **** #include "report.h"
  41:../../tmk_core_custom/protocol/lufa/descriptor.c **** #include "descriptor.h"
  42:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
  43:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
  44:../../tmk_core_custom/protocol/lufa/descriptor.c **** /*******************************************************************************
  45:../../tmk_core_custom/protocol/lufa/descriptor.c ****  * HID Report Descriptors
  46:../../tmk_core_custom/protocol/lufa/descriptor.c ****  ******************************************************************************/
  47:../../tmk_core_custom/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM KeyboardReport[] =
  48:../../tmk_core_custom/protocol/lufa/descriptor.c **** {
  49:../../tmk_core_custom/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
  50:../../tmk_core_custom/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x06), /* Keyboard */
  51:../../tmk_core_custom/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
  52:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Key Codes */
  53:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0xE0), /* Keyboard Left Control */
  54:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0xE7), /* Keyboard Right GUI */
  55:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
  56:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0x01),
  57:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x08),
  58:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
  59:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
  60:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
  61:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x01),
  62:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
  63:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_CONSTANT),  /* reserved */
  64:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
  65:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x08), /* LEDs */
  66:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x01), /* Num Lock */
  67:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0x05), /* Kana */
  68:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x05),
  69:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
  70:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE | HID_IOF_NON_VOLATILE)
  71:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x01),
  72:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x03),
  73:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_CONSTANT),
  74:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
  75:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Keyboard */
  76:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x00), /* Reserved (no event indicated) */
  77:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0xFF), /* Keyboard Application */
  78:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
  79:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0xFF),
  80:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x06),
  81:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
  82:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_ARRAY | HID_IOF_ABSOLUTE),
  83:../../tmk_core_custom/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
  84:../../tmk_core_custom/protocol/lufa/descriptor.c **** };
  85:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
  86:../../tmk_core_custom/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
  87:../../tmk_core_custom/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM MouseReport[] =
  88:../../tmk_core_custom/protocol/lufa/descriptor.c **** {
  89:../../tmk_core_custom/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
  90:../../tmk_core_custom/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x02), /* Mouse */
  91:../../tmk_core_custom/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
  92:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_USAGE(8, 0x01), /* Pointer */
  93:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_COLLECTION(8, 0x00), /* Physical */
  94:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
  95:../../tmk_core_custom/protocol/lufa/descriptor.c ****             HID_RI_USAGE_PAGE(8, 0x09), /* Button */
  96:../../tmk_core_custom/protocol/lufa/descriptor.c ****             HID_RI_USAGE_MINIMUM(8, 0x01),  /* Button 1 */
  97:../../tmk_core_custom/protocol/lufa/descriptor.c ****             HID_RI_USAGE_MAXIMUM(8, 0x05),  /* Button 5 */
  98:../../tmk_core_custom/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, 0x00),
  99:../../tmk_core_custom/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 0x01),
 100:../../tmk_core_custom/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x05),
 101:../../tmk_core_custom/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x01),
 102:../../tmk_core_custom/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 103:../../tmk_core_custom/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x01),
 104:../../tmk_core_custom/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x03),
 105:../../tmk_core_custom/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_CONSTANT),
 106:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 107:../../tmk_core_custom/protocol/lufa/descriptor.c ****             HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
 108:../../tmk_core_custom/protocol/lufa/descriptor.c ****             HID_RI_USAGE(8, 0x30), /* Usage X */
 109:../../tmk_core_custom/protocol/lufa/descriptor.c ****             HID_RI_USAGE(8, 0x31), /* Usage Y */
 110:../../tmk_core_custom/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, -127),
 111:../../tmk_core_custom/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 127),
 112:../../tmk_core_custom/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x02),
 113:../../tmk_core_custom/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x08),
 114:../../tmk_core_custom/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_RELATIVE),
 115:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 116:../../tmk_core_custom/protocol/lufa/descriptor.c ****             HID_RI_USAGE(8, 0x38), /* Wheel */
 117:../../tmk_core_custom/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, -127),
 118:../../tmk_core_custom/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 127),
 119:../../tmk_core_custom/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x01),
 120:../../tmk_core_custom/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x08),
 121:../../tmk_core_custom/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_RELATIVE),
 122:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 123:../../tmk_core_custom/protocol/lufa/descriptor.c ****             HID_RI_USAGE_PAGE(8, 0x0C), /* Consumer */
 124:../../tmk_core_custom/protocol/lufa/descriptor.c ****             HID_RI_USAGE(16, 0x0238), /* AC Pan (Horizontal wheel) */
 125:../../tmk_core_custom/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MINIMUM(8, -127),
 126:../../tmk_core_custom/protocol/lufa/descriptor.c ****             HID_RI_LOGICAL_MAXIMUM(8, 127),
 127:../../tmk_core_custom/protocol/lufa/descriptor.c ****             HID_RI_REPORT_COUNT(8, 0x01),
 128:../../tmk_core_custom/protocol/lufa/descriptor.c ****             HID_RI_REPORT_SIZE(8, 0x08),
 129:../../tmk_core_custom/protocol/lufa/descriptor.c ****             HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_RELATIVE),
 130:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 131:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_END_COLLECTION(0),
 132:../../tmk_core_custom/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 133:../../tmk_core_custom/protocol/lufa/descriptor.c **** };
 134:../../tmk_core_custom/protocol/lufa/descriptor.c **** #endif
 135:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 136:../../tmk_core_custom/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 137:../../tmk_core_custom/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM ExtrakeyReport[] =
 138:../../tmk_core_custom/protocol/lufa/descriptor.c **** {
 139:../../tmk_core_custom/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
 140:../../tmk_core_custom/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x80), /* System Control */
 141:../../tmk_core_custom/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 142:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_REPORT_ID(8, REPORT_ID_SYSTEM),
 143:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(16, 0x0001),
 144:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x00B7),
 145:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(16, 0x0001), /* System Power Down */
 146:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(16, 0x00B7), /* System Display LCD Autoscale */
 147:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 16),
 148:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 1),
 149:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_ARRAY | HID_IOF_ABSOLUTE),
 150:../../tmk_core_custom/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 151:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 152:../../tmk_core_custom/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x0C), /* Consumer */
 153:../../tmk_core_custom/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x01), /* Consumer Control */
 154:../../tmk_core_custom/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 155:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_REPORT_ID(8, REPORT_ID_CONSUMER),
 156:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(16, 0x0001),
 157:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(16, 0x029C),
 158:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(16, 0x0001), /* +10 */
 159:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(16, 0x029C), /* AC Distribute Vertically */
 160:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 16),
 161:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 1),
 162:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_ARRAY | HID_IOF_ABSOLUTE),
 163:../../tmk_core_custom/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 164:../../tmk_core_custom/protocol/lufa/descriptor.c **** };
 165:../../tmk_core_custom/protocol/lufa/descriptor.c **** #endif
 166:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 167:../../tmk_core_custom/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 168:../../tmk_core_custom/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM ConsoleReport[] =
 169:../../tmk_core_custom/protocol/lufa/descriptor.c **** {
 170:../../tmk_core_custom/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(16, 0xFF31), /* Vendor Page(PJRC Teensy compatible) */
 171:../../tmk_core_custom/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x74), /* Vendor Usage(PJRC Teensy compatible) */
 172:../../tmk_core_custom/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 173:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_USAGE(8, 0x75), /* Vendor Usage 0x75 */
 174:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 175:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0xFF),
 176:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, CONSOLE_EPSIZE),
 177:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
 178:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 179:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_USAGE(8, 0x76), /* Vendor Usage 0x76 */
 180:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 181:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0xFF),
 182:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, CONSOLE_EPSIZE),
 183:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x08),
 184:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE | HID_IOF_NON_VOLATILE)
 185:../../tmk_core_custom/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 186:../../tmk_core_custom/protocol/lufa/descriptor.c **** };
 187:../../tmk_core_custom/protocol/lufa/descriptor.c **** #endif
 188:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 189:../../tmk_core_custom/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 190:../../tmk_core_custom/protocol/lufa/descriptor.c **** const USB_Descriptor_HIDReport_Datatype_t PROGMEM NKROReport[] =
 191:../../tmk_core_custom/protocol/lufa/descriptor.c **** {
 192:../../tmk_core_custom/protocol/lufa/descriptor.c ****     HID_RI_USAGE_PAGE(8, 0x01), /* Generic Desktop */
 193:../../tmk_core_custom/protocol/lufa/descriptor.c ****     HID_RI_USAGE(8, 0x06), /* Keyboard */
 194:../../tmk_core_custom/protocol/lufa/descriptor.c ****     HID_RI_COLLECTION(8, 0x01), /* Application */
 195:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Key Codes */
 196:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0xE0), /* Keyboard Left Control */
 197:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0xE7), /* Keyboard Right GUI */
 198:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 199:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0x01),
 200:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x08),
 201:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
 202:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 203:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 204:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x08), /* LEDs */
 205:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x01), /* Num Lock */
 206:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, 0x05), /* Kana */
 207:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x05),
 208:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
 209:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE | HID_IOF_NON_VOLATILE)
 210:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, 0x01),
 211:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x03),
 212:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_OUTPUT(8, HID_IOF_CONSTANT),
 213:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 214:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_USAGE_PAGE(8, 0x07), /* Key Codes */
 215:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MINIMUM(8, 0x00), /* Keyboard 0 */
 216:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_USAGE_MAXIMUM(8, (NKRO_EPSIZE-1)*8-1), /* Keyboard Right GUI */
 217:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MINIMUM(8, 0x00),
 218:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_LOGICAL_MAXIMUM(8, 0x01),
 219:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_REPORT_COUNT(8, (NKRO_EPSIZE-1)*8),
 220:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_REPORT_SIZE(8, 0x01),
 221:../../tmk_core_custom/protocol/lufa/descriptor.c ****         HID_RI_INPUT(8, HID_IOF_DATA | HID_IOF_VARIABLE | HID_IOF_ABSOLUTE),
 222:../../tmk_core_custom/protocol/lufa/descriptor.c ****     HID_RI_END_COLLECTION(0),
 223:../../tmk_core_custom/protocol/lufa/descriptor.c **** };
 224:../../tmk_core_custom/protocol/lufa/descriptor.c **** #endif
 225:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 226:../../tmk_core_custom/protocol/lufa/descriptor.c **** /*******************************************************************************
 227:../../tmk_core_custom/protocol/lufa/descriptor.c ****  * Device Descriptors
 228:../../tmk_core_custom/protocol/lufa/descriptor.c ****  ******************************************************************************/
 229:../../tmk_core_custom/protocol/lufa/descriptor.c **** const USB_Descriptor_Device_t PROGMEM DeviceDescriptor =
 230:../../tmk_core_custom/protocol/lufa/descriptor.c **** {
 231:../../tmk_core_custom/protocol/lufa/descriptor.c ****     .Header                 = {.Size = sizeof(USB_Descriptor_Device_t), .Type = DTYPE_Device},
 232:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 233:../../tmk_core_custom/protocol/lufa/descriptor.c ****     .USBSpecification       = VERSION_BCD(1,1,0),
 234:../../tmk_core_custom/protocol/lufa/descriptor.c ****     .Class                  = USB_CSCP_NoDeviceClass,
 235:../../tmk_core_custom/protocol/lufa/descriptor.c ****     .SubClass               = USB_CSCP_NoDeviceSubclass,
 236:../../tmk_core_custom/protocol/lufa/descriptor.c ****     .Protocol               = USB_CSCP_NoDeviceProtocol,
 237:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 238:../../tmk_core_custom/protocol/lufa/descriptor.c ****     .Endpoint0Size          = FIXED_CONTROL_ENDPOINT_SIZE,
 239:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 240:../../tmk_core_custom/protocol/lufa/descriptor.c ****     /* specified in config.h */
 241:../../tmk_core_custom/protocol/lufa/descriptor.c ****     .VendorID               = VENDOR_ID,
 242:../../tmk_core_custom/protocol/lufa/descriptor.c ****     .ProductID              = PRODUCT_ID,
 243:../../tmk_core_custom/protocol/lufa/descriptor.c ****     .ReleaseNumber          = DEVICE_VER,
 244:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 245:../../tmk_core_custom/protocol/lufa/descriptor.c ****     .ManufacturerStrIndex   = 0x01,
 246:../../tmk_core_custom/protocol/lufa/descriptor.c ****     .ProductStrIndex        = 0x02,
 247:../../tmk_core_custom/protocol/lufa/descriptor.c ****     .SerialNumStrIndex      = NO_DESCRIPTOR,
 248:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 249:../../tmk_core_custom/protocol/lufa/descriptor.c ****     .NumberOfConfigurations = FIXED_NUM_CONFIGURATIONS
 250:../../tmk_core_custom/protocol/lufa/descriptor.c **** };
 251:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 252:../../tmk_core_custom/protocol/lufa/descriptor.c **** /*******************************************************************************
 253:../../tmk_core_custom/protocol/lufa/descriptor.c ****  * Configuration Descriptors
 254:../../tmk_core_custom/protocol/lufa/descriptor.c ****  ******************************************************************************/
 255:../../tmk_core_custom/protocol/lufa/descriptor.c **** const USB_Descriptor_Configuration_t PROGMEM ConfigurationDescriptor =
 256:../../tmk_core_custom/protocol/lufa/descriptor.c **** {
 257:../../tmk_core_custom/protocol/lufa/descriptor.c ****     .Config =
 258:../../tmk_core_custom/protocol/lufa/descriptor.c ****         {
 259:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Configuration_Header_t), .Type
 260:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 261:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .TotalConfigurationSize = sizeof(USB_Descriptor_Configuration_t),
 262:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .TotalInterfaces        = TOTAL_INTERFACES,
 263:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 264:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .ConfigurationNumber    = 1,
 265:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .ConfigurationStrIndex  = NO_DESCRIPTOR,
 266:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 267:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .ConfigAttributes       = (USB_CONFIG_ATTR_RESERVED | USB_CONFIG_ATTR_REMOTEWAKEUP),
 268:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 269:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .MaxPowerConsumption    = USB_CONFIG_POWER_MA(100)
 270:../../tmk_core_custom/protocol/lufa/descriptor.c ****         },
 271:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 272:../../tmk_core_custom/protocol/lufa/descriptor.c ****     /*
 273:../../tmk_core_custom/protocol/lufa/descriptor.c ****      * Keyboard
 274:../../tmk_core_custom/protocol/lufa/descriptor.c ****      */
 275:../../tmk_core_custom/protocol/lufa/descriptor.c ****     .Keyboard_Interface =
 276:../../tmk_core_custom/protocol/lufa/descriptor.c ****         {
 277:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 278:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 279:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .InterfaceNumber        = KEYBOARD_INTERFACE,
 280:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 281:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 282:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 283:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 284:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 285:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_BootSubclass,
 286:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_KeyboardBootProtocol,
 287:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 288:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 289:../../tmk_core_custom/protocol/lufa/descriptor.c ****         },
 290:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 291:../../tmk_core_custom/protocol/lufa/descriptor.c ****     .Keyboard_HID =
 292:../../tmk_core_custom/protocol/lufa/descriptor.c ****         {
 293:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 294:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 295:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 296:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 297:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 298:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 299:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(KeyboardReport)
 300:../../tmk_core_custom/protocol/lufa/descriptor.c ****         },
 301:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 302:../../tmk_core_custom/protocol/lufa/descriptor.c ****     .Keyboard_INEndpoint =
 303:../../tmk_core_custom/protocol/lufa/descriptor.c ****         {
 304:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 305:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 306:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | KEYBOARD_IN_EPNUM),
 307:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 308:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .EndpointSize           = KEYBOARD_EPSIZE,
 309:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x0A
 310:../../tmk_core_custom/protocol/lufa/descriptor.c ****         },
 311:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 312:../../tmk_core_custom/protocol/lufa/descriptor.c ****     /*
 313:../../tmk_core_custom/protocol/lufa/descriptor.c ****      * Mouse
 314:../../tmk_core_custom/protocol/lufa/descriptor.c ****      */
 315:../../tmk_core_custom/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
 316:../../tmk_core_custom/protocol/lufa/descriptor.c ****     .Mouse_Interface =
 317:../../tmk_core_custom/protocol/lufa/descriptor.c ****         {
 318:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 319:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 320:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .InterfaceNumber        = MOUSE_INTERFACE,
 321:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 322:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 323:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 324:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 325:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 326:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_BootSubclass,
 327:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_MouseBootProtocol,
 328:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 329:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 330:../../tmk_core_custom/protocol/lufa/descriptor.c ****         },
 331:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 332:../../tmk_core_custom/protocol/lufa/descriptor.c ****     .Mouse_HID =
 333:../../tmk_core_custom/protocol/lufa/descriptor.c ****         {
 334:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 335:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 336:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 337:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 338:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 339:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 340:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(MouseReport)
 341:../../tmk_core_custom/protocol/lufa/descriptor.c ****         },
 342:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 343:../../tmk_core_custom/protocol/lufa/descriptor.c ****     .Mouse_INEndpoint =
 344:../../tmk_core_custom/protocol/lufa/descriptor.c ****         {
 345:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 346:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 347:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | MOUSE_IN_EPNUM),
 348:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 349:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .EndpointSize           = MOUSE_EPSIZE,
 350:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x0A
 351:../../tmk_core_custom/protocol/lufa/descriptor.c ****         },
 352:../../tmk_core_custom/protocol/lufa/descriptor.c **** #endif
 353:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 354:../../tmk_core_custom/protocol/lufa/descriptor.c ****     /*
 355:../../tmk_core_custom/protocol/lufa/descriptor.c ****      * Extra
 356:../../tmk_core_custom/protocol/lufa/descriptor.c ****      */
 357:../../tmk_core_custom/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 358:../../tmk_core_custom/protocol/lufa/descriptor.c ****     .Extrakey_Interface =
 359:../../tmk_core_custom/protocol/lufa/descriptor.c ****         {
 360:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 361:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 362:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .InterfaceNumber        = EXTRAKEY_INTERFACE,
 363:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 364:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 365:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 366:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 367:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 368:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_NonBootSubclass,
 369:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_NonBootProtocol,
 370:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 371:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 372:../../tmk_core_custom/protocol/lufa/descriptor.c ****         },
 373:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 374:../../tmk_core_custom/protocol/lufa/descriptor.c ****     .Extrakey_HID =
 375:../../tmk_core_custom/protocol/lufa/descriptor.c ****         {
 376:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 377:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 378:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 379:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 380:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 381:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 382:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(ExtrakeyReport)
 383:../../tmk_core_custom/protocol/lufa/descriptor.c ****         },
 384:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 385:../../tmk_core_custom/protocol/lufa/descriptor.c ****     .Extrakey_INEndpoint =
 386:../../tmk_core_custom/protocol/lufa/descriptor.c ****         {
 387:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 388:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 389:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | EXTRAKEY_IN_EPNUM),
 390:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 391:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .EndpointSize           = EXTRAKEY_EPSIZE,
 392:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x0A
 393:../../tmk_core_custom/protocol/lufa/descriptor.c ****         },
 394:../../tmk_core_custom/protocol/lufa/descriptor.c **** #endif
 395:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 396:../../tmk_core_custom/protocol/lufa/descriptor.c ****     /*
 397:../../tmk_core_custom/protocol/lufa/descriptor.c ****      * Console
 398:../../tmk_core_custom/protocol/lufa/descriptor.c ****      */
 399:../../tmk_core_custom/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 400:../../tmk_core_custom/protocol/lufa/descriptor.c ****     .Console_Interface =
 401:../../tmk_core_custom/protocol/lufa/descriptor.c ****         {
 402:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 403:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 404:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .InterfaceNumber        = CONSOLE_INTERFACE,
 405:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 406:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 407:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 2,
 408:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 409:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 410:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_NonBootSubclass,
 411:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_NonBootProtocol,
 412:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 413:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 414:../../tmk_core_custom/protocol/lufa/descriptor.c ****         },
 415:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 416:../../tmk_core_custom/protocol/lufa/descriptor.c ****     .Console_HID =
 417:../../tmk_core_custom/protocol/lufa/descriptor.c ****         {
 418:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 419:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 420:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 421:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 422:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 423:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 424:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(ConsoleReport)
 425:../../tmk_core_custom/protocol/lufa/descriptor.c ****         },
 426:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 427:../../tmk_core_custom/protocol/lufa/descriptor.c ****     .Console_INEndpoint =
 428:../../tmk_core_custom/protocol/lufa/descriptor.c ****         {
 429:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 430:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 431:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | CONSOLE_IN_EPNUM),
 432:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 433:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .EndpointSize           = CONSOLE_EPSIZE,
 434:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x01
 435:../../tmk_core_custom/protocol/lufa/descriptor.c ****         },
 436:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 437:../../tmk_core_custom/protocol/lufa/descriptor.c ****     .Console_OUTEndpoint =
 438:../../tmk_core_custom/protocol/lufa/descriptor.c ****         {
 439:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 440:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 441:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_OUT | CONSOLE_OUT_EPNUM),
 442:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 443:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .EndpointSize           = CONSOLE_EPSIZE,
 444:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x01
 445:../../tmk_core_custom/protocol/lufa/descriptor.c ****         },
 446:../../tmk_core_custom/protocol/lufa/descriptor.c **** #endif
 447:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 448:../../tmk_core_custom/protocol/lufa/descriptor.c ****     /*
 449:../../tmk_core_custom/protocol/lufa/descriptor.c ****      * NKRO
 450:../../tmk_core_custom/protocol/lufa/descriptor.c ****      */
 451:../../tmk_core_custom/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 452:../../tmk_core_custom/protocol/lufa/descriptor.c ****     .NKRO_Interface =
 453:../../tmk_core_custom/protocol/lufa/descriptor.c ****         {
 454:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_In
 455:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 456:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .InterfaceNumber        = NKRO_INTERFACE,
 457:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .AlternateSetting       = 0x00,
 458:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 459:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .TotalEndpoints         = 1,
 460:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 461:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .Class                  = HID_CSCP_HIDClass,
 462:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .SubClass               = HID_CSCP_NonBootSubclass,
 463:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .Protocol               = HID_CSCP_NonBootProtocol,
 464:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 465:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .InterfaceStrIndex      = NO_DESCRIPTOR
 466:../../tmk_core_custom/protocol/lufa/descriptor.c ****         },
 467:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 468:../../tmk_core_custom/protocol/lufa/descriptor.c ****     .NKRO_HID =
 469:../../tmk_core_custom/protocol/lufa/descriptor.c ****         {
 470:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_HID_Descriptor_HID_t), .Type = HID_DTYPE_
 471:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 472:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .HIDSpec                = VERSION_BCD(1,1,1),
 473:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .CountryCode            = 0x00,
 474:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .TotalReportDescriptors = 1,
 475:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .HIDReportType          = HID_DTYPE_Report,
 476:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .HIDReportLength        = sizeof(NKROReport)
 477:../../tmk_core_custom/protocol/lufa/descriptor.c ****         },
 478:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 479:../../tmk_core_custom/protocol/lufa/descriptor.c ****     .NKRO_INEndpoint =
 480:../../tmk_core_custom/protocol/lufa/descriptor.c ****         {
 481:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_End
 482:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 483:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .EndpointAddress        = (ENDPOINT_DIR_IN | NKRO_IN_EPNUM),
 484:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_D
 485:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .EndpointSize           = NKRO_EPSIZE,
 486:../../tmk_core_custom/protocol/lufa/descriptor.c ****             .PollingIntervalMS      = 0x01
 487:../../tmk_core_custom/protocol/lufa/descriptor.c ****         },
 488:../../tmk_core_custom/protocol/lufa/descriptor.c **** #endif
 489:../../tmk_core_custom/protocol/lufa/descriptor.c **** };
 490:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 491:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 492:../../tmk_core_custom/protocol/lufa/descriptor.c **** /*******************************************************************************
 493:../../tmk_core_custom/protocol/lufa/descriptor.c ****  * String Descriptors
 494:../../tmk_core_custom/protocol/lufa/descriptor.c ****  ******************************************************************************/
 495:../../tmk_core_custom/protocol/lufa/descriptor.c **** const USB_Descriptor_String_t PROGMEM LanguageString =
 496:../../tmk_core_custom/protocol/lufa/descriptor.c **** {
 497:../../tmk_core_custom/protocol/lufa/descriptor.c ****     .Header                 = {.Size = USB_STRING_LEN(1), .Type = DTYPE_String},
 498:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 499:../../tmk_core_custom/protocol/lufa/descriptor.c ****     .UnicodeString          = {LANGUAGE_ID_ENG}
 500:../../tmk_core_custom/protocol/lufa/descriptor.c **** };
 501:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 502:../../tmk_core_custom/protocol/lufa/descriptor.c **** const USB_Descriptor_String_t PROGMEM ManufacturerString =
 503:../../tmk_core_custom/protocol/lufa/descriptor.c **** {
 504:../../tmk_core_custom/protocol/lufa/descriptor.c ****     /* subtract 1 for null terminator */
 505:../../tmk_core_custom/protocol/lufa/descriptor.c ****     .Header                 = {.Size = USB_STRING_LEN(sizeof(STR(MANUFACTURER))-1), .Type = DTYPE_S
 506:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 507:../../tmk_core_custom/protocol/lufa/descriptor.c ****     .UnicodeString          = LSTR(MANUFACTURER)
 508:../../tmk_core_custom/protocol/lufa/descriptor.c **** };
 509:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 510:../../tmk_core_custom/protocol/lufa/descriptor.c **** const USB_Descriptor_String_t PROGMEM ProductString =
 511:../../tmk_core_custom/protocol/lufa/descriptor.c **** {
 512:../../tmk_core_custom/protocol/lufa/descriptor.c ****     /* subtract 1 for null terminator */
 513:../../tmk_core_custom/protocol/lufa/descriptor.c ****     .Header                 = {.Size = USB_STRING_LEN(sizeof(STR(PRODUCT))-1), .Type = DTYPE_String
 514:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 515:../../tmk_core_custom/protocol/lufa/descriptor.c ****     .UnicodeString          = LSTR(PRODUCT)
 516:../../tmk_core_custom/protocol/lufa/descriptor.c **** };
 517:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 518:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 519:../../tmk_core_custom/protocol/lufa/descriptor.c **** /** This function is called by the library when in device mode, and must be overridden (see library
 520:../../tmk_core_custom/protocol/lufa/descriptor.c ****  *  documentation) by the application code so that the address and size of a requested descriptor c
 521:../../tmk_core_custom/protocol/lufa/descriptor.c ****  *  to the USB library. When the device receives a Get Descriptor request on the control endpoint, 
 522:../../tmk_core_custom/protocol/lufa/descriptor.c ****  *  is called so that the descriptor details can be passed back and the appropriate descriptor sent
 523:../../tmk_core_custom/protocol/lufa/descriptor.c ****  *  USB host.
 524:../../tmk_core_custom/protocol/lufa/descriptor.c ****  */
 525:../../tmk_core_custom/protocol/lufa/descriptor.c **** uint16_t CALLBACK_USB_GetDescriptor(const uint16_t wValue,
 526:../../tmk_core_custom/protocol/lufa/descriptor.c ****                                     const uint8_t wIndex,
 527:../../tmk_core_custom/protocol/lufa/descriptor.c ****                                     const void** const DescriptorAddress)
 528:../../tmk_core_custom/protocol/lufa/descriptor.c **** {
  16               		.loc 1 528 0
  17               		.cfi_startproc
  18               	.LVL0:
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
 529:../../tmk_core_custom/protocol/lufa/descriptor.c ****     const uint8_t  DescriptorType   = (wValue >> 8);
  23               		.loc 1 529 0
  24 0000 292F      		mov r18,r25
  25 0002 3327      		clr r19
 530:../../tmk_core_custom/protocol/lufa/descriptor.c ****     const uint8_t  DescriptorIndex  = (wValue & 0xFF);
 531:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 532:../../tmk_core_custom/protocol/lufa/descriptor.c ****     const void* Address = NULL;
 533:../../tmk_core_custom/protocol/lufa/descriptor.c ****     uint16_t    Size    = NO_DESCRIPTOR;
 534:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 535:../../tmk_core_custom/protocol/lufa/descriptor.c ****     switch (DescriptorType)
  26               		.loc 1 535 0
  27 0004 2330      		cpi r18,3
  28 0006 3105      		cpc r19,__zero_reg__
  29 0008 01F0      		breq .L3
  30 000a 04F4      		brge .L4
  31 000c 2130      		cpi r18,1
  32 000e 3105      		cpc r19,__zero_reg__
  33 0010 01F4      		brne .+2
  34 0012 00C0      		rjmp .L12
  35 0014 2230      		cpi r18,2
  36 0016 3105      		cpc r19,__zero_reg__
  37 0018 01F0      		breq .+2
  38 001a 00C0      		rjmp .L15
  39               	.LVL1:
 536:../../tmk_core_custom/protocol/lufa/descriptor.c ****     {
 537:../../tmk_core_custom/protocol/lufa/descriptor.c ****         case DTYPE_Device:
 538:../../tmk_core_custom/protocol/lufa/descriptor.c ****             Address = &DeviceDescriptor;
 539:../../tmk_core_custom/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Device_t);
 540:../../tmk_core_custom/protocol/lufa/descriptor.c ****             break;
 541:../../tmk_core_custom/protocol/lufa/descriptor.c ****         case DTYPE_Configuration:
 542:../../tmk_core_custom/protocol/lufa/descriptor.c ****             Address = &ConfigurationDescriptor;
 543:../../tmk_core_custom/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Configuration_t);
  40               		.loc 1 543 0
  41 001c 8DE8      		ldi r24,lo8(-115)
  42 001e 90E0      		ldi r25,0
  43               	.LVL2:
 542:../../tmk_core_custom/protocol/lufa/descriptor.c ****             Address = &ConfigurationDescriptor;
  44               		.loc 1 542 0
  45 0020 20E0      		ldi r18,lo8(ConfigurationDescriptor)
  46 0022 30E0      		ldi r19,hi8(ConfigurationDescriptor)
 544:../../tmk_core_custom/protocol/lufa/descriptor.c ****             break;
  47               		.loc 1 544 0
  48 0024 00C0      		rjmp .L5
  49               	.LVL3:
  50               	.L4:
 535:../../tmk_core_custom/protocol/lufa/descriptor.c ****     switch (DescriptorType)
  51               		.loc 1 535 0
  52 0026 2132      		cpi r18,33
  53 0028 3105      		cpc r19,__zero_reg__
  54 002a 01F0      		breq .L7
  55 002c 2232      		cpi r18,34
  56 002e 3105      		cpc r19,__zero_reg__
  57 0030 01F0      		breq .L8
  58 0032 00C0      		rjmp .L15
  59               	.L3:
  60 0034 9927      		clr r25
  61               	.LVL4:
 545:../../tmk_core_custom/protocol/lufa/descriptor.c ****         case DTYPE_String:
 546:../../tmk_core_custom/protocol/lufa/descriptor.c ****             switch (DescriptorIndex )
  62               		.loc 1 546 0
  63 0036 8130      		cpi r24,1
  64 0038 9105      		cpc r25,__zero_reg__
  65 003a 01F0      		breq .L9
  66 003c 8230      		cpi r24,2
  67 003e 9105      		cpc r25,__zero_reg__
  68 0040 01F0      		breq .L10
  69 0042 892B      		or r24,r25
  70 0044 01F4      		brne .L15
  71               	.LVL5:
  72               	.LBB2:
 547:../../tmk_core_custom/protocol/lufa/descriptor.c ****             {
 548:../../tmk_core_custom/protocol/lufa/descriptor.c ****                 case 0x00:
 549:../../tmk_core_custom/protocol/lufa/descriptor.c ****                     Address = &LanguageString;
 550:../../tmk_core_custom/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&LanguageString.Header.Size);
  73               		.loc 1 550 0
  74 0046 E0E0      		ldi r30,lo8(LanguageString)
  75 0048 F0E0      		ldi r31,hi8(LanguageString)
  76 004a 00C0      		rjmp .L17
  77               	.LVL6:
  78               	.L9:
  79               	.LBE2:
  80               	.LBB3:
 551:../../tmk_core_custom/protocol/lufa/descriptor.c ****                     break;
 552:../../tmk_core_custom/protocol/lufa/descriptor.c ****                 case 0x01:
 553:../../tmk_core_custom/protocol/lufa/descriptor.c ****                     Address = &ManufacturerString;
 554:../../tmk_core_custom/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&ManufacturerString.Header.Size);
  81               		.loc 1 554 0
  82 004c E0E0      		ldi r30,lo8(ManufacturerString)
  83 004e F0E0      		ldi r31,hi8(ManufacturerString)
  84 0050 00C0      		rjmp .L17
  85               	.LVL7:
  86               	.L10:
  87               	.LBE3:
  88               	.LBB4:
 555:../../tmk_core_custom/protocol/lufa/descriptor.c ****                     break;
 556:../../tmk_core_custom/protocol/lufa/descriptor.c ****                 case 0x02:
 557:../../tmk_core_custom/protocol/lufa/descriptor.c ****                     Address = &ProductString;
 558:../../tmk_core_custom/protocol/lufa/descriptor.c ****                     Size    = pgm_read_byte(&ProductString.Header.Size);
  89               		.loc 1 558 0
  90 0052 E0E0      		ldi r30,lo8(ProductString)
  91 0054 F0E0      		ldi r31,hi8(ProductString)
  92               	.LVL8:
  93               	.L17:
  94               	/* #APP */
  95               	 ;  558 "../../tmk_core_custom/protocol/lufa/descriptor.c" 1
  96 0056 8491      		lpm r24, Z
  97               		
  98               	 ;  0 "" 2
  99               	.LVL9:
 100               	/* #NOAPP */
 101               	.LBE4:
 102 0058 90E0      		ldi r25,0
 103               	.LVL10:
 557:../../tmk_core_custom/protocol/lufa/descriptor.c ****                     Address = &ProductString;
 104               		.loc 1 557 0
 105 005a 9F01      		movw r18,r30
 559:../../tmk_core_custom/protocol/lufa/descriptor.c ****                     break;
 106               		.loc 1 559 0
 107 005c 00C0      		rjmp .L5
 108               	.LVL11:
 109               	.L7:
 110 005e 6530      		cpi r22,lo8(5)
 111 0060 00F4      		brsh .L15
 112 0062 E62F      		mov r30,r22
 113 0064 F0E0      		ldi r31,0
 114 0066 EE0F      		lsl r30
 115 0068 FF1F      		rol r31
 116 006a E050      		subi r30,lo8(-(CSWTCH.1))
 117 006c F040      		sbci r31,hi8(-(CSWTCH.1))
 118 006e 2081      		ld r18,Z
 119 0070 3181      		ldd r19,Z+1
 120 0072 89E0      		ldi r24,lo8(9)
 121 0074 90E0      		ldi r25,0
 122               	.LVL12:
 123 0076 00C0      		rjmp .L5
 124               	.LVL13:
 125               	.L8:
 126 0078 6530      		cpi r22,lo8(5)
 127 007a 00F4      		brsh .L15
 128 007c E62F      		mov r30,r22
 129 007e F0E0      		ldi r31,0
 130 0080 DF01      		movw r26,r30
 131 0082 AA0F      		lsl r26
 132 0084 BB1F      		rol r27
 133               	.LVL14:
 134 0086 A050      		subi r26,lo8(-(CSWTCH.2))
 135 0088 B040      		sbci r27,hi8(-(CSWTCH.2))
 136 008a 2D91      		ld r18,X+
 137 008c 3C91      		ld r19,X
 138 008e E050      		subi r30,lo8(-(CSWTCH.3))
 139 0090 F040      		sbci r31,hi8(-(CSWTCH.3))
 140 0092 8081      		ld r24,Z
 141 0094 90E0      		ldi r25,0
 142 0096 00C0      		rjmp .L5
 143               	.LVL15:
 144               	.L12:
 539:../../tmk_core_custom/protocol/lufa/descriptor.c ****             Size    = sizeof(USB_Descriptor_Device_t);
 145               		.loc 1 539 0
 146 0098 82E1      		ldi r24,lo8(18)
 147 009a 90E0      		ldi r25,0
 148               	.LVL16:
 538:../../tmk_core_custom/protocol/lufa/descriptor.c ****             Address = &DeviceDescriptor;
 149               		.loc 1 538 0
 150 009c 20E0      		ldi r18,lo8(DeviceDescriptor)
 151 009e 30E0      		ldi r19,hi8(DeviceDescriptor)
 152 00a0 00C0      		rjmp .L5
 153               	.L15:
 154 00a2 80E0      		ldi r24,0
 155 00a4 90E0      		ldi r25,0
 156 00a6 20E0      		ldi r18,0
 157 00a8 30E0      		ldi r19,0
 158               	.LVL17:
 159               	.L5:
 560:../../tmk_core_custom/protocol/lufa/descriptor.c ****             }
 561:../../tmk_core_custom/protocol/lufa/descriptor.c ****             break;
 562:../../tmk_core_custom/protocol/lufa/descriptor.c ****         case HID_DTYPE_HID:
 563:../../tmk_core_custom/protocol/lufa/descriptor.c ****             switch (wIndex) {
 564:../../tmk_core_custom/protocol/lufa/descriptor.c ****             case KEYBOARD_INTERFACE:
 565:../../tmk_core_custom/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Keyboard_HID;
 566:../../tmk_core_custom/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 567:../../tmk_core_custom/protocol/lufa/descriptor.c ****                 break;
 568:../../tmk_core_custom/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
 569:../../tmk_core_custom/protocol/lufa/descriptor.c ****             case MOUSE_INTERFACE:
 570:../../tmk_core_custom/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Mouse_HID;
 571:../../tmk_core_custom/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 572:../../tmk_core_custom/protocol/lufa/descriptor.c ****                 break;
 573:../../tmk_core_custom/protocol/lufa/descriptor.c **** #endif
 574:../../tmk_core_custom/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 575:../../tmk_core_custom/protocol/lufa/descriptor.c ****             case EXTRAKEY_INTERFACE:
 576:../../tmk_core_custom/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Extrakey_HID;
 577:../../tmk_core_custom/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 578:../../tmk_core_custom/protocol/lufa/descriptor.c ****                 break;
 579:../../tmk_core_custom/protocol/lufa/descriptor.c **** #endif
 580:../../tmk_core_custom/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 581:../../tmk_core_custom/protocol/lufa/descriptor.c ****             case CONSOLE_INTERFACE:
 582:../../tmk_core_custom/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.Console_HID;
 583:../../tmk_core_custom/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 584:../../tmk_core_custom/protocol/lufa/descriptor.c ****                 break;
 585:../../tmk_core_custom/protocol/lufa/descriptor.c **** #endif
 586:../../tmk_core_custom/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 587:../../tmk_core_custom/protocol/lufa/descriptor.c ****             case NKRO_INTERFACE:
 588:../../tmk_core_custom/protocol/lufa/descriptor.c ****                 Address = &ConfigurationDescriptor.NKRO_HID;
 589:../../tmk_core_custom/protocol/lufa/descriptor.c ****                 Size    = sizeof(USB_HID_Descriptor_HID_t);
 590:../../tmk_core_custom/protocol/lufa/descriptor.c ****                 break;
 591:../../tmk_core_custom/protocol/lufa/descriptor.c **** #endif
 592:../../tmk_core_custom/protocol/lufa/descriptor.c ****             }
 593:../../tmk_core_custom/protocol/lufa/descriptor.c ****             break;
 594:../../tmk_core_custom/protocol/lufa/descriptor.c ****         case HID_DTYPE_Report:
 595:../../tmk_core_custom/protocol/lufa/descriptor.c ****             switch (wIndex) {
 596:../../tmk_core_custom/protocol/lufa/descriptor.c ****             case KEYBOARD_INTERFACE:
 597:../../tmk_core_custom/protocol/lufa/descriptor.c ****                 Address = &KeyboardReport;
 598:../../tmk_core_custom/protocol/lufa/descriptor.c ****                 Size    = sizeof(KeyboardReport);
 599:../../tmk_core_custom/protocol/lufa/descriptor.c ****                 break;
 600:../../tmk_core_custom/protocol/lufa/descriptor.c **** #ifdef MOUSE_ENABLE
 601:../../tmk_core_custom/protocol/lufa/descriptor.c ****             case MOUSE_INTERFACE:
 602:../../tmk_core_custom/protocol/lufa/descriptor.c ****                 Address = &MouseReport;
 603:../../tmk_core_custom/protocol/lufa/descriptor.c ****                 Size    = sizeof(MouseReport);
 604:../../tmk_core_custom/protocol/lufa/descriptor.c ****                 break;
 605:../../tmk_core_custom/protocol/lufa/descriptor.c **** #endif
 606:../../tmk_core_custom/protocol/lufa/descriptor.c **** #ifdef EXTRAKEY_ENABLE
 607:../../tmk_core_custom/protocol/lufa/descriptor.c ****             case EXTRAKEY_INTERFACE:
 608:../../tmk_core_custom/protocol/lufa/descriptor.c ****                 Address = &ExtrakeyReport;
 609:../../tmk_core_custom/protocol/lufa/descriptor.c ****                 Size    = sizeof(ExtrakeyReport);
 610:../../tmk_core_custom/protocol/lufa/descriptor.c ****                 break;
 611:../../tmk_core_custom/protocol/lufa/descriptor.c **** #endif
 612:../../tmk_core_custom/protocol/lufa/descriptor.c **** #ifdef CONSOLE_ENABLE
 613:../../tmk_core_custom/protocol/lufa/descriptor.c ****             case CONSOLE_INTERFACE:
 614:../../tmk_core_custom/protocol/lufa/descriptor.c ****                 Address = &ConsoleReport;
 615:../../tmk_core_custom/protocol/lufa/descriptor.c ****                 Size    = sizeof(ConsoleReport);
 616:../../tmk_core_custom/protocol/lufa/descriptor.c ****                 break;
 617:../../tmk_core_custom/protocol/lufa/descriptor.c **** #endif
 618:../../tmk_core_custom/protocol/lufa/descriptor.c **** #ifdef NKRO_ENABLE
 619:../../tmk_core_custom/protocol/lufa/descriptor.c ****             case NKRO_INTERFACE:
 620:../../tmk_core_custom/protocol/lufa/descriptor.c ****                 Address = &NKROReport;
 621:../../tmk_core_custom/protocol/lufa/descriptor.c ****                 Size    = sizeof(NKROReport);
 622:../../tmk_core_custom/protocol/lufa/descriptor.c ****                 break;
 623:../../tmk_core_custom/protocol/lufa/descriptor.c **** #endif
 624:../../tmk_core_custom/protocol/lufa/descriptor.c ****             }
 625:../../tmk_core_custom/protocol/lufa/descriptor.c ****             break;
 626:../../tmk_core_custom/protocol/lufa/descriptor.c ****     }
 627:../../tmk_core_custom/protocol/lufa/descriptor.c **** 
 628:../../tmk_core_custom/protocol/lufa/descriptor.c ****     *DescriptorAddress = Address;
 160               		.loc 1 628 0
 161 00aa FA01      		movw r30,r20
 162 00ac 3183      		std Z+1,r19
 163 00ae 2083      		st Z,r18
 629:../../tmk_core_custom/protocol/lufa/descriptor.c ****     return Size;
 630:../../tmk_core_custom/protocol/lufa/descriptor.c **** }
 164               		.loc 1 630 0
 165 00b0 0895      		ret
 166               		.cfi_endproc
 167               	.LFE100:
 169               		.section	.rodata.CSWTCH.3,"a",@progbits
 172               	CSWTCH.3:
 173 0000 3F        		.byte	63
 174 0001 4D        		.byte	77
 175 0002 36        		.byte	54
 176 0003 20        		.byte	32
 177 0004 39        		.byte	57
 178               		.section	.rodata.CSWTCH.2,"a",@progbits
 181               	CSWTCH.2:
 182 0000 0000      		.word	KeyboardReport
 183 0002 0000      		.word	MouseReport
 184 0004 0000      		.word	ExtrakeyReport
 185 0006 0000      		.word	ConsoleReport
 186 0008 0000      		.word	NKROReport
 187               		.section	.rodata.CSWTCH.1,"a",@progbits
 190               	CSWTCH.1:
 191 0000 0000      		.word	ConfigurationDescriptor+18
 192 0002 0000      		.word	ConfigurationDescriptor+43
 193 0004 0000      		.word	ConfigurationDescriptor+68
 194 0006 0000      		.word	ConfigurationDescriptor+93
 195 0008 0000      		.word	ConfigurationDescriptor+125
 196               	.global	ProductString
 197               		.section	.progmem.data.ProductString,"a",@progbits
 200               	ProductString:
 201 0000 0C        		.byte	12
 202 0001 03        		.byte	3
 203 0002 4700      		.string	"G"
 204 0004 4800      		.string	"H"
 205 0006 5000      		.string	"P"
 206 0008 6100      		.string	"a"
 207 000a 6400      		.string	"d"
 208 000c 00        		.string	""
 209 000d 00        		.string	""
 210               	.global	ManufacturerString
 211               		.section	.progmem.data.ManufacturerString,"a",@progbits
 214               	ManufacturerString:
 215 0000 12        		.byte	18
 216 0001 03        		.byte	3
 217 0002 6700      		.string	"g"
 218 0004 6500      		.string	"e"
 219 0006 6500      		.string	"e"
 220 0008 6B00      		.string	"k"
 221 000a 6800      		.string	"h"
 222 000c 6100      		.string	"a"
 223 000e 6300      		.string	"c"
 224 0010 6B00      		.string	"k"
 225 0012 00        		.string	""
 226 0013 00        		.string	""
 227               	.global	LanguageString
 228               		.section	.progmem.data.LanguageString,"a",@progbits
 231               	LanguageString:
 232 0000 04        		.byte	4
 233 0001 03        		.byte	3
 234 0002 0904      		.word	1033
 235               	.global	ConfigurationDescriptor
 236               		.section	.progmem.data.ConfigurationDescriptor,"a",@progbits
 239               	ConfigurationDescriptor:
 240 0000 09        		.byte	9
 241 0001 02        		.byte	2
 242 0002 8D00      		.word	141
 243 0004 05        		.byte	5
 244 0005 01        		.byte	1
 245 0006 00        		.byte	0
 246 0007 A0        		.byte	-96
 247 0008 32        		.byte	50
 248 0009 09        		.byte	9
 249 000a 04        		.byte	4
 250 000b 00        		.byte	0
 251 000c 00        		.byte	0
 252 000d 01        		.byte	1
 253 000e 03        		.byte	3
 254 000f 01        		.byte	1
 255 0010 01        		.byte	1
 256 0011 00        		.byte	0
 257 0012 09        		.byte	9
 258 0013 21        		.byte	33
 259 0014 1101      		.word	273
 260 0016 00        		.byte	0
 261 0017 01        		.byte	1
 262 0018 22        		.byte	34
 263 0019 3F00      		.word	63
 264 001b 07        		.byte	7
 265 001c 05        		.byte	5
 266 001d 81        		.byte	-127
 267 001e 03        		.byte	3
 268 001f 0800      		.word	8
 269 0021 0A        		.byte	10
 270 0022 09        		.byte	9
 271 0023 04        		.byte	4
 272 0024 01        		.byte	1
 273 0025 00        		.byte	0
 274 0026 01        		.byte	1
 275 0027 03        		.byte	3
 276 0028 01        		.byte	1
 277 0029 02        		.byte	2
 278 002a 00        		.byte	0
 279 002b 09        		.byte	9
 280 002c 21        		.byte	33
 281 002d 1101      		.word	273
 282 002f 00        		.byte	0
 283 0030 01        		.byte	1
 284 0031 22        		.byte	34
 285 0032 4D00      		.word	77
 286 0034 07        		.byte	7
 287 0035 05        		.byte	5
 288 0036 82        		.byte	-126
 289 0037 03        		.byte	3
 290 0038 0800      		.word	8
 291 003a 0A        		.byte	10
 292 003b 09        		.byte	9
 293 003c 04        		.byte	4
 294 003d 02        		.byte	2
 295 003e 00        		.byte	0
 296 003f 01        		.byte	1
 297 0040 03        		.byte	3
 298 0041 00        		.byte	0
 299 0042 00        		.byte	0
 300 0043 00        		.byte	0
 301 0044 09        		.byte	9
 302 0045 21        		.byte	33
 303 0046 1101      		.word	273
 304 0048 00        		.byte	0
 305 0049 01        		.byte	1
 306 004a 22        		.byte	34
 307 004b 3600      		.word	54
 308 004d 07        		.byte	7
 309 004e 05        		.byte	5
 310 004f 83        		.byte	-125
 311 0050 03        		.byte	3
 312 0051 0800      		.word	8
 313 0053 0A        		.byte	10
 314 0054 09        		.byte	9
 315 0055 04        		.byte	4
 316 0056 03        		.byte	3
 317 0057 00        		.byte	0
 318 0058 02        		.byte	2
 319 0059 03        		.byte	3
 320 005a 00        		.byte	0
 321 005b 00        		.byte	0
 322 005c 00        		.byte	0
 323 005d 09        		.byte	9
 324 005e 21        		.byte	33
 325 005f 1101      		.word	273
 326 0061 00        		.byte	0
 327 0062 01        		.byte	1
 328 0063 22        		.byte	34
 329 0064 2000      		.word	32
 330 0066 07        		.byte	7
 331 0067 05        		.byte	5
 332 0068 84        		.byte	-124
 333 0069 03        		.byte	3
 334 006a 2000      		.word	32
 335 006c 01        		.byte	1
 336 006d 07        		.byte	7
 337 006e 05        		.byte	5
 338 006f 04        		.byte	4
 339 0070 03        		.byte	3
 340 0071 2000      		.word	32
 341 0073 01        		.byte	1
 342 0074 09        		.byte	9
 343 0075 04        		.byte	4
 344 0076 04        		.byte	4
 345 0077 00        		.byte	0
 346 0078 01        		.byte	1
 347 0079 03        		.byte	3
 348 007a 00        		.byte	0
 349 007b 00        		.byte	0
 350 007c 00        		.byte	0
 351 007d 09        		.byte	9
 352 007e 21        		.byte	33
 353 007f 1101      		.word	273
 354 0081 00        		.byte	0
 355 0082 01        		.byte	1
 356 0083 22        		.byte	34
 357 0084 3900      		.word	57
 358 0086 07        		.byte	7
 359 0087 05        		.byte	5
 360 0088 85        		.byte	-123
 361 0089 03        		.byte	3
 362 008a 1000      		.word	16
 363 008c 01        		.byte	1
 364               	.global	DeviceDescriptor
 365               		.section	.progmem.data.DeviceDescriptor,"a",@progbits
 368               	DeviceDescriptor:
 369 0000 12        		.byte	18
 370 0001 01        		.byte	1
 371 0002 1001      		.word	272
 372 0004 00        		.byte	0
 373 0005 00        		.byte	0
 374 0006 00        		.byte	0
 375 0007 08        		.byte	8
 376 0008 EDFE      		.word	-275
 377 000a 1010      		.word	4112
 378 000c 0200      		.word	2
 379 000e 01        		.byte	1
 380 000f 02        		.byte	2
 381 0010 00        		.byte	0
 382 0011 01        		.byte	1
 383               	.global	NKROReport
 384               		.section	.progmem.data.NKROReport,"a",@progbits
 387               	NKROReport:
 388 0000 05        		.byte	5
 389 0001 01        		.byte	1
 390 0002 09        		.byte	9
 391 0003 06        		.byte	6
 392 0004 A1        		.byte	-95
 393 0005 01        		.byte	1
 394 0006 05        		.byte	5
 395 0007 07        		.byte	7
 396 0008 19        		.byte	25
 397 0009 E0        		.byte	-32
 398 000a 29        		.byte	41
 399 000b E7        		.byte	-25
 400 000c 15        		.byte	21
 401 000d 00        		.byte	0
 402 000e 25        		.byte	37
 403 000f 01        		.byte	1
 404 0010 95        		.byte	-107
 405 0011 08        		.byte	8
 406 0012 75        		.byte	117
 407 0013 01        		.byte	1
 408 0014 81        		.byte	-127
 409 0015 02        		.byte	2
 410 0016 05        		.byte	5
 411 0017 08        		.byte	8
 412 0018 19        		.byte	25
 413 0019 01        		.byte	1
 414 001a 29        		.byte	41
 415 001b 05        		.byte	5
 416 001c 95        		.byte	-107
 417 001d 05        		.byte	5
 418 001e 75        		.byte	117
 419 001f 01        		.byte	1
 420 0020 91        		.byte	-111
 421 0021 02        		.byte	2
 422 0022 95        		.byte	-107
 423 0023 01        		.byte	1
 424 0024 75        		.byte	117
 425 0025 03        		.byte	3
 426 0026 91        		.byte	-111
 427 0027 01        		.byte	1
 428 0028 05        		.byte	5
 429 0029 07        		.byte	7
 430 002a 19        		.byte	25
 431 002b 00        		.byte	0
 432 002c 29        		.byte	41
 433 002d 77        		.byte	119
 434 002e 15        		.byte	21
 435 002f 00        		.byte	0
 436 0030 25        		.byte	37
 437 0031 01        		.byte	1
 438 0032 95        		.byte	-107
 439 0033 78        		.byte	120
 440 0034 75        		.byte	117
 441 0035 01        		.byte	1
 442 0036 81        		.byte	-127
 443 0037 02        		.byte	2
 444 0038 C0        		.byte	-64
 445               	.global	ConsoleReport
 446               		.section	.progmem.data.ConsoleReport,"a",@progbits
 449               	ConsoleReport:
 450 0000 06        		.byte	6
 451 0001 31        		.byte	49
 452 0002 FF        		.byte	-1
 453 0003 09        		.byte	9
 454 0004 74        		.byte	116
 455 0005 A1        		.byte	-95
 456 0006 01        		.byte	1
 457 0007 09        		.byte	9
 458 0008 75        		.byte	117
 459 0009 15        		.byte	21
 460 000a 00        		.byte	0
 461 000b 25        		.byte	37
 462 000c FF        		.byte	-1
 463 000d 95        		.byte	-107
 464 000e 20        		.byte	32
 465 000f 75        		.byte	117
 466 0010 08        		.byte	8
 467 0011 81        		.byte	-127
 468 0012 02        		.byte	2
 469 0013 09        		.byte	9
 470 0014 76        		.byte	118
 471 0015 15        		.byte	21
 472 0016 00        		.byte	0
 473 0017 25        		.byte	37
 474 0018 FF        		.byte	-1
 475 0019 95        		.byte	-107
 476 001a 20        		.byte	32
 477 001b 75        		.byte	117
 478 001c 08        		.byte	8
 479 001d 91        		.byte	-111
 480 001e 02        		.byte	2
 481 001f C0        		.byte	-64
 482               	.global	ExtrakeyReport
 483               		.section	.progmem.data.ExtrakeyReport,"a",@progbits
 486               	ExtrakeyReport:
 487 0000 05        		.byte	5
 488 0001 01        		.byte	1
 489 0002 09        		.byte	9
 490 0003 80        		.byte	-128
 491 0004 A1        		.byte	-95
 492 0005 01        		.byte	1
 493 0006 85        		.byte	-123
 494 0007 02        		.byte	2
 495 0008 16        		.byte	22
 496 0009 01        		.byte	1
 497 000a 00        		.byte	0
 498 000b 26        		.byte	38
 499 000c B7        		.byte	-73
 500 000d 00        		.byte	0
 501 000e 1A        		.byte	26
 502 000f 01        		.byte	1
 503 0010 00        		.byte	0
 504 0011 2A        		.byte	42
 505 0012 B7        		.byte	-73
 506 0013 00        		.byte	0
 507 0014 75        		.byte	117
 508 0015 10        		.byte	16
 509 0016 95        		.byte	-107
 510 0017 01        		.byte	1
 511 0018 81        		.byte	-127
 512 0019 00        		.byte	0
 513 001a C0        		.byte	-64
 514 001b 05        		.byte	5
 515 001c 0C        		.byte	12
 516 001d 09        		.byte	9
 517 001e 01        		.byte	1
 518 001f A1        		.byte	-95
 519 0020 01        		.byte	1
 520 0021 85        		.byte	-123
 521 0022 03        		.byte	3
 522 0023 16        		.byte	22
 523 0024 01        		.byte	1
 524 0025 00        		.byte	0
 525 0026 26        		.byte	38
 526 0027 9C        		.byte	-100
 527 0028 02        		.byte	2
 528 0029 1A        		.byte	26
 529 002a 01        		.byte	1
 530 002b 00        		.byte	0
 531 002c 2A        		.byte	42
 532 002d 9C        		.byte	-100
 533 002e 02        		.byte	2
 534 002f 75        		.byte	117
 535 0030 10        		.byte	16
 536 0031 95        		.byte	-107
 537 0032 01        		.byte	1
 538 0033 81        		.byte	-127
 539 0034 00        		.byte	0
 540 0035 C0        		.byte	-64
 541               	.global	MouseReport
 542               		.section	.progmem.data.MouseReport,"a",@progbits
 545               	MouseReport:
 546 0000 05        		.byte	5
 547 0001 01        		.byte	1
 548 0002 09        		.byte	9
 549 0003 02        		.byte	2
 550 0004 A1        		.byte	-95
 551 0005 01        		.byte	1
 552 0006 09        		.byte	9
 553 0007 01        		.byte	1
 554 0008 A1        		.byte	-95
 555 0009 00        		.byte	0
 556 000a 05        		.byte	5
 557 000b 09        		.byte	9
 558 000c 19        		.byte	25
 559 000d 01        		.byte	1
 560 000e 29        		.byte	41
 561 000f 05        		.byte	5
 562 0010 15        		.byte	21
 563 0011 00        		.byte	0
 564 0012 25        		.byte	37
 565 0013 01        		.byte	1
 566 0014 95        		.byte	-107
 567 0015 05        		.byte	5
 568 0016 75        		.byte	117
 569 0017 01        		.byte	1
 570 0018 81        		.byte	-127
 571 0019 02        		.byte	2
 572 001a 95        		.byte	-107
 573 001b 01        		.byte	1
 574 001c 75        		.byte	117
 575 001d 03        		.byte	3
 576 001e 81        		.byte	-127
 577 001f 01        		.byte	1
 578 0020 05        		.byte	5
 579 0021 01        		.byte	1
 580 0022 09        		.byte	9
 581 0023 30        		.byte	48
 582 0024 09        		.byte	9
 583 0025 31        		.byte	49
 584 0026 15        		.byte	21
 585 0027 81        		.byte	-127
 586 0028 25        		.byte	37
 587 0029 7F        		.byte	127
 588 002a 95        		.byte	-107
 589 002b 02        		.byte	2
 590 002c 75        		.byte	117
 591 002d 08        		.byte	8
 592 002e 81        		.byte	-127
 593 002f 06        		.byte	6
 594 0030 09        		.byte	9
 595 0031 38        		.byte	56
 596 0032 15        		.byte	21
 597 0033 81        		.byte	-127
 598 0034 25        		.byte	37
 599 0035 7F        		.byte	127
 600 0036 95        		.byte	-107
 601 0037 01        		.byte	1
 602 0038 75        		.byte	117
 603 0039 08        		.byte	8
 604 003a 81        		.byte	-127
 605 003b 06        		.byte	6
 606 003c 05        		.byte	5
 607 003d 0C        		.byte	12
 608 003e 0A        		.byte	10
 609 003f 38        		.byte	56
 610 0040 02        		.byte	2
 611 0041 15        		.byte	21
 612 0042 81        		.byte	-127
 613 0043 25        		.byte	37
 614 0044 7F        		.byte	127
 615 0045 95        		.byte	-107
 616 0046 01        		.byte	1
 617 0047 75        		.byte	117
 618 0048 08        		.byte	8
 619 0049 81        		.byte	-127
 620 004a 06        		.byte	6
 621 004b C0        		.byte	-64
 622 004c C0        		.byte	-64
 623               	.global	KeyboardReport
 624               		.section	.progmem.data.KeyboardReport,"a",@progbits
 627               	KeyboardReport:
 628 0000 05        		.byte	5
 629 0001 01        		.byte	1
 630 0002 09        		.byte	9
 631 0003 06        		.byte	6
 632 0004 A1        		.byte	-95
 633 0005 01        		.byte	1
 634 0006 05        		.byte	5
 635 0007 07        		.byte	7
 636 0008 19        		.byte	25
 637 0009 E0        		.byte	-32
 638 000a 29        		.byte	41
 639 000b E7        		.byte	-25
 640 000c 15        		.byte	21
 641 000d 00        		.byte	0
 642 000e 25        		.byte	37
 643 000f 01        		.byte	1
 644 0010 95        		.byte	-107
 645 0011 08        		.byte	8
 646 0012 75        		.byte	117
 647 0013 01        		.byte	1
 648 0014 81        		.byte	-127
 649 0015 02        		.byte	2
 650 0016 95        		.byte	-107
 651 0017 01        		.byte	1
 652 0018 75        		.byte	117
 653 0019 08        		.byte	8
 654 001a 81        		.byte	-127
 655 001b 01        		.byte	1
 656 001c 05        		.byte	5
 657 001d 08        		.byte	8
 658 001e 19        		.byte	25
 659 001f 01        		.byte	1
 660 0020 29        		.byte	41
 661 0021 05        		.byte	5
 662 0022 95        		.byte	-107
 663 0023 05        		.byte	5
 664 0024 75        		.byte	117
 665 0025 01        		.byte	1
 666 0026 91        		.byte	-111
 667 0027 02        		.byte	2
 668 0028 95        		.byte	-107
 669 0029 01        		.byte	1
 670 002a 75        		.byte	117
 671 002b 03        		.byte	3
 672 002c 91        		.byte	-111
 673 002d 01        		.byte	1
 674 002e 05        		.byte	5
 675 002f 07        		.byte	7
 676 0030 19        		.byte	25
 677 0031 00        		.byte	0
 678 0032 29        		.byte	41
 679 0033 FF        		.byte	-1
 680 0034 15        		.byte	21
 681 0035 00        		.byte	0
 682 0036 25        		.byte	37
 683 0037 FF        		.byte	-1
 684 0038 95        		.byte	-107
 685 0039 06        		.byte	6
 686 003a 75        		.byte	117
 687 003b 08        		.byte	8
 688 003c 81        		.byte	-127
 689 003d 00        		.byte	0
 690 003e C0        		.byte	-64
 691               		.text
 692               	.Letext0:
 693               		.file 2 "/usr/local/CrossPack-AVR-20131216/avr/include/stdint.h"
 694               		.file 3 "/usr/local/CrossPack-AVR-20131216/lib/gcc/avr/4.8.1/include/stddef.h"
 695               		.file 4 "../../tmk_core_custom/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/AVR8/../StdDescriptors
 696               		.file 5 "../../tmk_core_custom/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Class/Device/../Common/HIDC
 697               		.file 6 "../../tmk_core_custom/protocol/lufa/descriptor.h"
 698               		.file 7 "../../tmk_core_custom/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
DEFINED SYMBOLS
                            *ABS*:00000000 descriptor.c
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//cc2GzMw3.s:2      *ABS*:0000003e __SP_H__
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//cc2GzMw3.s:3      *ABS*:0000003d __SP_L__
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//cc2GzMw3.s:4      *ABS*:0000003f __SREG__
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//cc2GzMw3.s:5      *ABS*:00000000 __tmp_reg__
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//cc2GzMw3.s:6      *ABS*:00000001 __zero_reg__
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//cc2GzMw3.s:13     .text.CALLBACK_USB_GetDescriptor:00000000 CALLBACK_USB_GetDescriptor
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//cc2GzMw3.s:239    .progmem.data.ConfigurationDescriptor:00000000 ConfigurationDescriptor
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//cc2GzMw3.s:231    .progmem.data.LanguageString:00000000 LanguageString
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//cc2GzMw3.s:214    .progmem.data.ManufacturerString:00000000 ManufacturerString
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//cc2GzMw3.s:200    .progmem.data.ProductString:00000000 ProductString
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//cc2GzMw3.s:190    .rodata.CSWTCH.1:00000000 CSWTCH.1
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//cc2GzMw3.s:181    .rodata.CSWTCH.2:00000000 CSWTCH.2
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//cc2GzMw3.s:172    .rodata.CSWTCH.3:00000000 CSWTCH.3
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//cc2GzMw3.s:368    .progmem.data.DeviceDescriptor:00000000 DeviceDescriptor
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//cc2GzMw3.s:627    .progmem.data.KeyboardReport:00000000 KeyboardReport
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//cc2GzMw3.s:545    .progmem.data.MouseReport:00000000 MouseReport
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//cc2GzMw3.s:486    .progmem.data.ExtrakeyReport:00000000 ExtrakeyReport
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//cc2GzMw3.s:449    .progmem.data.ConsoleReport:00000000 ConsoleReport
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//cc2GzMw3.s:387    .progmem.data.NKROReport:00000000 NKROReport

UNDEFINED SYMBOLS
__do_copy_data
