   1               		.file	"keymap_common.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.matrix_power_up,"ax",@progbits
  11               		.weak	matrix_power_up
  13               	matrix_power_up:
  14               	.LFB4:
  15               		.file 1 "../../tmk_core_custom/common/keyboard.h"
   1:../../tmk_core_custom/common/keyboard.h **** /*
   2:../../tmk_core_custom/common/keyboard.h **** Copyright 2011,2012,2013 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core_custom/common/keyboard.h **** 
   4:../../tmk_core_custom/common/keyboard.h **** This program is free software: you can redistribute it and/or modify
   5:../../tmk_core_custom/common/keyboard.h **** it under the terms of the GNU General Public License as published by
   6:../../tmk_core_custom/common/keyboard.h **** the Free Software Foundation, either version 2 of the License, or
   7:../../tmk_core_custom/common/keyboard.h **** (at your option) any later version.
   8:../../tmk_core_custom/common/keyboard.h **** 
   9:../../tmk_core_custom/common/keyboard.h **** This program is distributed in the hope that it will be useful,
  10:../../tmk_core_custom/common/keyboard.h **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../tmk_core_custom/common/keyboard.h **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../tmk_core_custom/common/keyboard.h **** GNU General Public License for more details.
  13:../../tmk_core_custom/common/keyboard.h **** 
  14:../../tmk_core_custom/common/keyboard.h **** You should have received a copy of the GNU General Public License
  15:../../tmk_core_custom/common/keyboard.h **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../tmk_core_custom/common/keyboard.h **** */
  17:../../tmk_core_custom/common/keyboard.h **** 
  18:../../tmk_core_custom/common/keyboard.h **** #ifndef KEYBOARD_H
  19:../../tmk_core_custom/common/keyboard.h **** #define KEYBOARD_H
  20:../../tmk_core_custom/common/keyboard.h **** 
  21:../../tmk_core_custom/common/keyboard.h **** #include <stdbool.h>
  22:../../tmk_core_custom/common/keyboard.h **** #include <stdint.h>
  23:../../tmk_core_custom/common/keyboard.h **** 
  24:../../tmk_core_custom/common/keyboard.h **** 
  25:../../tmk_core_custom/common/keyboard.h **** #ifdef __cplusplus
  26:../../tmk_core_custom/common/keyboard.h **** extern "C" {
  27:../../tmk_core_custom/common/keyboard.h **** #endif
  28:../../tmk_core_custom/common/keyboard.h **** 
  29:../../tmk_core_custom/common/keyboard.h **** /* key matrix position */
  30:../../tmk_core_custom/common/keyboard.h **** typedef struct {
  31:../../tmk_core_custom/common/keyboard.h ****     uint8_t col;
  32:../../tmk_core_custom/common/keyboard.h ****     uint8_t row;
  33:../../tmk_core_custom/common/keyboard.h **** } keypos_t;
  34:../../tmk_core_custom/common/keyboard.h **** 
  35:../../tmk_core_custom/common/keyboard.h **** /* key event */
  36:../../tmk_core_custom/common/keyboard.h **** typedef struct {
  37:../../tmk_core_custom/common/keyboard.h ****     keypos_t key;
  38:../../tmk_core_custom/common/keyboard.h ****     bool     pressed;
  39:../../tmk_core_custom/common/keyboard.h ****     uint16_t time;
  40:../../tmk_core_custom/common/keyboard.h **** } keyevent_t;
  41:../../tmk_core_custom/common/keyboard.h **** 
  42:../../tmk_core_custom/common/keyboard.h **** /* equivalent test of keypos_t */
  43:../../tmk_core_custom/common/keyboard.h **** #define KEYEQ(keya, keyb)       ((keya).row == (keyb).row && (keya).col == (keyb).col)
  44:../../tmk_core_custom/common/keyboard.h **** 
  45:../../tmk_core_custom/common/keyboard.h **** /* Rules for No Event:
  46:../../tmk_core_custom/common/keyboard.h ****  * 1) (time == 0) to handle (keyevent_t){} as empty event
  47:../../tmk_core_custom/common/keyboard.h ****  * 2) Matrix(255, 255) to make TICK event available
  48:../../tmk_core_custom/common/keyboard.h ****  */
  49:../../tmk_core_custom/common/keyboard.h **** static inline bool IS_NOEVENT(keyevent_t event) { return event.time == 0 || (event.key.row == 255 &
  50:../../tmk_core_custom/common/keyboard.h **** static inline bool IS_PRESSED(keyevent_t event) { return (!IS_NOEVENT(event) && event.pressed); }
  51:../../tmk_core_custom/common/keyboard.h **** static inline bool IS_RELEASED(keyevent_t event) { return (!IS_NOEVENT(event) && !event.pressed); }
  52:../../tmk_core_custom/common/keyboard.h **** 
  53:../../tmk_core_custom/common/keyboard.h **** /* Tick event */
  54:../../tmk_core_custom/common/keyboard.h **** #define TICK                    (keyevent_t){           \
  55:../../tmk_core_custom/common/keyboard.h ****     .key = (keypos_t){ .row = 255, .col = 255 },           \
  56:../../tmk_core_custom/common/keyboard.h ****     .pressed = false,                                   \
  57:../../tmk_core_custom/common/keyboard.h ****     .time = (timer_read() | 1)                          \
  58:../../tmk_core_custom/common/keyboard.h **** }
  59:../../tmk_core_custom/common/keyboard.h **** 
  60:../../tmk_core_custom/common/keyboard.h **** 
  61:../../tmk_core_custom/common/keyboard.h **** void keyboard_init(void);
  62:../../tmk_core_custom/common/keyboard.h **** void keyboard_task(void);
  63:../../tmk_core_custom/common/keyboard.h **** void keyboard_set_leds(uint8_t leds);
  64:../../tmk_core_custom/common/keyboard.h **** 
  65:../../tmk_core_custom/common/keyboard.h **** __attribute__ ((weak)) void matrix_power_up(void) {}
  16               		.loc 1 65 0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  22 0000 0895      		ret
  23               		.cfi_endproc
  24               	.LFE4:
  26               		.section	.text.matrix_power_down,"ax",@progbits
  27               		.weak	matrix_power_down
  29               	matrix_power_down:
  30               	.LFB5:
  66:../../tmk_core_custom/common/keyboard.h **** __attribute__ ((weak)) void matrix_power_down(void) {}
  31               		.loc 1 66 0
  32               		.cfi_startproc
  33               	/* prologue: function */
  34               	/* frame size = 0 */
  35               	/* stack size = 0 */
  36               	.L__stack_usage = 0
  37 0000 0895      		ret
  38               		.cfi_endproc
  39               	.LFE5:
  41               		.section	.text.keymap_key_to_keycode,"ax",@progbits
  42               	.global	keymap_key_to_keycode
  44               	keymap_key_to_keycode:
  45               	.LFB105:
  46               		.file 2 "keymap_common.c"
   1:keymap_common.c **** /*
   2:keymap_common.c **** Copyright 2012,2013 Jun Wako <wakojun@gmail.com>
   3:keymap_common.c **** 
   4:keymap_common.c **** This program is free software: you can redistribute it and/or modify
   5:keymap_common.c **** it under the terms of the GNU General Public License as published by
   6:keymap_common.c **** the Free Software Foundation, either version 2 of the License, or
   7:keymap_common.c **** (at your option) any later version.
   8:keymap_common.c **** 
   9:keymap_common.c **** This program is distributed in the hope that it will be useful,
  10:keymap_common.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:keymap_common.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:keymap_common.c **** GNU General Public License for more details.
  13:keymap_common.c **** 
  14:keymap_common.c **** You should have received a copy of the GNU General Public License
  15:keymap_common.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:keymap_common.c **** */
  17:keymap_common.c **** #include "keymap_common.h"
  18:keymap_common.c **** 
  19:keymap_common.c **** /* translates key to keycode */
  20:keymap_common.c **** uint8_t keymap_key_to_keycode(uint8_t layer, keypos_t key)
  21:keymap_common.c **** {
  47               		.loc 2 21 0
  48               		.cfi_startproc
  49               	.LVL0:
  50               	/* prologue: function */
  51               	/* frame size = 0 */
  52               	/* stack size = 0 */
  53               	.L__stack_usage = 0
  54               	.LBB2:
  22:keymap_common.c **** #ifndef KEYMAP_IN_EEPROM_ENABLE
  23:keymap_common.c ****     return pgm_read_byte(&keymaps[(layer)][(key.row)][(key.col)]);
  55               		.loc 2 23 0
  56 0000 E72F      		mov r30,r23
  57 0002 F0E0      		ldi r31,0
  58 0004 96E0      		ldi r25,lo8(6)
  59 0006 899F      		mul r24,r25
  60 0008 E00D      		add r30,r0
  61 000a F11D      		adc r31,r1
  62 000c 1124      		clr __zero_reg__
  63 000e EE0F      		lsl r30
  64 0010 FF1F      		rol r31
  65 0012 EE0F      		lsl r30
  66 0014 FF1F      		rol r31
  67               	.LVL1:
  68 0016 E60F      		add r30,r22
  69 0018 F11D      		adc r31,__zero_reg__
  70 001a E050      		subi r30,lo8(-(keymaps))
  71 001c F040      		sbci r31,hi8(-(keymaps))
  72               	/* #APP */
  73               	 ;  23 "keymap_common.c" 1
  74 001e 8491      		lpm r24, Z
  75               		
  76               	 ;  0 "" 2
  77               	.LVL2:
  78               	/* #NOAPP */
  79               	.LBE2:
  24:keymap_common.c **** #else
  25:keymap_common.c ****     return eeconfig_read_keymap_key(layer, key.row, key.col);
  26:keymap_common.c **** #endif
  27:keymap_common.c **** }
  80               		.loc 2 27 0
  81 0020 0895      		ret
  82               		.cfi_endproc
  83               	.LFE105:
  85               		.section	.text.keymap_fn_to_action,"ax",@progbits
  86               	.global	keymap_fn_to_action
  88               	keymap_fn_to_action:
  89               	.LFB106:
  28:keymap_common.c **** 
  29:keymap_common.c **** /* translates Fn keycode to action */
  30:keymap_common.c **** action_t keymap_fn_to_action(uint8_t keycode)
  31:keymap_common.c **** {
  90               		.loc 2 31 0
  91               		.cfi_startproc
  92               	.LVL3:
  93               	/* prologue: function */
  94               	/* frame size = 0 */
  95               	/* stack size = 0 */
  96               	.L__stack_usage = 0
  97               	.LBB3:
  32:keymap_common.c ****     return (action_t) {
  33:keymap_common.c **** #ifndef KEYMAP_IN_EEPROM_ENABLE
  34:keymap_common.c ****         .code = pgm_read_word(&fn_actions[FN_INDEX(keycode)])
  98               		.loc 2 34 0
  99 0000 E82F      		mov r30,r24
 100 0002 F0E0      		ldi r31,0
 101 0004 EE0F      		lsl r30
 102 0006 FF1F      		rol r31
 103 0008 E050      		subi r30,lo8(-(fn_actions-384))
 104 000a F040      		sbci r31,hi8(-(fn_actions-384))
 105               	.LVL4:
 106               	.LBE3:
  35:keymap_common.c **** #else
  36:keymap_common.c ****         .code = eeconfig_read_keymap_fn_action(FN_INDEX(keycode))
  37:keymap_common.c **** #endif
  38:keymap_common.c ****     };
  39:keymap_common.c **** }
 107               		.loc 2 39 0
 108               	/* #APP */
 109               	 ;  34 "keymap_common.c" 1
 110 000c 8591      		lpm r24, Z+
 111 000e 9491      		lpm r25, Z
 112               		
 113               	 ;  0 "" 2
 114               	.LVL5:
 115               	/* #NOAPP */
 116 0010 0895      		ret
 117               		.cfi_endproc
 118               	.LFE106:
 120               		.comm	keymap_config,1,1
 121               		.text
 122               	.Letext0:
 123               		.file 3 "/usr/local/CrossPack-AVR-20131216/avr/include/stdint.h"
 124               		.file 4 "../../tmk_core_custom/common/action_code.h"
 125               		.file 5 "../../tmk_core_custom/common/keymap.h"
 126               		.file 6 "../../tmk_core_custom/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
 127               		.file 7 "keymap_common.h"
 128               		.file 8 "../../tmk_core_custom/common/keycode.h"
DEFINED SYMBOLS
                            *ABS*:00000000 keymap_common.c
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccZFOwJS.s:2      *ABS*:0000003e __SP_H__
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccZFOwJS.s:3      *ABS*:0000003d __SP_L__
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccZFOwJS.s:4      *ABS*:0000003f __SREG__
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccZFOwJS.s:5      *ABS*:00000000 __tmp_reg__
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccZFOwJS.s:6      *ABS*:00000001 __zero_reg__
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccZFOwJS.s:13     .text.matrix_power_up:00000000 matrix_power_up
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccZFOwJS.s:29     .text.matrix_power_down:00000000 matrix_power_down
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccZFOwJS.s:44     .text.keymap_key_to_keycode:00000000 keymap_key_to_keycode
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccZFOwJS.s:88     .text.keymap_fn_to_action:00000000 keymap_fn_to_action
                            *COM*:00000001 keymap_config

UNDEFINED SYMBOLS
keymaps
fn_actions
__do_clear_bss
