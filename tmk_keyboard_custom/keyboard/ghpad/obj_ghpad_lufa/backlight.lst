   1               		.file	"backlight.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.matrix_power_up,"ax",@progbits
  11               		.weak	matrix_power_up
  13               	matrix_power_up:
  14               	.LFB4:
  15               		.file 1 "../../tmk_core_custom/common/keyboard.h"
   1:../../tmk_core_custom/common/keyboard.h **** /*
   2:../../tmk_core_custom/common/keyboard.h **** Copyright 2011,2012,2013 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core_custom/common/keyboard.h **** 
   4:../../tmk_core_custom/common/keyboard.h **** This program is free software: you can redistribute it and/or modify
   5:../../tmk_core_custom/common/keyboard.h **** it under the terms of the GNU General Public License as published by
   6:../../tmk_core_custom/common/keyboard.h **** the Free Software Foundation, either version 2 of the License, or
   7:../../tmk_core_custom/common/keyboard.h **** (at your option) any later version.
   8:../../tmk_core_custom/common/keyboard.h **** 
   9:../../tmk_core_custom/common/keyboard.h **** This program is distributed in the hope that it will be useful,
  10:../../tmk_core_custom/common/keyboard.h **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../tmk_core_custom/common/keyboard.h **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../tmk_core_custom/common/keyboard.h **** GNU General Public License for more details.
  13:../../tmk_core_custom/common/keyboard.h **** 
  14:../../tmk_core_custom/common/keyboard.h **** You should have received a copy of the GNU General Public License
  15:../../tmk_core_custom/common/keyboard.h **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../tmk_core_custom/common/keyboard.h **** */
  17:../../tmk_core_custom/common/keyboard.h **** 
  18:../../tmk_core_custom/common/keyboard.h **** #ifndef KEYBOARD_H
  19:../../tmk_core_custom/common/keyboard.h **** #define KEYBOARD_H
  20:../../tmk_core_custom/common/keyboard.h **** 
  21:../../tmk_core_custom/common/keyboard.h **** #include <stdbool.h>
  22:../../tmk_core_custom/common/keyboard.h **** #include <stdint.h>
  23:../../tmk_core_custom/common/keyboard.h **** 
  24:../../tmk_core_custom/common/keyboard.h **** 
  25:../../tmk_core_custom/common/keyboard.h **** #ifdef __cplusplus
  26:../../tmk_core_custom/common/keyboard.h **** extern "C" {
  27:../../tmk_core_custom/common/keyboard.h **** #endif
  28:../../tmk_core_custom/common/keyboard.h **** 
  29:../../tmk_core_custom/common/keyboard.h **** /* key matrix position */
  30:../../tmk_core_custom/common/keyboard.h **** typedef struct {
  31:../../tmk_core_custom/common/keyboard.h ****     uint8_t col;
  32:../../tmk_core_custom/common/keyboard.h ****     uint8_t row;
  33:../../tmk_core_custom/common/keyboard.h **** } keypos_t;
  34:../../tmk_core_custom/common/keyboard.h **** 
  35:../../tmk_core_custom/common/keyboard.h **** /* key event */
  36:../../tmk_core_custom/common/keyboard.h **** typedef struct {
  37:../../tmk_core_custom/common/keyboard.h ****     keypos_t key;
  38:../../tmk_core_custom/common/keyboard.h ****     bool     pressed;
  39:../../tmk_core_custom/common/keyboard.h ****     uint16_t time;
  40:../../tmk_core_custom/common/keyboard.h **** } keyevent_t;
  41:../../tmk_core_custom/common/keyboard.h **** 
  42:../../tmk_core_custom/common/keyboard.h **** /* equivalent test of keypos_t */
  43:../../tmk_core_custom/common/keyboard.h **** #define KEYEQ(keya, keyb)       ((keya).row == (keyb).row && (keya).col == (keyb).col)
  44:../../tmk_core_custom/common/keyboard.h **** 
  45:../../tmk_core_custom/common/keyboard.h **** /* Rules for No Event:
  46:../../tmk_core_custom/common/keyboard.h ****  * 1) (time == 0) to handle (keyevent_t){} as empty event
  47:../../tmk_core_custom/common/keyboard.h ****  * 2) Matrix(255, 255) to make TICK event available
  48:../../tmk_core_custom/common/keyboard.h ****  */
  49:../../tmk_core_custom/common/keyboard.h **** static inline bool IS_NOEVENT(keyevent_t event) { return event.time == 0 || (event.key.row == 255 &
  50:../../tmk_core_custom/common/keyboard.h **** static inline bool IS_PRESSED(keyevent_t event) { return (!IS_NOEVENT(event) && event.pressed); }
  51:../../tmk_core_custom/common/keyboard.h **** static inline bool IS_RELEASED(keyevent_t event) { return (!IS_NOEVENT(event) && !event.pressed); }
  52:../../tmk_core_custom/common/keyboard.h **** 
  53:../../tmk_core_custom/common/keyboard.h **** /* Tick event */
  54:../../tmk_core_custom/common/keyboard.h **** #define TICK                    (keyevent_t){           \
  55:../../tmk_core_custom/common/keyboard.h ****     .key = (keypos_t){ .row = 255, .col = 255 },           \
  56:../../tmk_core_custom/common/keyboard.h ****     .pressed = false,                                   \
  57:../../tmk_core_custom/common/keyboard.h ****     .time = (timer_read() | 1)                          \
  58:../../tmk_core_custom/common/keyboard.h **** }
  59:../../tmk_core_custom/common/keyboard.h **** 
  60:../../tmk_core_custom/common/keyboard.h **** 
  61:../../tmk_core_custom/common/keyboard.h **** void keyboard_init(void);
  62:../../tmk_core_custom/common/keyboard.h **** void keyboard_task(void);
  63:../../tmk_core_custom/common/keyboard.h **** void keyboard_set_leds(uint8_t leds);
  64:../../tmk_core_custom/common/keyboard.h **** 
  65:../../tmk_core_custom/common/keyboard.h **** __attribute__ ((weak)) void matrix_power_up(void) {}
  16               		.loc 1 65 0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  22 0000 0895      		ret
  23               		.cfi_endproc
  24               	.LFE4:
  26               		.section	.text.matrix_power_down,"ax",@progbits
  27               		.weak	matrix_power_down
  29               	matrix_power_down:
  30               	.LFB5:
  66:../../tmk_core_custom/common/keyboard.h **** __attribute__ ((weak)) void matrix_power_down(void) {}
  31               		.loc 1 66 0
  32               		.cfi_startproc
  33               	/* prologue: function */
  34               	/* frame size = 0 */
  35               	/* stack size = 0 */
  36               	.L__stack_usage = 0
  37 0000 0895      		ret
  38               		.cfi_endproc
  39               	.LFE5:
  41               		.section	.text.backlight_set,"ax",@progbits
  42               	.global	backlight_set
  44               	backlight_set:
  45               	.LFB6:
  46               		.file 2 "backlight.c"
   1:backlight.c   **** /*
   2:backlight.c   **** Copyright 2013,2014 Kai Ryu <kai1103@gmail.com>
   3:backlight.c   **** 
   4:backlight.c   **** This program is free software: you can redistribute it and/or modify
   5:backlight.c   **** it under the terms of the GNU General Public License as published by
   6:backlight.c   **** the Free Software Foundation, either version 2 of the License, or
   7:backlight.c   **** (at your option) any later version.
   8:backlight.c   **** 
   9:backlight.c   **** This program is distributed in the hope that it will be useful,
  10:backlight.c   **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:backlight.c   **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:backlight.c   **** GNU General Public License for more details.
  13:backlight.c   **** 
  14:backlight.c   **** You should have received a copy of the GNU General Public License
  15:backlight.c   **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:backlight.c   **** */
  17:backlight.c   **** 
  18:backlight.c   **** #include <avr/io.h>
  19:backlight.c   **** #include <avr/interrupt.h>
  20:backlight.c   **** #include <avr/pgmspace.h>
  21:backlight.c   **** #include "backlight.h"
  22:backlight.c   **** #include "softpwm_led.h"
  23:backlight.c   **** #include "action.h"
  24:backlight.c   **** 
  25:backlight.c   **** #ifdef BACKLIGHT_ENABLE
  26:backlight.c   **** 
  27:backlight.c   **** static uint8_t backlight_mode;
  28:backlight.c   **** 
  29:backlight.c   **** static const uint8_t backlight_table[] PROGMEM = {
  30:backlight.c   ****     0, 16, 128, 255
  31:backlight.c   **** };
  32:backlight.c   **** 
  33:backlight.c   **** /* Backlight pin configuration
  34:backlight.c   ****  * PWM:  PB5 (RevRS)
  35:backlight.c   ****  * GPIO: PF7  PF6  PF5
  36:backlight.c   ****  */
  37:backlight.c   **** void backlight_set(uint8_t level)
  38:backlight.c   **** {
  47               		.loc 2 38 0
  48               		.cfi_startproc
  49               	.LVL0:
  50               		.loc 2 38 0
  51 0000 CF93      		push r28
  52               	.LCFI0:
  53               		.cfi_def_cfa_offset 3
  54               		.cfi_offset 28, -2
  55               	/* prologue: function */
  56               	/* frame size = 0 */
  57               	/* stack size = 1 */
  58               	.L__stack_usage = 1
  59 0002 C82F      		mov r28,r24
  39:backlight.c   ****     backlight_mode = level;
  60               		.loc 2 39 0
  61 0004 8093 0000 		sts backlight_mode,r24
  40:backlight.c   ****     switch (level) {
  62               		.loc 2 40 0
  63 0008 8730      		cpi r24,lo8(7)
  64 000a 00F4      		brsh .L5
  65 000c 8430      		cpi r24,lo8(4)
  66 000e 00F4      		brsh .L6
  67 0010 8130      		cpi r24,lo8(1)
  68 0012 00F0      		brlo .L4
  41:backlight.c   ****         case 1:
  42:backlight.c   ****         case 2:
  43:backlight.c   ****         case 3:
  44:backlight.c   ****             softpwm_led_enable();
  69               		.loc 2 44 0
  70 0014 0E94 0000 		call softpwm_led_enable
  71               	.LVL1:
  45:backlight.c   ****             fading_led_disable_all();
  72               		.loc 2 45 0
  73 0018 0E94 0000 		call fading_led_disable_all
  74               	.LVL2:
  46:backlight.c   ****             breathing_led_disable_all();
  75               		.loc 2 46 0
  76 001c 0E94 0000 		call breathing_led_disable_all
  77               	.LVL3:
  78               	.LBB2:
  47:backlight.c   ****             softpwm_led_set_all(pgm_read_byte(&backlight_table[level]));
  79               		.loc 2 47 0
  80 0020 EC2F      		mov r30,r28
  81 0022 F0E0      		ldi r31,0
  82 0024 E050      		subi r30,lo8(-(backlight_table))
  83 0026 F040      		sbci r31,hi8(-(backlight_table))
  84               	/* #APP */
  85               	 ;  47 "backlight.c" 1
  86 0028 8491      		lpm r24, Z
  87               		
  88               	 ;  0 "" 2
  89               	.LVL4:
  90               	/* epilogue start */
  91               	/* #NOAPP */
  92               	.LBE2:
  48:backlight.c   ****             break;
  49:backlight.c   ****         case 4:
  50:backlight.c   ****         case 5:
  51:backlight.c   ****         case 6:
  52:backlight.c   ****             softpwm_led_enable();
  53:backlight.c   ****             breathing_led_enable_all();
  54:backlight.c   ****             fading_led_disable_all();
  55:backlight.c   ****             breathing_led_set_duration(6 - level);
  56:backlight.c   ****             break;
  57:backlight.c   ****         case 7:
  58:backlight.c   ****             softpwm_led_enable();
  59:backlight.c   ****             fading_led_enable_all();
  60:backlight.c   ****             breathing_led_disable_all();
  61:backlight.c   ****             fading_led_set_direction_all(FADING_LED_FADE_IN);
  62:backlight.c   ****             fading_led_set_duration(4);
  63:backlight.c   ****             break;
  64:backlight.c   ****         case 8:
  65:backlight.c   ****             softpwm_led_enable();
  66:backlight.c   ****             fading_led_enable_all();
  67:backlight.c   ****             breathing_led_disable_all();
  68:backlight.c   ****             fading_led_set_direction_all(FADING_LED_FADE_OUT);
  69:backlight.c   ****             fading_led_set_duration(2);
  70:backlight.c   ****             break;
  71:backlight.c   ****         case 0:
  72:backlight.c   ****         default:
  73:backlight.c   ****             fading_led_disable_all();
  74:backlight.c   ****             breathing_led_disable_all();
  75:backlight.c   ****             softpwm_led_disable();
  76:backlight.c   ****             break;
  77:backlight.c   ****     }
  78:backlight.c   **** }
  93               		.loc 2 78 0
  94 002a CF91      		pop r28
  95               	.LVL5:
  47:backlight.c   ****             softpwm_led_set_all(pgm_read_byte(&backlight_table[level]));
  96               		.loc 2 47 0
  97 002c 0C94 0000 		jmp softpwm_led_set_all
  98               	.LVL6:
  99               	.L5:
  40:backlight.c   ****     switch (level) {
 100               		.loc 2 40 0
 101 0030 8730      		cpi r24,lo8(7)
 102 0032 01F0      		breq .L8
 103 0034 8830      		cpi r24,lo8(8)
 104 0036 01F4      		brne .L4
  65:backlight.c   ****             softpwm_led_enable();
 105               		.loc 2 65 0
 106 0038 0E94 0000 		call softpwm_led_enable
 107               	.LVL7:
  66:backlight.c   ****             fading_led_enable_all();
 108               		.loc 2 66 0
 109 003c 0E94 0000 		call fading_led_enable_all
 110               	.LVL8:
  67:backlight.c   ****             breathing_led_disable_all();
 111               		.loc 2 67 0
 112 0040 0E94 0000 		call breathing_led_disable_all
 113               	.LVL9:
  68:backlight.c   ****             fading_led_set_direction_all(FADING_LED_FADE_OUT);
 114               		.loc 2 68 0
 115 0044 81E0      		ldi r24,lo8(1)
 116 0046 0E94 0000 		call fading_led_set_direction_all
 117               	.LVL10:
  69:backlight.c   ****             fading_led_set_duration(2);
 118               		.loc 2 69 0
 119 004a 82E0      		ldi r24,lo8(2)
 120 004c 00C0      		rjmp .L11
 121               	.LVL11:
 122               	.L6:
  52:backlight.c   ****             softpwm_led_enable();
 123               		.loc 2 52 0
 124 004e 0E94 0000 		call softpwm_led_enable
 125               	.LVL12:
  53:backlight.c   ****             breathing_led_enable_all();
 126               		.loc 2 53 0
 127 0052 0E94 0000 		call breathing_led_enable_all
 128               	.LVL13:
  54:backlight.c   ****             fading_led_disable_all();
 129               		.loc 2 54 0
 130 0056 0E94 0000 		call fading_led_disable_all
 131               	.LVL14:
  55:backlight.c   ****             breathing_led_set_duration(6 - level);
 132               		.loc 2 55 0
 133 005a 86E0      		ldi r24,lo8(6)
 134 005c 8C1B      		sub r24,r28
 135               	/* epilogue start */
 136               		.loc 2 78 0
 137 005e CF91      		pop r28
 138               	.LVL15:
  55:backlight.c   ****             breathing_led_set_duration(6 - level);
 139               		.loc 2 55 0
 140 0060 0C94 0000 		jmp breathing_led_set_duration
 141               	.LVL16:
 142               	.L8:
  58:backlight.c   ****             softpwm_led_enable();
 143               		.loc 2 58 0
 144 0064 0E94 0000 		call softpwm_led_enable
 145               	.LVL17:
  59:backlight.c   ****             fading_led_enable_all();
 146               		.loc 2 59 0
 147 0068 0E94 0000 		call fading_led_enable_all
 148               	.LVL18:
  60:backlight.c   ****             breathing_led_disable_all();
 149               		.loc 2 60 0
 150 006c 0E94 0000 		call breathing_led_disable_all
 151               	.LVL19:
  61:backlight.c   ****             fading_led_set_direction_all(FADING_LED_FADE_IN);
 152               		.loc 2 61 0
 153 0070 80E0      		ldi r24,0
 154 0072 0E94 0000 		call fading_led_set_direction_all
 155               	.LVL20:
  62:backlight.c   ****             fading_led_set_duration(4);
 156               		.loc 2 62 0
 157 0076 84E0      		ldi r24,lo8(4)
 158               	.L11:
 159               	/* epilogue start */
 160               		.loc 2 78 0
 161 0078 CF91      		pop r28
 162               	.LVL21:
  69:backlight.c   ****             fading_led_set_duration(2);
 163               		.loc 2 69 0
 164 007a 0C94 0000 		jmp fading_led_set_duration
 165               	.LVL22:
 166               	.L4:
  73:backlight.c   ****             fading_led_disable_all();
 167               		.loc 2 73 0
 168 007e 0E94 0000 		call fading_led_disable_all
 169               	.LVL23:
  74:backlight.c   ****             breathing_led_disable_all();
 170               		.loc 2 74 0
 171 0082 0E94 0000 		call breathing_led_disable_all
 172               	.LVL24:
 173               	/* epilogue start */
 174               		.loc 2 78 0
 175 0086 CF91      		pop r28
 176               	.LVL25:
  75:backlight.c   ****             softpwm_led_disable();
 177               		.loc 2 75 0
 178 0088 0C94 0000 		jmp softpwm_led_disable
 179               	.LVL26:
 180               		.cfi_endproc
 181               	.LFE6:
 183               		.section	.text.action_keyevent,"ax",@progbits
 184               	.global	action_keyevent
 186               	action_keyevent:
 187               	.LFB7:
  79:backlight.c   **** 
  80:backlight.c   **** #ifndef LEDMAP_ENABLE
  81:backlight.c   **** void softpwm_led_init(void)
  82:backlight.c   **** {
  83:backlight.c   ****     DDRB  |=  (1<<PB5);
  84:backlight.c   ****     DDRF  |=  (1<<PF7 | 1<<PF6 | 1<<PF5);
  85:backlight.c   **** }
  86:backlight.c   **** 
  87:backlight.c   **** void softpwm_led_on(uint8_t index)
  88:backlight.c   **** {
  89:backlight.c   ****     PORTB |=  (1<<PB5);
  90:backlight.c   ****     PORTF &= ~(1<<PF7 | 1<<PF6 | 1<<PF5);
  91:backlight.c   **** }
  92:backlight.c   **** 
  93:backlight.c   **** void softpwm_led_off(uint8_t index)
  94:backlight.c   **** {
  95:backlight.c   ****     PORTB &= ~(1<<PB5);
  96:backlight.c   ****     PORTF |=  (1<<PF7 | 1<<PF6 | 1<<PF5);
  97:backlight.c   **** }
  98:backlight.c   **** #endif
  99:backlight.c   **** 
 100:backlight.c   **** void action_keyevent(keyevent_t event)
 101:backlight.c   **** {
 188               		.loc 2 101 0
 189               		.cfi_startproc
 190 0000 1F93      		push r17
 191               	.LCFI1:
 192               		.cfi_def_cfa_offset 3
 193               		.cfi_offset 17, -2
 194 0002 CF93      		push r28
 195               	.LCFI2:
 196               		.cfi_def_cfa_offset 4
 197               		.cfi_offset 28, -3
 198 0004 DF93      		push r29
 199               	.LCFI3:
 200               		.cfi_def_cfa_offset 5
 201               		.cfi_offset 29, -4
 202 0006 00D0      		rcall .
 203 0008 00D0      		rcall .
 204 000a 1F92      		push __zero_reg__
 205               	.LCFI4:
 206               		.cfi_def_cfa_offset 10
 207 000c CDB7      		in r28,__SP_L__
 208 000e DEB7      		in r29,__SP_H__
 209               	.LCFI5:
 210               		.cfi_def_cfa_register 28
 211               	/* prologue: function */
 212               	/* frame size = 5 */
 213               	/* stack size = 8 */
 214               	.L__stack_usage = 8
 215 0010 162F      		mov r17,r22
 216               	.LVL27:
 102:backlight.c   ****     if (backlight_mode == 7) {
 217               		.loc 2 102 0
 218 0012 8091 0000 		lds r24,backlight_mode
 219 0016 8730      		cpi r24,lo8(7)
 220 0018 01F4      		brne .L14
 103:backlight.c   ****         if (event.pressed) {
 221               		.loc 2 103 0
 222 001a 6623      		tst r22
 223 001c 01F0      		breq .L14
 104:backlight.c   ****             softpwm_led_decrease_all(32);
 224               		.loc 2 104 0
 225 001e 80E2      		ldi r24,lo8(32)
 226 0020 0E94 0000 		call softpwm_led_decrease_all
 227               	.LVL28:
 228               	.L14:
 105:backlight.c   ****         }
 106:backlight.c   ****     }
 107:backlight.c   ****     if (backlight_mode == 8) {
 229               		.loc 2 107 0
 230 0024 8091 0000 		lds r24,backlight_mode
 231 0028 8830      		cpi r24,lo8(8)
 232 002a 01F4      		brne .L13
 108:backlight.c   ****         if (event.pressed) {
 233               		.loc 2 108 0
 234 002c 1123      		tst r17
 235 002e 01F0      		breq .L13
 109:backlight.c   ****             softpwm_led_increase_all(32);
 236               		.loc 2 109 0
 237 0030 80E2      		ldi r24,lo8(32)
 238               	/* epilogue start */
 110:backlight.c   ****         }
 111:backlight.c   ****     }
 112:backlight.c   **** }
 239               		.loc 2 112 0
 240 0032 0F90      		pop __tmp_reg__
 241 0034 0F90      		pop __tmp_reg__
 242 0036 0F90      		pop __tmp_reg__
 243 0038 0F90      		pop __tmp_reg__
 244 003a 0F90      		pop __tmp_reg__
 245 003c DF91      		pop r29
 246 003e CF91      		pop r28
 247 0040 1F91      		pop r17
 248               	.LVL29:
 109:backlight.c   ****             softpwm_led_increase_all(32);
 249               		.loc 2 109 0
 250 0042 0C94 0000 		jmp softpwm_led_increase_all
 251               	.LVL30:
 252               	.L13:
 253               	/* epilogue start */
 254               		.loc 2 112 0
 255 0046 0F90      		pop __tmp_reg__
 256 0048 0F90      		pop __tmp_reg__
 257 004a 0F90      		pop __tmp_reg__
 258 004c 0F90      		pop __tmp_reg__
 259 004e 0F90      		pop __tmp_reg__
 260 0050 DF91      		pop r29
 261 0052 CF91      		pop r28
 262 0054 1F91      		pop r17
 263               	.LVL31:
 264 0056 0895      		ret
 265               		.cfi_endproc
 266               	.LFE7:
 268               		.section	.progmem.data.backlight_table,"a",@progbits
 271               	backlight_table:
 272 0000 00        		.byte	0
 273 0001 10        		.byte	16
 274 0002 80        		.byte	-128
 275 0003 FF        		.byte	-1
 276               		.section	.bss.backlight_mode,"aw",@nobits
 279               	backlight_mode:
 280 0000 00        		.zero	1
 281               		.text
 282               	.Letext0:
 283               		.file 3 "/usr/local/CrossPack-AVR-20131216/avr/include/stdint.h"
 284               		.file 4 "../../tmk_core_custom/common/softpwm_led.h"
DEFINED SYMBOLS
                            *ABS*:00000000 backlight.c
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccG84K0n.s:2      *ABS*:0000003e __SP_H__
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccG84K0n.s:3      *ABS*:0000003d __SP_L__
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccG84K0n.s:4      *ABS*:0000003f __SREG__
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccG84K0n.s:5      *ABS*:00000000 __tmp_reg__
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccG84K0n.s:6      *ABS*:00000001 __zero_reg__
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccG84K0n.s:13     .text.matrix_power_up:00000000 matrix_power_up
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccG84K0n.s:29     .text.matrix_power_down:00000000 matrix_power_down
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccG84K0n.s:44     .text.backlight_set:00000000 backlight_set
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccG84K0n.s:279    .bss.backlight_mode:00000000 backlight_mode
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccG84K0n.s:271    .progmem.data.backlight_table:00000000 backlight_table
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccG84K0n.s:186    .text.action_keyevent:00000000 action_keyevent

UNDEFINED SYMBOLS
softpwm_led_enable
fading_led_disable_all
breathing_led_disable_all
softpwm_led_set_all
fading_led_enable_all
fading_led_set_direction_all
breathing_led_enable_all
breathing_led_set_duration
fading_led_set_duration
softpwm_led_disable
softpwm_led_decrease_all
softpwm_led_increase_all
__do_clear_bss
