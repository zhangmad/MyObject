   1               		.file	"command.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.command_console_help,"ax",@progbits
  12               	command_console_help:
  13               	.LFB111:
  14               		.file 1 "../../tmk_core_custom/common/command.c"
   1:../../tmk_core_custom/common/command.c **** /*
   2:../../tmk_core_custom/common/command.c **** Copyright 2011 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core_custom/common/command.c **** 
   4:../../tmk_core_custom/common/command.c **** This program is free software: you can redistribute it and/or modify
   5:../../tmk_core_custom/common/command.c **** it under the terms of the GNU General Public License as published by
   6:../../tmk_core_custom/common/command.c **** the Free Software Foundation, either version 2 of the License, or
   7:../../tmk_core_custom/common/command.c **** (at your option) any later version.
   8:../../tmk_core_custom/common/command.c **** 
   9:../../tmk_core_custom/common/command.c **** This program is distributed in the hope that it will be useful,
  10:../../tmk_core_custom/common/command.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../tmk_core_custom/common/command.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../tmk_core_custom/common/command.c **** GNU General Public License for more details.
  13:../../tmk_core_custom/common/command.c **** 
  14:../../tmk_core_custom/common/command.c **** You should have received a copy of the GNU General Public License
  15:../../tmk_core_custom/common/command.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../tmk_core_custom/common/command.c **** */
  17:../../tmk_core_custom/common/command.c **** #include <stdint.h>
  18:../../tmk_core_custom/common/command.c **** #include <stdbool.h>
  19:../../tmk_core_custom/common/command.c **** #include <util/delay.h>
  20:../../tmk_core_custom/common/command.c **** #include "keycode.h"
  21:../../tmk_core_custom/common/command.c **** #include "host.h"
  22:../../tmk_core_custom/common/command.c **** #include "keymap.h"
  23:../../tmk_core_custom/common/command.c **** #include "print.h"
  24:../../tmk_core_custom/common/command.c **** #include "debug.h"
  25:../../tmk_core_custom/common/command.c **** #include "util.h"
  26:../../tmk_core_custom/common/command.c **** #include "timer.h"
  27:../../tmk_core_custom/common/command.c **** #include "keyboard.h"
  28:../../tmk_core_custom/common/command.c **** #include "bootloader.h"
  29:../../tmk_core_custom/common/command.c **** #include "action_layer.h"
  30:../../tmk_core_custom/common/command.c **** #include "action_util.h"
  31:../../tmk_core_custom/common/command.c **** #include "eeconfig.h"
  32:../../tmk_core_custom/common/command.c **** #include "sleep_led.h"
  33:../../tmk_core_custom/common/command.c **** #include "led.h"
  34:../../tmk_core_custom/common/command.c **** #include "command.h"
  35:../../tmk_core_custom/common/command.c **** #include "backlight.h"
  36:../../tmk_core_custom/common/command.c **** 
  37:../../tmk_core_custom/common/command.c **** #ifdef MOUSEKEY_ENABLE
  38:../../tmk_core_custom/common/command.c **** #include "mousekey.h"
  39:../../tmk_core_custom/common/command.c **** #endif
  40:../../tmk_core_custom/common/command.c **** 
  41:../../tmk_core_custom/common/command.c **** #ifdef PROTOCOL_PJRC
  42:../../tmk_core_custom/common/command.c **** #   include "usb_keyboard.h"
  43:../../tmk_core_custom/common/command.c **** #   ifdef EXTRAKEY_ENABLE
  44:../../tmk_core_custom/common/command.c **** #       include "usb_extra.h"
  45:../../tmk_core_custom/common/command.c **** #   endif
  46:../../tmk_core_custom/common/command.c **** #endif
  47:../../tmk_core_custom/common/command.c **** 
  48:../../tmk_core_custom/common/command.c **** #ifdef PROTOCOL_VUSB
  49:../../tmk_core_custom/common/command.c **** #   include "usbdrv.h"
  50:../../tmk_core_custom/common/command.c **** #endif
  51:../../tmk_core_custom/common/command.c **** 
  52:../../tmk_core_custom/common/command.c **** #ifdef PS2_MOUSE_ENABLE
  53:../../tmk_core_custom/common/command.c **** extern uint8_t ps2_mouse_enabled;
  54:../../tmk_core_custom/common/command.c **** #endif
  55:../../tmk_core_custom/common/command.c **** 
  56:../../tmk_core_custom/common/command.c **** static bool command_common(uint8_t code);
  57:../../tmk_core_custom/common/command.c **** static void command_common_help(void);
  58:../../tmk_core_custom/common/command.c **** static bool command_console(uint8_t code);
  59:../../tmk_core_custom/common/command.c **** static void command_console_help(void);
  60:../../tmk_core_custom/common/command.c **** #ifdef MOUSEKEY_ENABLE
  61:../../tmk_core_custom/common/command.c **** static bool mousekey_console(uint8_t code);
  62:../../tmk_core_custom/common/command.c **** static void mousekey_console_help(void);
  63:../../tmk_core_custom/common/command.c **** #endif
  64:../../tmk_core_custom/common/command.c **** 
  65:../../tmk_core_custom/common/command.c **** static uint8_t numkey2num(uint8_t code);
  66:../../tmk_core_custom/common/command.c **** static void switch_default_layer(uint8_t layer);
  67:../../tmk_core_custom/common/command.c **** 
  68:../../tmk_core_custom/common/command.c **** 
  69:../../tmk_core_custom/common/command.c **** command_state_t command_state = ONESHOT;
  70:../../tmk_core_custom/common/command.c **** 
  71:../../tmk_core_custom/common/command.c **** 
  72:../../tmk_core_custom/common/command.c **** bool command_proc(uint8_t code)
  73:../../tmk_core_custom/common/command.c **** {
  74:../../tmk_core_custom/common/command.c ****     switch (command_state) {
  75:../../tmk_core_custom/common/command.c ****         case ONESHOT:
  76:../../tmk_core_custom/common/command.c ****             if (!IS_COMMAND())
  77:../../tmk_core_custom/common/command.c ****                 return false;
  78:../../tmk_core_custom/common/command.c ****             return (command_extra(code) || command_common(code));
  79:../../tmk_core_custom/common/command.c ****             break;
  80:../../tmk_core_custom/common/command.c ****         case CONSOLE:
  81:../../tmk_core_custom/common/command.c ****             if (IS_COMMAND())
  82:../../tmk_core_custom/common/command.c ****                 return (command_extra(code) || command_common(code));
  83:../../tmk_core_custom/common/command.c ****             else
  84:../../tmk_core_custom/common/command.c ****                 return (command_console_extra(code) || command_console(code));
  85:../../tmk_core_custom/common/command.c ****             break;
  86:../../tmk_core_custom/common/command.c **** #ifdef MOUSEKEY_ENABLE
  87:../../tmk_core_custom/common/command.c ****         case MOUSEKEY:
  88:../../tmk_core_custom/common/command.c ****             mousekey_console(code);
  89:../../tmk_core_custom/common/command.c ****             break;
  90:../../tmk_core_custom/common/command.c **** #endif
  91:../../tmk_core_custom/common/command.c ****         default:
  92:../../tmk_core_custom/common/command.c ****             command_state = ONESHOT;
  93:../../tmk_core_custom/common/command.c ****             return false;
  94:../../tmk_core_custom/common/command.c ****     }
  95:../../tmk_core_custom/common/command.c ****     return true;
  96:../../tmk_core_custom/common/command.c **** }
  97:../../tmk_core_custom/common/command.c **** 
  98:../../tmk_core_custom/common/command.c **** /* TODO: Refactoring is needed. */
  99:../../tmk_core_custom/common/command.c **** /* This allows to define extra commands. return false when not processed. */
 100:../../tmk_core_custom/common/command.c **** bool command_extra(uint8_t code) __attribute__ ((weak));
 101:../../tmk_core_custom/common/command.c **** bool command_extra(uint8_t code)
 102:../../tmk_core_custom/common/command.c **** {
 103:../../tmk_core_custom/common/command.c ****     return false;
 104:../../tmk_core_custom/common/command.c **** }
 105:../../tmk_core_custom/common/command.c **** 
 106:../../tmk_core_custom/common/command.c **** bool command_console_extra(uint8_t code) __attribute__ ((weak));
 107:../../tmk_core_custom/common/command.c **** bool command_console_extra(uint8_t code)
 108:../../tmk_core_custom/common/command.c **** {
 109:../../tmk_core_custom/common/command.c ****     return false;
 110:../../tmk_core_custom/common/command.c **** }
 111:../../tmk_core_custom/common/command.c **** 
 112:../../tmk_core_custom/common/command.c **** 
 113:../../tmk_core_custom/common/command.c **** /***********************************************************
 114:../../tmk_core_custom/common/command.c ****  * Command common
 115:../../tmk_core_custom/common/command.c ****  ***********************************************************/
 116:../../tmk_core_custom/common/command.c **** static void command_common_help(void)
 117:../../tmk_core_custom/common/command.c **** {
 118:../../tmk_core_custom/common/command.c ****     print("\n\n----- Command Help -----\n");
 119:../../tmk_core_custom/common/command.c ****     print("c:	enter console mode\n");
 120:../../tmk_core_custom/common/command.c ****     print("d:	toggle debug enable\n");
 121:../../tmk_core_custom/common/command.c ****     print("x:	toggle matrix debug\n");
 122:../../tmk_core_custom/common/command.c ****     print("k:	toggle keyboard debug\n");
 123:../../tmk_core_custom/common/command.c ****     print("m:	toggle mouse debug\n");
 124:../../tmk_core_custom/common/command.c **** #ifdef SLEEP_LED_ENABLE
 125:../../tmk_core_custom/common/command.c ****     print("z:	toggle sleep LED test\n");
 126:../../tmk_core_custom/common/command.c **** #endif
 127:../../tmk_core_custom/common/command.c ****     print("v:	print device version & info\n");
 128:../../tmk_core_custom/common/command.c ****     print("t:	print timer count\n");
 129:../../tmk_core_custom/common/command.c ****     print("s:	print status\n");
 130:../../tmk_core_custom/common/command.c ****     print("e:	print eeprom config\n");
 131:../../tmk_core_custom/common/command.c **** #ifdef NKRO_ENABLE
 132:../../tmk_core_custom/common/command.c ****     print("n:	toggle NKRO\n");
 133:../../tmk_core_custom/common/command.c **** #endif
 134:../../tmk_core_custom/common/command.c ****     print("0/F10:	switch to Layer0 \n");
 135:../../tmk_core_custom/common/command.c ****     print("1/F1:	switch to Layer1 \n");
 136:../../tmk_core_custom/common/command.c ****     print("2/F2:	switch to Layer2 \n");
 137:../../tmk_core_custom/common/command.c ****     print("3/F3:	switch to Layer3 \n");
 138:../../tmk_core_custom/common/command.c ****     print("4/F4:	switch to Layer4 \n");
 139:../../tmk_core_custom/common/command.c ****     print("PScr:	power down/remote wake-up\n");
 140:../../tmk_core_custom/common/command.c ****     print("Caps:	Lock Keyboard(Child Proof)\n");
 141:../../tmk_core_custom/common/command.c ****     print("Paus:	jump to bootloader\n");
 142:../../tmk_core_custom/common/command.c **** }
 143:../../tmk_core_custom/common/command.c **** 
 144:../../tmk_core_custom/common/command.c **** #ifdef BOOTMAGIC_ENABLE
 145:../../tmk_core_custom/common/command.c **** static void print_eeconfig(void)
 146:../../tmk_core_custom/common/command.c **** {
 147:../../tmk_core_custom/common/command.c ****     print("default_layer: "); print_dec(eeconfig_read_default_layer()); print("\n");
 148:../../tmk_core_custom/common/command.c **** 
 149:../../tmk_core_custom/common/command.c ****     debug_config_t dc;
 150:../../tmk_core_custom/common/command.c ****     dc.raw = eeconfig_read_debug();
 151:../../tmk_core_custom/common/command.c ****     print("debug_config.raw: "); print_hex8(dc.raw); print("\n");
 152:../../tmk_core_custom/common/command.c ****     print(".enable: "); print_dec(dc.enable); print("\n");
 153:../../tmk_core_custom/common/command.c ****     print(".matrix: "); print_dec(dc.matrix); print("\n");
 154:../../tmk_core_custom/common/command.c ****     print(".keyboard: "); print_dec(dc.keyboard); print("\n");
 155:../../tmk_core_custom/common/command.c ****     print(".mouse: "); print_dec(dc.mouse); print("\n");
 156:../../tmk_core_custom/common/command.c **** 
 157:../../tmk_core_custom/common/command.c ****     keymap_config_t kc;
 158:../../tmk_core_custom/common/command.c ****     kc.raw = eeconfig_read_keymap();
 159:../../tmk_core_custom/common/command.c ****     print("keymap_config.raw: "); print_hex8(kc.raw); print("\n");
 160:../../tmk_core_custom/common/command.c ****     print(".swap_control_capslock: "); print_dec(kc.swap_control_capslock); print("\n");
 161:../../tmk_core_custom/common/command.c ****     print(".capslock_to_control: "); print_dec(kc.capslock_to_control); print("\n");
 162:../../tmk_core_custom/common/command.c ****     print(".swap_lalt_lgui: "); print_dec(kc.swap_lalt_lgui); print("\n");
 163:../../tmk_core_custom/common/command.c ****     print(".swap_ralt_rgui: "); print_dec(kc.swap_ralt_rgui); print("\n");
 164:../../tmk_core_custom/common/command.c ****     print(".no_gui: "); print_dec(kc.no_gui); print("\n");
 165:../../tmk_core_custom/common/command.c ****     print(".swap_grave_esc: "); print_dec(kc.swap_grave_esc); print("\n");
 166:../../tmk_core_custom/common/command.c ****     print(".swap_backslash_backspace: "); print_dec(kc.swap_backslash_backspace); print("\n");
 167:../../tmk_core_custom/common/command.c ****     print(".nkro: "); print_dec(kc.nkro); print("\n");
 168:../../tmk_core_custom/common/command.c **** 
 169:../../tmk_core_custom/common/command.c **** #ifdef BACKLIGHT_ENABLE
 170:../../tmk_core_custom/common/command.c ****     backlight_config_t bc;
 171:../../tmk_core_custom/common/command.c ****     bc.raw = eeconfig_read_backlight();
 172:../../tmk_core_custom/common/command.c ****     print("backlight_config.raw: "); print_hex8(bc.raw); print("\n");
 173:../../tmk_core_custom/common/command.c ****     print(".enable: "); print_dec(bc.enable); print("\n");
 174:../../tmk_core_custom/common/command.c ****     print(".level: "); print_dec(bc.level); print("\n");
 175:../../tmk_core_custom/common/command.c **** #endif
 176:../../tmk_core_custom/common/command.c **** 
 177:../../tmk_core_custom/common/command.c **** #ifdef PS2_MOUSE_ENABLE
 178:../../tmk_core_custom/common/command.c ****     print("ps2_mouse_enabled: "); print_hex8(ps2_mouse_enabled); print("\n");
 179:../../tmk_core_custom/common/command.c **** #endif
 180:../../tmk_core_custom/common/command.c **** }
 181:../../tmk_core_custom/common/command.c **** #endif
 182:../../tmk_core_custom/common/command.c **** 
 183:../../tmk_core_custom/common/command.c **** static bool command_common(uint8_t code)
 184:../../tmk_core_custom/common/command.c **** {
 185:../../tmk_core_custom/common/command.c ****     static host_driver_t *host_driver = 0;
 186:../../tmk_core_custom/common/command.c ****     switch (code) {
 187:../../tmk_core_custom/common/command.c **** #ifdef SLEEP_LED_ENABLE
 188:../../tmk_core_custom/common/command.c ****         case KC_Z:
 189:../../tmk_core_custom/common/command.c ****             // test breathing sleep LED
 190:../../tmk_core_custom/common/command.c ****             print("Sleep LED test\n");
 191:../../tmk_core_custom/common/command.c ****             sleep_led_toggle();
 192:../../tmk_core_custom/common/command.c ****             led_set(host_keyboard_leds());
 193:../../tmk_core_custom/common/command.c ****             break;
 194:../../tmk_core_custom/common/command.c **** #endif
 195:../../tmk_core_custom/common/command.c **** #ifdef BOOTMAGIC_ENABLE
 196:../../tmk_core_custom/common/command.c ****         case KC_E:
 197:../../tmk_core_custom/common/command.c ****             print("eeconfig:\n");
 198:../../tmk_core_custom/common/command.c ****             print_eeconfig();
 199:../../tmk_core_custom/common/command.c ****             break;
 200:../../tmk_core_custom/common/command.c **** #endif
 201:../../tmk_core_custom/common/command.c ****         case KC_CAPSLOCK:
 202:../../tmk_core_custom/common/command.c ****             if (host_get_driver()) {
 203:../../tmk_core_custom/common/command.c ****                 host_driver = host_get_driver();
 204:../../tmk_core_custom/common/command.c ****                 clear_keyboard();
 205:../../tmk_core_custom/common/command.c ****                 host_set_driver(0);
 206:../../tmk_core_custom/common/command.c ****                 print("Locked.\n");
 207:../../tmk_core_custom/common/command.c ****             } else {
 208:../../tmk_core_custom/common/command.c ****                 host_set_driver(host_driver);
 209:../../tmk_core_custom/common/command.c ****                 print("Unlocked.\n");
 210:../../tmk_core_custom/common/command.c ****             }
 211:../../tmk_core_custom/common/command.c ****             break;
 212:../../tmk_core_custom/common/command.c ****         case KC_H:
 213:../../tmk_core_custom/common/command.c ****         case KC_SLASH: /* ? */
 214:../../tmk_core_custom/common/command.c ****             command_common_help();
 215:../../tmk_core_custom/common/command.c ****             break;
 216:../../tmk_core_custom/common/command.c ****         case KC_C:
 217:../../tmk_core_custom/common/command.c ****             debug_matrix   = false;
 218:../../tmk_core_custom/common/command.c ****             debug_keyboard = false;
 219:../../tmk_core_custom/common/command.c ****             debug_mouse    = false;
 220:../../tmk_core_custom/common/command.c ****             debug_enable   = false;
 221:../../tmk_core_custom/common/command.c ****             command_console_help();
 222:../../tmk_core_custom/common/command.c ****             print("\nEnter Console Mode\n");
 223:../../tmk_core_custom/common/command.c ****             print("C> ");
 224:../../tmk_core_custom/common/command.c ****             command_state = CONSOLE;
 225:../../tmk_core_custom/common/command.c ****             break;
 226:../../tmk_core_custom/common/command.c ****         case KC_PAUSE:
 227:../../tmk_core_custom/common/command.c ****             clear_keyboard();
 228:../../tmk_core_custom/common/command.c ****             print("\n\nJump to bootloader... ");
 229:../../tmk_core_custom/common/command.c ****             _delay_ms(1000);
 230:../../tmk_core_custom/common/command.c ****             bootloader_jump(); // not return
 231:../../tmk_core_custom/common/command.c ****             print("not supported.\n");
 232:../../tmk_core_custom/common/command.c ****             break;
 233:../../tmk_core_custom/common/command.c ****         case KC_D:
 234:../../tmk_core_custom/common/command.c ****             if (debug_enable) {
 235:../../tmk_core_custom/common/command.c ****                 print("\nDEBUG: disabled.\n");
 236:../../tmk_core_custom/common/command.c ****                 debug_matrix   = false;
 237:../../tmk_core_custom/common/command.c ****                 debug_keyboard = false;
 238:../../tmk_core_custom/common/command.c ****                 debug_mouse    = false;
 239:../../tmk_core_custom/common/command.c ****                 debug_enable   = false;
 240:../../tmk_core_custom/common/command.c ****             } else {
 241:../../tmk_core_custom/common/command.c ****                 print("\nDEBUG: enabled.\n");
 242:../../tmk_core_custom/common/command.c ****                 debug_enable   = true;
 243:../../tmk_core_custom/common/command.c ****             }
 244:../../tmk_core_custom/common/command.c ****             break;
 245:../../tmk_core_custom/common/command.c ****         case KC_X: // debug matrix toggle
 246:../../tmk_core_custom/common/command.c ****             debug_matrix = !debug_matrix;
 247:../../tmk_core_custom/common/command.c ****             if (debug_matrix) {
 248:../../tmk_core_custom/common/command.c ****                 print("\nDEBUG: matrix enabled.\n");
 249:../../tmk_core_custom/common/command.c ****                 debug_enable = true;
 250:../../tmk_core_custom/common/command.c ****             } else {
 251:../../tmk_core_custom/common/command.c ****                 print("\nDEBUG: matrix disabled.\n");
 252:../../tmk_core_custom/common/command.c ****             }
 253:../../tmk_core_custom/common/command.c ****             break;
 254:../../tmk_core_custom/common/command.c ****         case KC_K: // debug keyboard toggle
 255:../../tmk_core_custom/common/command.c ****             debug_keyboard = !debug_keyboard;
 256:../../tmk_core_custom/common/command.c ****             if (debug_keyboard) {
 257:../../tmk_core_custom/common/command.c ****                 print("\nDEBUG: keyboard enabled.\n");
 258:../../tmk_core_custom/common/command.c ****                 debug_enable = true;
 259:../../tmk_core_custom/common/command.c ****             } else {
 260:../../tmk_core_custom/common/command.c ****                 print("\nDEBUG: keyboard disabled.\n");
 261:../../tmk_core_custom/common/command.c ****             }
 262:../../tmk_core_custom/common/command.c ****             break;
 263:../../tmk_core_custom/common/command.c ****         case KC_M: // debug mouse toggle
 264:../../tmk_core_custom/common/command.c ****             debug_mouse = !debug_mouse;
 265:../../tmk_core_custom/common/command.c ****             if (debug_mouse) {
 266:../../tmk_core_custom/common/command.c ****                 print("\nDEBUG: mouse enabled.\n");
 267:../../tmk_core_custom/common/command.c ****                 debug_enable = true;
 268:../../tmk_core_custom/common/command.c ****             } else {
 269:../../tmk_core_custom/common/command.c ****                 print("\nDEBUG: mouse disabled.\n");
 270:../../tmk_core_custom/common/command.c ****             }
 271:../../tmk_core_custom/common/command.c ****             break;
 272:../../tmk_core_custom/common/command.c ****         case KC_V: // print version & information
 273:../../tmk_core_custom/common/command.c ****             print("\n\n----- Version -----\n");
 274:../../tmk_core_custom/common/command.c ****             print("DESC: " STR(DESCRIPTION) "\n");
 275:../../tmk_core_custom/common/command.c ****             print("VID: " STR(VENDOR_ID) "(" STR(MANUFACTURER) ") "
 276:../../tmk_core_custom/common/command.c ****                   "PID: " STR(PRODUCT_ID) "(" STR(PRODUCT) ") "
 277:../../tmk_core_custom/common/command.c ****                   "VER: " STR(DEVICE_VER) "\n");
 278:../../tmk_core_custom/common/command.c ****             print("BUILD: " STR(VERSION) " (" __TIME__ " " __DATE__ ")\n");
 279:../../tmk_core_custom/common/command.c ****             /* build options */
 280:../../tmk_core_custom/common/command.c ****             print("OPTIONS:"
 281:../../tmk_core_custom/common/command.c **** #ifdef PROTOCOL_PJRC
 282:../../tmk_core_custom/common/command.c ****             " PJRC"
 283:../../tmk_core_custom/common/command.c **** #endif
 284:../../tmk_core_custom/common/command.c **** #ifdef PROTOCOL_LUFA
 285:../../tmk_core_custom/common/command.c ****             " LUFA"
 286:../../tmk_core_custom/common/command.c **** #endif
 287:../../tmk_core_custom/common/command.c **** #ifdef PROTOCOL_VUSB
 288:../../tmk_core_custom/common/command.c ****             " VUSB"
 289:../../tmk_core_custom/common/command.c **** #endif
 290:../../tmk_core_custom/common/command.c **** #ifdef BOOTMAGIC_ENABLE
 291:../../tmk_core_custom/common/command.c ****             " BOOTMAGIC"
 292:../../tmk_core_custom/common/command.c **** #endif
 293:../../tmk_core_custom/common/command.c **** #ifdef MOUSEKEY_ENABLE
 294:../../tmk_core_custom/common/command.c ****             " MOUSEKEY"
 295:../../tmk_core_custom/common/command.c **** #endif
 296:../../tmk_core_custom/common/command.c **** #ifdef EXTRAKEY_ENABLE
 297:../../tmk_core_custom/common/command.c ****             " EXTRAKEY"
 298:../../tmk_core_custom/common/command.c **** #endif
 299:../../tmk_core_custom/common/command.c **** #ifdef CONSOLE_ENABLE
 300:../../tmk_core_custom/common/command.c ****             " CONSOLE"
 301:../../tmk_core_custom/common/command.c **** #endif
 302:../../tmk_core_custom/common/command.c **** #ifdef COMMAND_ENABLE
 303:../../tmk_core_custom/common/command.c ****             " COMMAND"
 304:../../tmk_core_custom/common/command.c **** #endif
 305:../../tmk_core_custom/common/command.c **** #ifdef NKRO_ENABLE
 306:../../tmk_core_custom/common/command.c ****             " NKRO"
 307:../../tmk_core_custom/common/command.c **** #endif
 308:../../tmk_core_custom/common/command.c **** #ifdef USB_6KRO_ENABLE
 309:../../tmk_core_custom/common/command.c ****             " 6KRO"
 310:../../tmk_core_custom/common/command.c **** #endif
 311:../../tmk_core_custom/common/command.c **** #ifdef KEYMAP_SECTION_ENABLE
 312:../../tmk_core_custom/common/command.c ****             " KEYMAP_SECTION"
 313:../../tmk_core_custom/common/command.c **** #endif
 314:../../tmk_core_custom/common/command.c **** #ifdef KEYMAP_IN_EEPROM_ENABLE
 315:../../tmk_core_custom/common/command.c ****             " KEYMAP_IN_EEPROM"
 316:../../tmk_core_custom/common/command.c **** #endif
 317:../../tmk_core_custom/common/command.c **** #ifdef LEDMAP_ENABLE
 318:../../tmk_core_custom/common/command.c ****             " LEDMAP"
 319:../../tmk_core_custom/common/command.c **** #endif
 320:../../tmk_core_custom/common/command.c **** #ifdef LEDMAP_IN_EEPROM_ENABLE
 321:../../tmk_core_custom/common/command.c ****             " LEDMAP_IN_EEPROM"
 322:../../tmk_core_custom/common/command.c **** #endif
 323:../../tmk_core_custom/common/command.c **** #ifdef BACKLIGHT_ENABLE
 324:../../tmk_core_custom/common/command.c ****             " BACKLIGHT"
 325:../../tmk_core_custom/common/command.c **** #endif 
 326:../../tmk_core_custom/common/command.c **** #ifdef SOFTPWM_LED_ENABLE
 327:../../tmk_core_custom/common/command.c ****             " SOFTPWM_LED"
 328:../../tmk_core_custom/common/command.c **** #endif
 329:../../tmk_core_custom/common/command.c **** #ifdef BREATHING_LED_ENABLE
 330:../../tmk_core_custom/common/command.c ****             " BREATHING_LED"
 331:../../tmk_core_custom/common/command.c **** #endif
 332:../../tmk_core_custom/common/command.c ****             " " STR(BOOTLOADER_SIZE) "\n");
 333:../../tmk_core_custom/common/command.c **** 
 334:../../tmk_core_custom/common/command.c ****             print("GCC: " STR(__GNUC__) "." STR(__GNUC_MINOR__) "." STR(__GNUC_PATCHLEVEL__)
 335:../../tmk_core_custom/common/command.c ****                   " AVR-LIBC: " __AVR_LIBC_VERSION_STRING__
 336:../../tmk_core_custom/common/command.c ****                   " AVR_ARCH: avr" STR(__AVR_ARCH__) "\n");
 337:../../tmk_core_custom/common/command.c ****             break;
 338:../../tmk_core_custom/common/command.c ****         case KC_T: // print timer
 339:../../tmk_core_custom/common/command.c ****             print_val_hex32(timer_count);
 340:../../tmk_core_custom/common/command.c ****             break;
 341:../../tmk_core_custom/common/command.c ****         case KC_S:
 342:../../tmk_core_custom/common/command.c ****             print("\n\n----- Status -----\n");
 343:../../tmk_core_custom/common/command.c ****             print_val_hex8(host_keyboard_leds());
 344:../../tmk_core_custom/common/command.c ****             print_val_hex8(keyboard_protocol);
 345:../../tmk_core_custom/common/command.c ****             print_val_hex8(keyboard_idle);
 346:../../tmk_core_custom/common/command.c **** #ifdef PROTOCOL_PJRC
 347:../../tmk_core_custom/common/command.c ****             print_val_hex8(UDCON);
 348:../../tmk_core_custom/common/command.c ****             print_val_hex8(UDIEN);
 349:../../tmk_core_custom/common/command.c ****             print_val_hex8(UDINT);
 350:../../tmk_core_custom/common/command.c ****             print_val_hex8(usb_keyboard_leds);
 351:../../tmk_core_custom/common/command.c ****             print_val_hex8(usb_keyboard_idle_count);
 352:../../tmk_core_custom/common/command.c **** #endif
 353:../../tmk_core_custom/common/command.c **** 
 354:../../tmk_core_custom/common/command.c **** #ifdef PROTOCOL_PJRC
 355:../../tmk_core_custom/common/command.c **** #   if USB_COUNT_SOF
 356:../../tmk_core_custom/common/command.c ****             print_val_hex8(usbSofCount);
 357:../../tmk_core_custom/common/command.c **** #   endif
 358:../../tmk_core_custom/common/command.c **** #endif
 359:../../tmk_core_custom/common/command.c ****             break;
 360:../../tmk_core_custom/common/command.c **** #ifdef NKRO_ENABLE
 361:../../tmk_core_custom/common/command.c ****         case KC_N:
 362:../../tmk_core_custom/common/command.c ****             clear_keyboard(); //Prevents stuck keys.
 363:../../tmk_core_custom/common/command.c ****             keyboard_nkro = !keyboard_nkro;
 364:../../tmk_core_custom/common/command.c ****             if (keyboard_nkro)
 365:../../tmk_core_custom/common/command.c ****                 print("NKRO: enabled\n");
 366:../../tmk_core_custom/common/command.c ****             else
 367:../../tmk_core_custom/common/command.c ****                 print("NKRO: disabled\n");
 368:../../tmk_core_custom/common/command.c ****             break;
 369:../../tmk_core_custom/common/command.c **** #endif
 370:../../tmk_core_custom/common/command.c **** #ifdef EXTRAKEY_ENABLE
 371:../../tmk_core_custom/common/command.c ****         case KC_PSCREEN:
 372:../../tmk_core_custom/common/command.c ****             // TODO: Power key should take this feature? otherwise any key during suspend.
 373:../../tmk_core_custom/common/command.c **** #ifdef PROTOCOL_PJRC
 374:../../tmk_core_custom/common/command.c ****             if (suspend && remote_wakeup) {
 375:../../tmk_core_custom/common/command.c ****                 usb_remote_wakeup();
 376:../../tmk_core_custom/common/command.c ****             } else {
 377:../../tmk_core_custom/common/command.c ****                 host_system_send(SYSTEM_POWER_DOWN);
 378:../../tmk_core_custom/common/command.c ****                 host_system_send(0);
 379:../../tmk_core_custom/common/command.c ****                 _delay_ms(500);
 380:../../tmk_core_custom/common/command.c ****             }
 381:../../tmk_core_custom/common/command.c **** #else
 382:../../tmk_core_custom/common/command.c ****             host_system_send(SYSTEM_POWER_DOWN);
 383:../../tmk_core_custom/common/command.c ****             _delay_ms(100);
 384:../../tmk_core_custom/common/command.c ****             host_system_send(0);
 385:../../tmk_core_custom/common/command.c ****             _delay_ms(500);
 386:../../tmk_core_custom/common/command.c **** #endif
 387:../../tmk_core_custom/common/command.c ****             break;
 388:../../tmk_core_custom/common/command.c **** #endif
 389:../../tmk_core_custom/common/command.c ****         case KC_ESC:
 390:../../tmk_core_custom/common/command.c ****         case KC_GRV:
 391:../../tmk_core_custom/common/command.c ****         case KC_0:
 392:../../tmk_core_custom/common/command.c ****             switch_default_layer(0);
 393:../../tmk_core_custom/common/command.c ****             break;
 394:../../tmk_core_custom/common/command.c ****         case KC_1 ... KC_9:
 395:../../tmk_core_custom/common/command.c ****             switch_default_layer((code - KC_1) + 1);
 396:../../tmk_core_custom/common/command.c ****             break;
 397:../../tmk_core_custom/common/command.c ****         case KC_F1 ... KC_F12:
 398:../../tmk_core_custom/common/command.c ****             switch_default_layer((code - KC_F1) + 1);
 399:../../tmk_core_custom/common/command.c ****             break;
 400:../../tmk_core_custom/common/command.c ****         default:
 401:../../tmk_core_custom/common/command.c ****             print("?");
 402:../../tmk_core_custom/common/command.c ****             return false;
 403:../../tmk_core_custom/common/command.c ****     }
 404:../../tmk_core_custom/common/command.c ****     return true;
 405:../../tmk_core_custom/common/command.c **** }
 406:../../tmk_core_custom/common/command.c **** 
 407:../../tmk_core_custom/common/command.c **** 
 408:../../tmk_core_custom/common/command.c **** /***********************************************************
 409:../../tmk_core_custom/common/command.c ****  * Command console
 410:../../tmk_core_custom/common/command.c ****  ***********************************************************/
 411:../../tmk_core_custom/common/command.c **** static void command_console_help(void)
 412:../../tmk_core_custom/common/command.c **** {
  15               		.loc 1 412 0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
 413:../../tmk_core_custom/common/command.c ****     print("\n\n----- Console Help -----\n");
  21               		.loc 1 413 0
  22 0000 80E0      		ldi r24,lo8(__c.5061)
  23 0002 90E0      		ldi r25,hi8(__c.5061)
  24 0004 0E94 0000 		call xputs
  25               	.LVL0:
 414:../../tmk_core_custom/common/command.c ****     print("ESC/q:	quit\n");
  26               		.loc 1 414 0
  27 0008 80E0      		ldi r24,lo8(__c.5063)
  28 000a 90E0      		ldi r25,hi8(__c.5063)
  29 000c 0E94 0000 		call xputs
  30               	.LVL1:
 415:../../tmk_core_custom/common/command.c **** #ifdef MOUSEKEY_ENABLE
 416:../../tmk_core_custom/common/command.c ****     print("m:	mousekey\n");
  31               		.loc 1 416 0
  32 0010 80E0      		ldi r24,lo8(__c.5065)
  33 0012 90E0      		ldi r25,hi8(__c.5065)
  34 0014 0C94 0000 		jmp xputs
  35               	.LVL2:
  36               		.cfi_endproc
  37               	.LFE111:
  39               		.section	.text.mousekey_console_help,"ax",@progbits
  41               	mousekey_console_help:
  42               	.LFB116:
 417:../../tmk_core_custom/common/command.c **** #endif
 418:../../tmk_core_custom/common/command.c **** }
 419:../../tmk_core_custom/common/command.c **** 
 420:../../tmk_core_custom/common/command.c **** static bool command_console(uint8_t code)
 421:../../tmk_core_custom/common/command.c **** {
 422:../../tmk_core_custom/common/command.c ****     switch (code) {
 423:../../tmk_core_custom/common/command.c ****         case KC_H:
 424:../../tmk_core_custom/common/command.c ****         case KC_SLASH: /* ? */
 425:../../tmk_core_custom/common/command.c ****             command_console_help();
 426:../../tmk_core_custom/common/command.c ****             break;
 427:../../tmk_core_custom/common/command.c ****         case KC_Q:
 428:../../tmk_core_custom/common/command.c ****         case KC_ESC:
 429:../../tmk_core_custom/common/command.c ****             print("\nQuit Console Mode\n");
 430:../../tmk_core_custom/common/command.c ****             command_state = ONESHOT;
 431:../../tmk_core_custom/common/command.c ****             return false;
 432:../../tmk_core_custom/common/command.c **** #ifdef MOUSEKEY_ENABLE
 433:../../tmk_core_custom/common/command.c ****         case KC_M:
 434:../../tmk_core_custom/common/command.c ****             mousekey_console_help();
 435:../../tmk_core_custom/common/command.c ****             print("\nEnter Mousekey Console\n");
 436:../../tmk_core_custom/common/command.c ****             print("M0>");
 437:../../tmk_core_custom/common/command.c ****             command_state = MOUSEKEY;
 438:../../tmk_core_custom/common/command.c ****             return true;
 439:../../tmk_core_custom/common/command.c **** #endif
 440:../../tmk_core_custom/common/command.c ****         default:
 441:../../tmk_core_custom/common/command.c ****             print("?");
 442:../../tmk_core_custom/common/command.c ****             return false;
 443:../../tmk_core_custom/common/command.c ****     }
 444:../../tmk_core_custom/common/command.c ****     print("C> ");
 445:../../tmk_core_custom/common/command.c ****     return true;
 446:../../tmk_core_custom/common/command.c **** }
 447:../../tmk_core_custom/common/command.c **** 
 448:../../tmk_core_custom/common/command.c **** 
 449:../../tmk_core_custom/common/command.c **** #ifdef MOUSEKEY_ENABLE
 450:../../tmk_core_custom/common/command.c **** /***********************************************************
 451:../../tmk_core_custom/common/command.c ****  * Mousekey console
 452:../../tmk_core_custom/common/command.c ****  ***********************************************************/
 453:../../tmk_core_custom/common/command.c **** static uint8_t mousekey_param = 0;
 454:../../tmk_core_custom/common/command.c **** 
 455:../../tmk_core_custom/common/command.c **** static void mousekey_param_print(void)
 456:../../tmk_core_custom/common/command.c **** {
 457:../../tmk_core_custom/common/command.c ****     print("\n\n----- Mousekey Parameters -----\n");
 458:../../tmk_core_custom/common/command.c ****     print("1: mk_delay(*10ms): "); pdec(mk_delay); print("\n");
 459:../../tmk_core_custom/common/command.c ****     print("2: mk_interval(ms): "); pdec(mk_interval); print("\n");
 460:../../tmk_core_custom/common/command.c ****     print("3: mk_max_speed: "); pdec(mk_max_speed); print("\n");
 461:../../tmk_core_custom/common/command.c ****     print("4: mk_time_to_max: "); pdec(mk_time_to_max); print("\n");
 462:../../tmk_core_custom/common/command.c ****     print("5: mk_wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 463:../../tmk_core_custom/common/command.c ****     print("6: mk_wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 464:../../tmk_core_custom/common/command.c **** }
 465:../../tmk_core_custom/common/command.c **** 
 466:../../tmk_core_custom/common/command.c **** #define PRINT_SET_VAL(v)  print(#v " = "); print_dec(v); print("\n");
 467:../../tmk_core_custom/common/command.c **** static void mousekey_param_inc(uint8_t param, uint8_t inc)
 468:../../tmk_core_custom/common/command.c **** {
 469:../../tmk_core_custom/common/command.c ****     switch (param) {
 470:../../tmk_core_custom/common/command.c ****         case 1:
 471:../../tmk_core_custom/common/command.c ****             if (mk_delay + inc < UINT8_MAX)
 472:../../tmk_core_custom/common/command.c ****                 mk_delay += inc;
 473:../../tmk_core_custom/common/command.c ****             else
 474:../../tmk_core_custom/common/command.c ****                 mk_delay = UINT8_MAX;
 475:../../tmk_core_custom/common/command.c ****             PRINT_SET_VAL(mk_delay);
 476:../../tmk_core_custom/common/command.c ****             break;
 477:../../tmk_core_custom/common/command.c ****         case 2:
 478:../../tmk_core_custom/common/command.c ****             if (mk_interval + inc < UINT8_MAX)
 479:../../tmk_core_custom/common/command.c ****                 mk_interval += inc;
 480:../../tmk_core_custom/common/command.c ****             else
 481:../../tmk_core_custom/common/command.c ****                 mk_interval = UINT8_MAX;
 482:../../tmk_core_custom/common/command.c ****             PRINT_SET_VAL(mk_interval);
 483:../../tmk_core_custom/common/command.c ****             break;
 484:../../tmk_core_custom/common/command.c ****         case 3:
 485:../../tmk_core_custom/common/command.c ****             if (mk_max_speed + inc < UINT8_MAX)
 486:../../tmk_core_custom/common/command.c ****                 mk_max_speed += inc;
 487:../../tmk_core_custom/common/command.c ****             else
 488:../../tmk_core_custom/common/command.c ****                 mk_max_speed = UINT8_MAX;
 489:../../tmk_core_custom/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 490:../../tmk_core_custom/common/command.c ****             break;
 491:../../tmk_core_custom/common/command.c ****         case 4:
 492:../../tmk_core_custom/common/command.c ****             if (mk_time_to_max + inc < UINT8_MAX)
 493:../../tmk_core_custom/common/command.c ****                 mk_time_to_max += inc;
 494:../../tmk_core_custom/common/command.c ****             else
 495:../../tmk_core_custom/common/command.c ****                 mk_time_to_max = UINT8_MAX;
 496:../../tmk_core_custom/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 497:../../tmk_core_custom/common/command.c ****             break;
 498:../../tmk_core_custom/common/command.c ****         case 5:
 499:../../tmk_core_custom/common/command.c ****             if (mk_wheel_max_speed + inc < UINT8_MAX)
 500:../../tmk_core_custom/common/command.c ****                 mk_wheel_max_speed += inc;
 501:../../tmk_core_custom/common/command.c ****             else
 502:../../tmk_core_custom/common/command.c ****                 mk_wheel_max_speed = UINT8_MAX;
 503:../../tmk_core_custom/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 504:../../tmk_core_custom/common/command.c ****             break;
 505:../../tmk_core_custom/common/command.c ****         case 6:
 506:../../tmk_core_custom/common/command.c ****             if (mk_wheel_time_to_max + inc < UINT8_MAX)
 507:../../tmk_core_custom/common/command.c ****                 mk_wheel_time_to_max += inc;
 508:../../tmk_core_custom/common/command.c ****             else
 509:../../tmk_core_custom/common/command.c ****                 mk_wheel_time_to_max = UINT8_MAX;
 510:../../tmk_core_custom/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 511:../../tmk_core_custom/common/command.c ****             break;
 512:../../tmk_core_custom/common/command.c ****     }
 513:../../tmk_core_custom/common/command.c **** }
 514:../../tmk_core_custom/common/command.c **** 
 515:../../tmk_core_custom/common/command.c **** static void mousekey_param_dec(uint8_t param, uint8_t dec)
 516:../../tmk_core_custom/common/command.c **** {
 517:../../tmk_core_custom/common/command.c ****     switch (param) {
 518:../../tmk_core_custom/common/command.c ****         case 1:
 519:../../tmk_core_custom/common/command.c ****             if (mk_delay > dec)
 520:../../tmk_core_custom/common/command.c ****                 mk_delay -= dec;
 521:../../tmk_core_custom/common/command.c ****             else
 522:../../tmk_core_custom/common/command.c ****                 mk_delay = 0;
 523:../../tmk_core_custom/common/command.c ****             PRINT_SET_VAL(mk_delay);
 524:../../tmk_core_custom/common/command.c ****             break;
 525:../../tmk_core_custom/common/command.c ****         case 2:
 526:../../tmk_core_custom/common/command.c ****             if (mk_interval > dec)
 527:../../tmk_core_custom/common/command.c ****                 mk_interval -= dec;
 528:../../tmk_core_custom/common/command.c ****             else
 529:../../tmk_core_custom/common/command.c ****                 mk_interval = 0;
 530:../../tmk_core_custom/common/command.c ****             PRINT_SET_VAL(mk_interval);
 531:../../tmk_core_custom/common/command.c ****             break;
 532:../../tmk_core_custom/common/command.c ****         case 3:
 533:../../tmk_core_custom/common/command.c ****             if (mk_max_speed > dec)
 534:../../tmk_core_custom/common/command.c ****                 mk_max_speed -= dec;
 535:../../tmk_core_custom/common/command.c ****             else
 536:../../tmk_core_custom/common/command.c ****                 mk_max_speed = 0;
 537:../../tmk_core_custom/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 538:../../tmk_core_custom/common/command.c ****             break;
 539:../../tmk_core_custom/common/command.c ****         case 4:
 540:../../tmk_core_custom/common/command.c ****             if (mk_time_to_max > dec)
 541:../../tmk_core_custom/common/command.c ****                 mk_time_to_max -= dec;
 542:../../tmk_core_custom/common/command.c ****             else
 543:../../tmk_core_custom/common/command.c ****                 mk_time_to_max = 0;
 544:../../tmk_core_custom/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 545:../../tmk_core_custom/common/command.c ****             break;
 546:../../tmk_core_custom/common/command.c ****         case 5:
 547:../../tmk_core_custom/common/command.c ****             if (mk_wheel_max_speed > dec)
 548:../../tmk_core_custom/common/command.c ****                 mk_wheel_max_speed -= dec;
 549:../../tmk_core_custom/common/command.c ****             else
 550:../../tmk_core_custom/common/command.c ****                 mk_wheel_max_speed = 0;
 551:../../tmk_core_custom/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 552:../../tmk_core_custom/common/command.c ****             break;
 553:../../tmk_core_custom/common/command.c ****         case 6:
 554:../../tmk_core_custom/common/command.c ****             if (mk_wheel_time_to_max > dec)
 555:../../tmk_core_custom/common/command.c ****                 mk_wheel_time_to_max -= dec;
 556:../../tmk_core_custom/common/command.c ****             else
 557:../../tmk_core_custom/common/command.c ****                 mk_wheel_time_to_max = 0;
 558:../../tmk_core_custom/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 559:../../tmk_core_custom/common/command.c ****             break;
 560:../../tmk_core_custom/common/command.c ****     }
 561:../../tmk_core_custom/common/command.c **** }
 562:../../tmk_core_custom/common/command.c **** 
 563:../../tmk_core_custom/common/command.c **** static void mousekey_console_help(void)
 564:../../tmk_core_custom/common/command.c **** {
  43               		.loc 1 564 0
  44               		.cfi_startproc
  45               	/* prologue: function */
  46               	/* frame size = 0 */
  47               	/* stack size = 0 */
  48               	.L__stack_usage = 0
 565:../../tmk_core_custom/common/command.c ****     print("\n\n----- Mousekey Parameters Help -----\n");
  49               		.loc 1 565 0
  50 0000 80E0      		ldi r24,lo8(__c.5226)
  51 0002 90E0      		ldi r25,hi8(__c.5226)
  52 0004 0E94 0000 		call xputs
  53               	.LVL3:
 566:../../tmk_core_custom/common/command.c ****     print("ESC/q:	quit\n");
  54               		.loc 1 566 0
  55 0008 80E0      		ldi r24,lo8(__c.5228)
  56 000a 90E0      		ldi r25,hi8(__c.5228)
  57 000c 0E94 0000 		call xputs
  58               	.LVL4:
 567:../../tmk_core_custom/common/command.c ****     print("1:	select mk_delay(*10ms)\n");
  59               		.loc 1 567 0
  60 0010 80E0      		ldi r24,lo8(__c.5230)
  61 0012 90E0      		ldi r25,hi8(__c.5230)
  62 0014 0E94 0000 		call xputs
  63               	.LVL5:
 568:../../tmk_core_custom/common/command.c ****     print("2:	select mk_interval(ms)\n");
  64               		.loc 1 568 0
  65 0018 80E0      		ldi r24,lo8(__c.5232)
  66 001a 90E0      		ldi r25,hi8(__c.5232)
  67 001c 0E94 0000 		call xputs
  68               	.LVL6:
 569:../../tmk_core_custom/common/command.c ****     print("3:	select mk_max_speed\n");
  69               		.loc 1 569 0
  70 0020 80E0      		ldi r24,lo8(__c.5234)
  71 0022 90E0      		ldi r25,hi8(__c.5234)
  72 0024 0E94 0000 		call xputs
  73               	.LVL7:
 570:../../tmk_core_custom/common/command.c ****     print("4:	select mk_time_to_max\n");
  74               		.loc 1 570 0
  75 0028 80E0      		ldi r24,lo8(__c.5236)
  76 002a 90E0      		ldi r25,hi8(__c.5236)
  77 002c 0E94 0000 		call xputs
  78               	.LVL8:
 571:../../tmk_core_custom/common/command.c ****     print("5:	select mk_wheel_max_speed\n");
  79               		.loc 1 571 0
  80 0030 80E0      		ldi r24,lo8(__c.5238)
  81 0032 90E0      		ldi r25,hi8(__c.5238)
  82 0034 0E94 0000 		call xputs
  83               	.LVL9:
 572:../../tmk_core_custom/common/command.c ****     print("6:	select mk_wheel_time_to_max\n");
  84               		.loc 1 572 0
  85 0038 80E0      		ldi r24,lo8(__c.5240)
  86 003a 90E0      		ldi r25,hi8(__c.5240)
  87 003c 0E94 0000 		call xputs
  88               	.LVL10:
 573:../../tmk_core_custom/common/command.c ****     print("p:	print parameters\n");
  89               		.loc 1 573 0
  90 0040 80E0      		ldi r24,lo8(__c.5242)
  91 0042 90E0      		ldi r25,hi8(__c.5242)
  92 0044 0E94 0000 		call xputs
  93               	.LVL11:
 574:../../tmk_core_custom/common/command.c ****     print("d:	set default values\n");
  94               		.loc 1 574 0
  95 0048 80E0      		ldi r24,lo8(__c.5244)
  96 004a 90E0      		ldi r25,hi8(__c.5244)
  97 004c 0E94 0000 		call xputs
  98               	.LVL12:
 575:../../tmk_core_custom/common/command.c ****     print("up:	increase parameters(+1)\n");
  99               		.loc 1 575 0
 100 0050 80E0      		ldi r24,lo8(__c.5246)
 101 0052 90E0      		ldi r25,hi8(__c.5246)
 102 0054 0E94 0000 		call xputs
 103               	.LVL13:
 576:../../tmk_core_custom/common/command.c ****     print("down:	decrease parameters(-1)\n");
 104               		.loc 1 576 0
 105 0058 80E0      		ldi r24,lo8(__c.5248)
 106 005a 90E0      		ldi r25,hi8(__c.5248)
 107 005c 0E94 0000 		call xputs
 108               	.LVL14:
 577:../../tmk_core_custom/common/command.c ****     print("pgup:	increase parameters(+10)\n");
 109               		.loc 1 577 0
 110 0060 80E0      		ldi r24,lo8(__c.5250)
 111 0062 90E0      		ldi r25,hi8(__c.5250)
 112 0064 0E94 0000 		call xputs
 113               	.LVL15:
 578:../../tmk_core_custom/common/command.c ****     print("pgdown:	decrease parameters(-10)\n");
 114               		.loc 1 578 0
 115 0068 80E0      		ldi r24,lo8(__c.5252)
 116 006a 90E0      		ldi r25,hi8(__c.5252)
 117 006c 0E94 0000 		call xputs
 118               	.LVL16:
 579:../../tmk_core_custom/common/command.c ****     print("\nspeed = delta * max_speed * (repeat / time_to_max)\n");
 119               		.loc 1 579 0
 120 0070 80E0      		ldi r24,lo8(__c.5254)
 121 0072 90E0      		ldi r25,hi8(__c.5254)
 122 0074 0E94 0000 		call xputs
 123               	.LVL17:
 580:../../tmk_core_custom/common/command.c ****     print("where delta: cursor="); pdec(MOUSEKEY_MOVE_DELTA);
 124               		.loc 1 580 0
 125 0078 80E0      		ldi r24,lo8(__c.5256)
 126 007a 90E0      		ldi r25,hi8(__c.5256)
 127 007c 0E94 0000 		call xputs
 128               	.LVL18:
 129 0080 1F92      		push __zero_reg__
 130               	.LCFI0:
 131               		.cfi_def_cfa_offset 3
 132 0082 85E0      		ldi r24,lo8(5)
 133 0084 8F93      		push r24
 134               	.LCFI1:
 135               		.cfi_def_cfa_offset 4
 136 0086 80E0      		ldi r24,lo8(__c.5258)
 137 0088 90E0      		ldi r25,hi8(__c.5258)
 138 008a 9F93      		push r25
 139               	.LCFI2:
 140               		.cfi_def_cfa_offset 5
 141 008c 8F93      		push r24
 142               	.LCFI3:
 143               		.cfi_def_cfa_offset 6
 144 008e 0E94 0000 		call __xprintf
 145               	.LVL19:
 581:../../tmk_core_custom/common/command.c ****     print(", wheel="); pdec(MOUSEKEY_WHEEL_DELTA); print("\n");
 146               		.loc 1 581 0
 147 0092 80E0      		ldi r24,lo8(__c.5260)
 148 0094 90E0      		ldi r25,hi8(__c.5260)
 149 0096 0E94 0000 		call xputs
 150               	.LVL20:
 151 009a 1F92      		push __zero_reg__
 152               	.LCFI4:
 153               		.cfi_def_cfa_offset 7
 154 009c 81E0      		ldi r24,lo8(1)
 155 009e 8F93      		push r24
 156               	.LCFI5:
 157               		.cfi_def_cfa_offset 8
 158 00a0 80E0      		ldi r24,lo8(__c.5262)
 159 00a2 90E0      		ldi r25,hi8(__c.5262)
 160 00a4 9F93      		push r25
 161               	.LCFI6:
 162               		.cfi_def_cfa_offset 9
 163 00a6 8F93      		push r24
 164               	.LCFI7:
 165               		.cfi_def_cfa_offset 10
 166 00a8 0E94 0000 		call __xprintf
 167               	.LVL21:
 168 00ac 80E0      		ldi r24,lo8(__c.5264)
 169 00ae 90E0      		ldi r25,hi8(__c.5264)
 170 00b0 0E94 0000 		call xputs
 171               	.LVL22:
 582:../../tmk_core_custom/common/command.c ****     print("See http://en.wikipedia.org/wiki/Mouse_keys\n");
 172               		.loc 1 582 0
 173 00b4 8DB7      		in r24,__SP_L__
 174 00b6 9EB7      		in r25,__SP_H__
 175 00b8 0896      		adiw r24,8
 176 00ba 0FB6      		in __tmp_reg__,__SREG__
 177 00bc F894      		cli
 178 00be 9EBF      		out __SP_H__,r25
 179 00c0 0FBE      		out __SREG__,__tmp_reg__
 180 00c2 8DBF      		out __SP_L__,r24
 181               	.LCFI8:
 182               		.cfi_def_cfa_offset 2
 183 00c4 80E0      		ldi r24,lo8(__c.5266)
 184 00c6 90E0      		ldi r25,hi8(__c.5266)
 185 00c8 0C94 0000 		jmp xputs
 186               	.LVL23:
 187               		.cfi_endproc
 188               	.LFE116:
 190               		.section	.text.mousekey_param_inc,"ax",@progbits
 192               	mousekey_param_inc:
 193               	.LFB114:
 468:../../tmk_core_custom/common/command.c **** {
 194               		.loc 1 468 0
 195               		.cfi_startproc
 196               	.LVL24:
 197               	/* prologue: function */
 198               	/* frame size = 0 */
 199               	/* stack size = 0 */
 200               	.L__stack_usage = 0
 469:../../tmk_core_custom/common/command.c ****     switch (param) {
 201               		.loc 1 469 0
 202 0000 8330      		cpi r24,lo8(3)
 203 0002 01F4      		brne .+2
 204 0004 00C0      		rjmp .L5
 205 0006 00F4      		brsh .L6
 206 0008 8130      		cpi r24,lo8(1)
 207 000a 01F0      		breq .L7
 208 000c 8230      		cpi r24,lo8(2)
 209 000e 01F0      		breq .L8
 210 0010 0895      		ret
 211               	.L6:
 212 0012 8530      		cpi r24,lo8(5)
 213 0014 01F4      		brne .+2
 214 0016 00C0      		rjmp .L9
 215 0018 00F4      		brsh .+2
 216 001a 00C0      		rjmp .L10
 217 001c 8630      		cpi r24,lo8(6)
 218 001e 01F4      		brne .+2
 219 0020 00C0      		rjmp .L11
 220 0022 0895      		ret
 221               	.L7:
 471:../../tmk_core_custom/common/command.c ****             if (mk_delay + inc < UINT8_MAX)
 222               		.loc 1 471 0
 223 0024 2091 0000 		lds r18,mk_delay
 224 0028 862F      		mov r24,r22
 225               	.LVL25:
 226 002a 90E0      		ldi r25,0
 227 002c 820F      		add r24,r18
 228 002e 911D      		adc r25,__zero_reg__
 229 0030 8F3F      		cpi r24,-1
 230 0032 9105      		cpc r25,__zero_reg__
 231 0034 00F4      		brsh .L12
 472:../../tmk_core_custom/common/command.c ****                 mk_delay += inc;
 232               		.loc 1 472 0
 233 0036 620F      		add r22,r18
 234               	.LVL26:
 235 0038 6093 0000 		sts mk_delay,r22
 236 003c 00C0      		rjmp .L13
 237               	.LVL27:
 238               	.L12:
 474:../../tmk_core_custom/common/command.c ****                 mk_delay = UINT8_MAX;
 239               		.loc 1 474 0
 240 003e 8FEF      		ldi r24,lo8(-1)
 241 0040 8093 0000 		sts mk_delay,r24
 242               	.LVL28:
 243               	.L13:
 475:../../tmk_core_custom/common/command.c ****             PRINT_SET_VAL(mk_delay);
 244               		.loc 1 475 0
 245 0044 80E0      		ldi r24,lo8(__c.5134)
 246 0046 90E0      		ldi r25,hi8(__c.5134)
 247 0048 0E94 0000 		call xputs
 248               	.LVL29:
 249 004c 8091 0000 		lds r24,mk_delay
 250 0050 1F92      		push __zero_reg__
 251               	.LCFI9:
 252               		.cfi_def_cfa_offset 3
 253 0052 8F93      		push r24
 254               	.LCFI10:
 255               		.cfi_def_cfa_offset 4
 256 0054 80E0      		ldi r24,lo8(__c.5136)
 257 0056 90E0      		ldi r25,hi8(__c.5136)
 258 0058 9F93      		push r25
 259               	.LCFI11:
 260               		.cfi_def_cfa_offset 5
 261 005a 8F93      		push r24
 262               	.LCFI12:
 263               		.cfi_def_cfa_offset 6
 264 005c 0E94 0000 		call __xprintf
 265               	.LVL30:
 266 0060 0F90      		pop __tmp_reg__
 267 0062 0F90      		pop __tmp_reg__
 268 0064 0F90      		pop __tmp_reg__
 269 0066 0F90      		pop __tmp_reg__
 270               	.LCFI13:
 271               		.cfi_def_cfa_offset 2
 272 0068 80E0      		ldi r24,lo8(__c.5138)
 273 006a 90E0      		ldi r25,hi8(__c.5138)
 274 006c 00C0      		rjmp .L24
 275               	.LVL31:
 276               	.L8:
 478:../../tmk_core_custom/common/command.c ****             if (mk_interval + inc < UINT8_MAX)
 277               		.loc 1 478 0
 278 006e 2091 0000 		lds r18,mk_interval
 279 0072 862F      		mov r24,r22
 280               	.LVL32:
 281 0074 90E0      		ldi r25,0
 282 0076 820F      		add r24,r18
 283 0078 911D      		adc r25,__zero_reg__
 284 007a 8F3F      		cpi r24,-1
 285 007c 9105      		cpc r25,__zero_reg__
 286 007e 00F4      		brsh .L14
 479:../../tmk_core_custom/common/command.c ****                 mk_interval += inc;
 287               		.loc 1 479 0
 288 0080 620F      		add r22,r18
 289               	.LVL33:
 290 0082 6093 0000 		sts mk_interval,r22
 291 0086 00C0      		rjmp .L15
 292               	.LVL34:
 293               	.L14:
 481:../../tmk_core_custom/common/command.c ****                 mk_interval = UINT8_MAX;
 294               		.loc 1 481 0
 295 0088 8FEF      		ldi r24,lo8(-1)
 296 008a 8093 0000 		sts mk_interval,r24
 297               	.LVL35:
 298               	.L15:
 482:../../tmk_core_custom/common/command.c ****             PRINT_SET_VAL(mk_interval);
 299               		.loc 1 482 0
 300 008e 80E0      		ldi r24,lo8(__c.5142)
 301 0090 90E0      		ldi r25,hi8(__c.5142)
 302 0092 0E94 0000 		call xputs
 303               	.LVL36:
 304 0096 8091 0000 		lds r24,mk_interval
 305 009a 1F92      		push __zero_reg__
 306               	.LCFI14:
 307               		.cfi_def_cfa_offset 3
 308 009c 8F93      		push r24
 309               	.LCFI15:
 310               		.cfi_def_cfa_offset 4
 311 009e 80E0      		ldi r24,lo8(__c.5144)
 312 00a0 90E0      		ldi r25,hi8(__c.5144)
 313 00a2 9F93      		push r25
 314               	.LCFI16:
 315               		.cfi_def_cfa_offset 5
 316 00a4 8F93      		push r24
 317               	.LCFI17:
 318               		.cfi_def_cfa_offset 6
 319 00a6 0E94 0000 		call __xprintf
 320               	.LVL37:
 321 00aa 0F90      		pop __tmp_reg__
 322 00ac 0F90      		pop __tmp_reg__
 323 00ae 0F90      		pop __tmp_reg__
 324 00b0 0F90      		pop __tmp_reg__
 325               	.LCFI18:
 326               		.cfi_def_cfa_offset 2
 327 00b2 80E0      		ldi r24,lo8(__c.5146)
 328 00b4 90E0      		ldi r25,hi8(__c.5146)
 329 00b6 00C0      		rjmp .L24
 330               	.LVL38:
 331               	.L5:
 485:../../tmk_core_custom/common/command.c ****             if (mk_max_speed + inc < UINT8_MAX)
 332               		.loc 1 485 0
 333 00b8 2091 0000 		lds r18,mk_max_speed
 334 00bc 862F      		mov r24,r22
 335               	.LVL39:
 336 00be 90E0      		ldi r25,0
 337 00c0 820F      		add r24,r18
 338 00c2 911D      		adc r25,__zero_reg__
 339 00c4 8F3F      		cpi r24,-1
 340 00c6 9105      		cpc r25,__zero_reg__
 341 00c8 00F4      		brsh .L16
 486:../../tmk_core_custom/common/command.c ****                 mk_max_speed += inc;
 342               		.loc 1 486 0
 343 00ca 620F      		add r22,r18
 344               	.LVL40:
 345 00cc 6093 0000 		sts mk_max_speed,r22
 346 00d0 00C0      		rjmp .L17
 347               	.LVL41:
 348               	.L16:
 488:../../tmk_core_custom/common/command.c ****                 mk_max_speed = UINT8_MAX;
 349               		.loc 1 488 0
 350 00d2 8FEF      		ldi r24,lo8(-1)
 351 00d4 8093 0000 		sts mk_max_speed,r24
 352               	.LVL42:
 353               	.L17:
 489:../../tmk_core_custom/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 354               		.loc 1 489 0
 355 00d8 80E0      		ldi r24,lo8(__c.5149)
 356 00da 90E0      		ldi r25,hi8(__c.5149)
 357 00dc 0E94 0000 		call xputs
 358               	.LVL43:
 359 00e0 8091 0000 		lds r24,mk_max_speed
 360 00e4 1F92      		push __zero_reg__
 361               	.LCFI19:
 362               		.cfi_def_cfa_offset 3
 363 00e6 8F93      		push r24
 364               	.LCFI20:
 365               		.cfi_def_cfa_offset 4
 366 00e8 80E0      		ldi r24,lo8(__c.5151)
 367 00ea 90E0      		ldi r25,hi8(__c.5151)
 368 00ec 9F93      		push r25
 369               	.LCFI21:
 370               		.cfi_def_cfa_offset 5
 371 00ee 8F93      		push r24
 372               	.LCFI22:
 373               		.cfi_def_cfa_offset 6
 374 00f0 0E94 0000 		call __xprintf
 375               	.LVL44:
 376 00f4 0F90      		pop __tmp_reg__
 377 00f6 0F90      		pop __tmp_reg__
 378 00f8 0F90      		pop __tmp_reg__
 379 00fa 0F90      		pop __tmp_reg__
 380               	.LCFI23:
 381               		.cfi_def_cfa_offset 2
 382 00fc 80E0      		ldi r24,lo8(__c.5153)
 383 00fe 90E0      		ldi r25,hi8(__c.5153)
 384 0100 00C0      		rjmp .L24
 385               	.LVL45:
 386               	.L10:
 492:../../tmk_core_custom/common/command.c ****             if (mk_time_to_max + inc < UINT8_MAX)
 387               		.loc 1 492 0
 388 0102 2091 0000 		lds r18,mk_time_to_max
 389 0106 862F      		mov r24,r22
 390               	.LVL46:
 391 0108 90E0      		ldi r25,0
 392 010a 820F      		add r24,r18
 393 010c 911D      		adc r25,__zero_reg__
 394 010e 8F3F      		cpi r24,-1
 395 0110 9105      		cpc r25,__zero_reg__
 396 0112 00F4      		brsh .L18
 493:../../tmk_core_custom/common/command.c ****                 mk_time_to_max += inc;
 397               		.loc 1 493 0
 398 0114 620F      		add r22,r18
 399               	.LVL47:
 400 0116 6093 0000 		sts mk_time_to_max,r22
 401 011a 00C0      		rjmp .L19
 402               	.LVL48:
 403               	.L18:
 495:../../tmk_core_custom/common/command.c ****                 mk_time_to_max = UINT8_MAX;
 404               		.loc 1 495 0
 405 011c 8FEF      		ldi r24,lo8(-1)
 406 011e 8093 0000 		sts mk_time_to_max,r24
 407               	.LVL49:
 408               	.L19:
 496:../../tmk_core_custom/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 409               		.loc 1 496 0
 410 0122 80E0      		ldi r24,lo8(__c.5156)
 411 0124 90E0      		ldi r25,hi8(__c.5156)
 412 0126 0E94 0000 		call xputs
 413               	.LVL50:
 414 012a 8091 0000 		lds r24,mk_time_to_max
 415 012e 1F92      		push __zero_reg__
 416               	.LCFI24:
 417               		.cfi_def_cfa_offset 3
 418 0130 8F93      		push r24
 419               	.LCFI25:
 420               		.cfi_def_cfa_offset 4
 421 0132 80E0      		ldi r24,lo8(__c.5158)
 422 0134 90E0      		ldi r25,hi8(__c.5158)
 423 0136 9F93      		push r25
 424               	.LCFI26:
 425               		.cfi_def_cfa_offset 5
 426 0138 8F93      		push r24
 427               	.LCFI27:
 428               		.cfi_def_cfa_offset 6
 429 013a 0E94 0000 		call __xprintf
 430               	.LVL51:
 431 013e 0F90      		pop __tmp_reg__
 432 0140 0F90      		pop __tmp_reg__
 433 0142 0F90      		pop __tmp_reg__
 434 0144 0F90      		pop __tmp_reg__
 435               	.LCFI28:
 436               		.cfi_def_cfa_offset 2
 437 0146 80E0      		ldi r24,lo8(__c.5160)
 438 0148 90E0      		ldi r25,hi8(__c.5160)
 439 014a 00C0      		rjmp .L24
 440               	.LVL52:
 441               	.L9:
 499:../../tmk_core_custom/common/command.c ****             if (mk_wheel_max_speed + inc < UINT8_MAX)
 442               		.loc 1 499 0
 443 014c 2091 0000 		lds r18,mk_wheel_max_speed
 444 0150 862F      		mov r24,r22
 445               	.LVL53:
 446 0152 90E0      		ldi r25,0
 447 0154 820F      		add r24,r18
 448 0156 911D      		adc r25,__zero_reg__
 449 0158 8F3F      		cpi r24,-1
 450 015a 9105      		cpc r25,__zero_reg__
 451 015c 00F4      		brsh .L20
 500:../../tmk_core_custom/common/command.c ****                 mk_wheel_max_speed += inc;
 452               		.loc 1 500 0
 453 015e 620F      		add r22,r18
 454               	.LVL54:
 455 0160 6093 0000 		sts mk_wheel_max_speed,r22
 456 0164 00C0      		rjmp .L21
 457               	.LVL55:
 458               	.L20:
 502:../../tmk_core_custom/common/command.c ****                 mk_wheel_max_speed = UINT8_MAX;
 459               		.loc 1 502 0
 460 0166 8FEF      		ldi r24,lo8(-1)
 461 0168 8093 0000 		sts mk_wheel_max_speed,r24
 462               	.LVL56:
 463               	.L21:
 503:../../tmk_core_custom/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 464               		.loc 1 503 0
 465 016c 80E0      		ldi r24,lo8(__c.5163)
 466 016e 90E0      		ldi r25,hi8(__c.5163)
 467 0170 0E94 0000 		call xputs
 468               	.LVL57:
 469 0174 8091 0000 		lds r24,mk_wheel_max_speed
 470 0178 1F92      		push __zero_reg__
 471               	.LCFI29:
 472               		.cfi_def_cfa_offset 3
 473 017a 8F93      		push r24
 474               	.LCFI30:
 475               		.cfi_def_cfa_offset 4
 476 017c 80E0      		ldi r24,lo8(__c.5165)
 477 017e 90E0      		ldi r25,hi8(__c.5165)
 478 0180 9F93      		push r25
 479               	.LCFI31:
 480               		.cfi_def_cfa_offset 5
 481 0182 8F93      		push r24
 482               	.LCFI32:
 483               		.cfi_def_cfa_offset 6
 484 0184 0E94 0000 		call __xprintf
 485               	.LVL58:
 486 0188 0F90      		pop __tmp_reg__
 487 018a 0F90      		pop __tmp_reg__
 488 018c 0F90      		pop __tmp_reg__
 489 018e 0F90      		pop __tmp_reg__
 490               	.LCFI33:
 491               		.cfi_def_cfa_offset 2
 492 0190 80E0      		ldi r24,lo8(__c.5167)
 493 0192 90E0      		ldi r25,hi8(__c.5167)
 494 0194 00C0      		rjmp .L24
 495               	.LVL59:
 496               	.L11:
 506:../../tmk_core_custom/common/command.c ****             if (mk_wheel_time_to_max + inc < UINT8_MAX)
 497               		.loc 1 506 0
 498 0196 2091 0000 		lds r18,mk_wheel_time_to_max
 499 019a 862F      		mov r24,r22
 500               	.LVL60:
 501 019c 90E0      		ldi r25,0
 502 019e 820F      		add r24,r18
 503 01a0 911D      		adc r25,__zero_reg__
 504 01a2 8F3F      		cpi r24,-1
 505 01a4 9105      		cpc r25,__zero_reg__
 506 01a6 00F4      		brsh .L22
 507:../../tmk_core_custom/common/command.c ****                 mk_wheel_time_to_max += inc;
 507               		.loc 1 507 0
 508 01a8 620F      		add r22,r18
 509               	.LVL61:
 510 01aa 6093 0000 		sts mk_wheel_time_to_max,r22
 511 01ae 00C0      		rjmp .L23
 512               	.LVL62:
 513               	.L22:
 509:../../tmk_core_custom/common/command.c ****                 mk_wheel_time_to_max = UINT8_MAX;
 514               		.loc 1 509 0
 515 01b0 8FEF      		ldi r24,lo8(-1)
 516 01b2 8093 0000 		sts mk_wheel_time_to_max,r24
 517               	.LVL63:
 518               	.L23:
 510:../../tmk_core_custom/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 519               		.loc 1 510 0
 520 01b6 80E0      		ldi r24,lo8(__c.5170)
 521 01b8 90E0      		ldi r25,hi8(__c.5170)
 522 01ba 0E94 0000 		call xputs
 523               	.LVL64:
 524 01be 8091 0000 		lds r24,mk_wheel_time_to_max
 525 01c2 1F92      		push __zero_reg__
 526               	.LCFI34:
 527               		.cfi_def_cfa_offset 3
 528 01c4 8F93      		push r24
 529               	.LCFI35:
 530               		.cfi_def_cfa_offset 4
 531 01c6 80E0      		ldi r24,lo8(__c.5172)
 532 01c8 90E0      		ldi r25,hi8(__c.5172)
 533 01ca 9F93      		push r25
 534               	.LCFI36:
 535               		.cfi_def_cfa_offset 5
 536 01cc 8F93      		push r24
 537               	.LCFI37:
 538               		.cfi_def_cfa_offset 6
 539 01ce 0E94 0000 		call __xprintf
 540               	.LVL65:
 541 01d2 0F90      		pop __tmp_reg__
 542 01d4 0F90      		pop __tmp_reg__
 543 01d6 0F90      		pop __tmp_reg__
 544 01d8 0F90      		pop __tmp_reg__
 545               	.LCFI38:
 546               		.cfi_def_cfa_offset 2
 547 01da 80E0      		ldi r24,lo8(__c.5174)
 548 01dc 90E0      		ldi r25,hi8(__c.5174)
 549               	.L24:
 550 01de 0C94 0000 		jmp xputs
 551               	.LVL66:
 552               		.cfi_endproc
 553               	.LFE114:
 555               		.section	.text.mousekey_param_dec,"ax",@progbits
 557               	mousekey_param_dec:
 558               	.LFB115:
 516:../../tmk_core_custom/common/command.c **** {
 559               		.loc 1 516 0
 560               		.cfi_startproc
 561               	.LVL67:
 562               	/* prologue: function */
 563               	/* frame size = 0 */
 564               	/* stack size = 0 */
 565               	.L__stack_usage = 0
 517:../../tmk_core_custom/common/command.c ****     switch (param) {
 566               		.loc 1 517 0
 567 0000 8330      		cpi r24,lo8(3)
 568 0002 01F4      		brne .+2
 569 0004 00C0      		rjmp .L28
 570 0006 00F4      		brsh .L29
 571 0008 8130      		cpi r24,lo8(1)
 572 000a 01F0      		breq .L30
 573 000c 8230      		cpi r24,lo8(2)
 574 000e 01F0      		breq .L31
 575 0010 0895      		ret
 576               	.L29:
 577 0012 8530      		cpi r24,lo8(5)
 578 0014 01F4      		brne .+2
 579 0016 00C0      		rjmp .L32
 580 0018 00F4      		brsh .+2
 581 001a 00C0      		rjmp .L33
 582 001c 8630      		cpi r24,lo8(6)
 583 001e 01F4      		brne .+2
 584 0020 00C0      		rjmp .L34
 585 0022 0895      		ret
 586               	.L30:
 519:../../tmk_core_custom/common/command.c ****             if (mk_delay > dec)
 587               		.loc 1 519 0
 588 0024 8091 0000 		lds r24,mk_delay
 589               	.LVL68:
 590 0028 6817      		cp r22,r24
 591 002a 00F4      		brsh .L35
 520:../../tmk_core_custom/common/command.c ****                 mk_delay -= dec;
 592               		.loc 1 520 0
 593 002c 861B      		sub r24,r22
 594 002e 8093 0000 		sts mk_delay,r24
 595 0032 00C0      		rjmp .L36
 596               	.L35:
 522:../../tmk_core_custom/common/command.c ****                 mk_delay = 0;
 597               		.loc 1 522 0
 598 0034 1092 0000 		sts mk_delay,__zero_reg__
 599               	.L36:
 523:../../tmk_core_custom/common/command.c ****             PRINT_SET_VAL(mk_delay);
 600               		.loc 1 523 0
 601 0038 80E0      		ldi r24,lo8(__c.5181)
 602 003a 90E0      		ldi r25,hi8(__c.5181)
 603 003c 0E94 0000 		call xputs
 604               	.LVL69:
 605 0040 8091 0000 		lds r24,mk_delay
 606 0044 1F92      		push __zero_reg__
 607               	.LCFI39:
 608               		.cfi_def_cfa_offset 3
 609 0046 8F93      		push r24
 610               	.LCFI40:
 611               		.cfi_def_cfa_offset 4
 612 0048 80E0      		ldi r24,lo8(__c.5183)
 613 004a 90E0      		ldi r25,hi8(__c.5183)
 614 004c 9F93      		push r25
 615               	.LCFI41:
 616               		.cfi_def_cfa_offset 5
 617 004e 8F93      		push r24
 618               	.LCFI42:
 619               		.cfi_def_cfa_offset 6
 620 0050 0E94 0000 		call __xprintf
 621               	.LVL70:
 622 0054 0F90      		pop __tmp_reg__
 623 0056 0F90      		pop __tmp_reg__
 624 0058 0F90      		pop __tmp_reg__
 625 005a 0F90      		pop __tmp_reg__
 626               	.LCFI43:
 627               		.cfi_def_cfa_offset 2
 628 005c 80E0      		ldi r24,lo8(__c.5185)
 629 005e 90E0      		ldi r25,hi8(__c.5185)
 630 0060 00C0      		rjmp .L47
 631               	.LVL71:
 632               	.L31:
 526:../../tmk_core_custom/common/command.c ****             if (mk_interval > dec)
 633               		.loc 1 526 0
 634 0062 8091 0000 		lds r24,mk_interval
 635               	.LVL72:
 636 0066 6817      		cp r22,r24
 637 0068 00F4      		brsh .L37
 527:../../tmk_core_custom/common/command.c ****                 mk_interval -= dec;
 638               		.loc 1 527 0
 639 006a 861B      		sub r24,r22
 640 006c 8093 0000 		sts mk_interval,r24
 641 0070 00C0      		rjmp .L38
 642               	.L37:
 529:../../tmk_core_custom/common/command.c ****                 mk_interval = 0;
 643               		.loc 1 529 0
 644 0072 1092 0000 		sts mk_interval,__zero_reg__
 645               	.L38:
 530:../../tmk_core_custom/common/command.c ****             PRINT_SET_VAL(mk_interval);
 646               		.loc 1 530 0
 647 0076 80E0      		ldi r24,lo8(__c.5189)
 648 0078 90E0      		ldi r25,hi8(__c.5189)
 649 007a 0E94 0000 		call xputs
 650               	.LVL73:
 651 007e 8091 0000 		lds r24,mk_interval
 652 0082 1F92      		push __zero_reg__
 653               	.LCFI44:
 654               		.cfi_def_cfa_offset 3
 655 0084 8F93      		push r24
 656               	.LCFI45:
 657               		.cfi_def_cfa_offset 4
 658 0086 80E0      		ldi r24,lo8(__c.5191)
 659 0088 90E0      		ldi r25,hi8(__c.5191)
 660 008a 9F93      		push r25
 661               	.LCFI46:
 662               		.cfi_def_cfa_offset 5
 663 008c 8F93      		push r24
 664               	.LCFI47:
 665               		.cfi_def_cfa_offset 6
 666 008e 0E94 0000 		call __xprintf
 667               	.LVL74:
 668 0092 0F90      		pop __tmp_reg__
 669 0094 0F90      		pop __tmp_reg__
 670 0096 0F90      		pop __tmp_reg__
 671 0098 0F90      		pop __tmp_reg__
 672               	.LCFI48:
 673               		.cfi_def_cfa_offset 2
 674 009a 80E0      		ldi r24,lo8(__c.5193)
 675 009c 90E0      		ldi r25,hi8(__c.5193)
 676 009e 00C0      		rjmp .L47
 677               	.LVL75:
 678               	.L28:
 533:../../tmk_core_custom/common/command.c ****             if (mk_max_speed > dec)
 679               		.loc 1 533 0
 680 00a0 8091 0000 		lds r24,mk_max_speed
 681               	.LVL76:
 682 00a4 6817      		cp r22,r24
 683 00a6 00F4      		brsh .L39
 534:../../tmk_core_custom/common/command.c ****                 mk_max_speed -= dec;
 684               		.loc 1 534 0
 685 00a8 861B      		sub r24,r22
 686 00aa 8093 0000 		sts mk_max_speed,r24
 687 00ae 00C0      		rjmp .L40
 688               	.L39:
 536:../../tmk_core_custom/common/command.c ****                 mk_max_speed = 0;
 689               		.loc 1 536 0
 690 00b0 1092 0000 		sts mk_max_speed,__zero_reg__
 691               	.L40:
 537:../../tmk_core_custom/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 692               		.loc 1 537 0
 693 00b4 80E0      		ldi r24,lo8(__c.5196)
 694 00b6 90E0      		ldi r25,hi8(__c.5196)
 695 00b8 0E94 0000 		call xputs
 696               	.LVL77:
 697 00bc 8091 0000 		lds r24,mk_max_speed
 698 00c0 1F92      		push __zero_reg__
 699               	.LCFI49:
 700               		.cfi_def_cfa_offset 3
 701 00c2 8F93      		push r24
 702               	.LCFI50:
 703               		.cfi_def_cfa_offset 4
 704 00c4 80E0      		ldi r24,lo8(__c.5198)
 705 00c6 90E0      		ldi r25,hi8(__c.5198)
 706 00c8 9F93      		push r25
 707               	.LCFI51:
 708               		.cfi_def_cfa_offset 5
 709 00ca 8F93      		push r24
 710               	.LCFI52:
 711               		.cfi_def_cfa_offset 6
 712 00cc 0E94 0000 		call __xprintf
 713               	.LVL78:
 714 00d0 0F90      		pop __tmp_reg__
 715 00d2 0F90      		pop __tmp_reg__
 716 00d4 0F90      		pop __tmp_reg__
 717 00d6 0F90      		pop __tmp_reg__
 718               	.LCFI53:
 719               		.cfi_def_cfa_offset 2
 720 00d8 80E0      		ldi r24,lo8(__c.5200)
 721 00da 90E0      		ldi r25,hi8(__c.5200)
 722 00dc 00C0      		rjmp .L47
 723               	.LVL79:
 724               	.L33:
 540:../../tmk_core_custom/common/command.c ****             if (mk_time_to_max > dec)
 725               		.loc 1 540 0
 726 00de 8091 0000 		lds r24,mk_time_to_max
 727               	.LVL80:
 728 00e2 6817      		cp r22,r24
 729 00e4 00F4      		brsh .L41
 541:../../tmk_core_custom/common/command.c ****                 mk_time_to_max -= dec;
 730               		.loc 1 541 0
 731 00e6 861B      		sub r24,r22
 732 00e8 8093 0000 		sts mk_time_to_max,r24
 733 00ec 00C0      		rjmp .L42
 734               	.L41:
 543:../../tmk_core_custom/common/command.c ****                 mk_time_to_max = 0;
 735               		.loc 1 543 0
 736 00ee 1092 0000 		sts mk_time_to_max,__zero_reg__
 737               	.L42:
 544:../../tmk_core_custom/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 738               		.loc 1 544 0
 739 00f2 80E0      		ldi r24,lo8(__c.5203)
 740 00f4 90E0      		ldi r25,hi8(__c.5203)
 741 00f6 0E94 0000 		call xputs
 742               	.LVL81:
 743 00fa 8091 0000 		lds r24,mk_time_to_max
 744 00fe 1F92      		push __zero_reg__
 745               	.LCFI54:
 746               		.cfi_def_cfa_offset 3
 747 0100 8F93      		push r24
 748               	.LCFI55:
 749               		.cfi_def_cfa_offset 4
 750 0102 80E0      		ldi r24,lo8(__c.5205)
 751 0104 90E0      		ldi r25,hi8(__c.5205)
 752 0106 9F93      		push r25
 753               	.LCFI56:
 754               		.cfi_def_cfa_offset 5
 755 0108 8F93      		push r24
 756               	.LCFI57:
 757               		.cfi_def_cfa_offset 6
 758 010a 0E94 0000 		call __xprintf
 759               	.LVL82:
 760 010e 0F90      		pop __tmp_reg__
 761 0110 0F90      		pop __tmp_reg__
 762 0112 0F90      		pop __tmp_reg__
 763 0114 0F90      		pop __tmp_reg__
 764               	.LCFI58:
 765               		.cfi_def_cfa_offset 2
 766 0116 80E0      		ldi r24,lo8(__c.5207)
 767 0118 90E0      		ldi r25,hi8(__c.5207)
 768 011a 00C0      		rjmp .L47
 769               	.LVL83:
 770               	.L32:
 547:../../tmk_core_custom/common/command.c ****             if (mk_wheel_max_speed > dec)
 771               		.loc 1 547 0
 772 011c 8091 0000 		lds r24,mk_wheel_max_speed
 773               	.LVL84:
 774 0120 6817      		cp r22,r24
 775 0122 00F4      		brsh .L43
 548:../../tmk_core_custom/common/command.c ****                 mk_wheel_max_speed -= dec;
 776               		.loc 1 548 0
 777 0124 861B      		sub r24,r22
 778 0126 8093 0000 		sts mk_wheel_max_speed,r24
 779 012a 00C0      		rjmp .L44
 780               	.L43:
 550:../../tmk_core_custom/common/command.c ****                 mk_wheel_max_speed = 0;
 781               		.loc 1 550 0
 782 012c 1092 0000 		sts mk_wheel_max_speed,__zero_reg__
 783               	.L44:
 551:../../tmk_core_custom/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 784               		.loc 1 551 0
 785 0130 80E0      		ldi r24,lo8(__c.5210)
 786 0132 90E0      		ldi r25,hi8(__c.5210)
 787 0134 0E94 0000 		call xputs
 788               	.LVL85:
 789 0138 8091 0000 		lds r24,mk_wheel_max_speed
 790 013c 1F92      		push __zero_reg__
 791               	.LCFI59:
 792               		.cfi_def_cfa_offset 3
 793 013e 8F93      		push r24
 794               	.LCFI60:
 795               		.cfi_def_cfa_offset 4
 796 0140 80E0      		ldi r24,lo8(__c.5212)
 797 0142 90E0      		ldi r25,hi8(__c.5212)
 798 0144 9F93      		push r25
 799               	.LCFI61:
 800               		.cfi_def_cfa_offset 5
 801 0146 8F93      		push r24
 802               	.LCFI62:
 803               		.cfi_def_cfa_offset 6
 804 0148 0E94 0000 		call __xprintf
 805               	.LVL86:
 806 014c 0F90      		pop __tmp_reg__
 807 014e 0F90      		pop __tmp_reg__
 808 0150 0F90      		pop __tmp_reg__
 809 0152 0F90      		pop __tmp_reg__
 810               	.LCFI63:
 811               		.cfi_def_cfa_offset 2
 812 0154 80E0      		ldi r24,lo8(__c.5214)
 813 0156 90E0      		ldi r25,hi8(__c.5214)
 814 0158 00C0      		rjmp .L47
 815               	.LVL87:
 816               	.L34:
 554:../../tmk_core_custom/common/command.c ****             if (mk_wheel_time_to_max > dec)
 817               		.loc 1 554 0
 818 015a 8091 0000 		lds r24,mk_wheel_time_to_max
 819               	.LVL88:
 820 015e 6817      		cp r22,r24
 821 0160 00F4      		brsh .L45
 555:../../tmk_core_custom/common/command.c ****                 mk_wheel_time_to_max -= dec;
 822               		.loc 1 555 0
 823 0162 861B      		sub r24,r22
 824 0164 8093 0000 		sts mk_wheel_time_to_max,r24
 825 0168 00C0      		rjmp .L46
 826               	.L45:
 557:../../tmk_core_custom/common/command.c ****                 mk_wheel_time_to_max = 0;
 827               		.loc 1 557 0
 828 016a 1092 0000 		sts mk_wheel_time_to_max,__zero_reg__
 829               	.L46:
 558:../../tmk_core_custom/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 830               		.loc 1 558 0
 831 016e 80E0      		ldi r24,lo8(__c.5217)
 832 0170 90E0      		ldi r25,hi8(__c.5217)
 833 0172 0E94 0000 		call xputs
 834               	.LVL89:
 835 0176 8091 0000 		lds r24,mk_wheel_time_to_max
 836 017a 1F92      		push __zero_reg__
 837               	.LCFI64:
 838               		.cfi_def_cfa_offset 3
 839 017c 8F93      		push r24
 840               	.LCFI65:
 841               		.cfi_def_cfa_offset 4
 842 017e 80E0      		ldi r24,lo8(__c.5219)
 843 0180 90E0      		ldi r25,hi8(__c.5219)
 844 0182 9F93      		push r25
 845               	.LCFI66:
 846               		.cfi_def_cfa_offset 5
 847 0184 8F93      		push r24
 848               	.LCFI67:
 849               		.cfi_def_cfa_offset 6
 850 0186 0E94 0000 		call __xprintf
 851               	.LVL90:
 852 018a 0F90      		pop __tmp_reg__
 853 018c 0F90      		pop __tmp_reg__
 854 018e 0F90      		pop __tmp_reg__
 855 0190 0F90      		pop __tmp_reg__
 856               	.LCFI68:
 857               		.cfi_def_cfa_offset 2
 858 0192 80E0      		ldi r24,lo8(__c.5221)
 859 0194 90E0      		ldi r25,hi8(__c.5221)
 860               	.L47:
 861 0196 0C94 0000 		jmp xputs
 862               	.LVL91:
 863               		.cfi_endproc
 864               	.LFE115:
 866               		.section	.text.switch_default_layer,"ax",@progbits
 868               	switch_default_layer:
 869               	.LFB119:
 583:../../tmk_core_custom/common/command.c **** }
 584:../../tmk_core_custom/common/command.c **** 
 585:../../tmk_core_custom/common/command.c **** static bool mousekey_console(uint8_t code)
 586:../../tmk_core_custom/common/command.c **** {
 587:../../tmk_core_custom/common/command.c ****     switch (code) {
 588:../../tmk_core_custom/common/command.c ****         case KC_H:
 589:../../tmk_core_custom/common/command.c ****         case KC_SLASH: /* ? */
 590:../../tmk_core_custom/common/command.c ****             mousekey_console_help();
 591:../../tmk_core_custom/common/command.c ****             break;
 592:../../tmk_core_custom/common/command.c ****         case KC_Q:
 593:../../tmk_core_custom/common/command.c ****         case KC_ESC:
 594:../../tmk_core_custom/common/command.c ****             mousekey_param = 0;
 595:../../tmk_core_custom/common/command.c ****             print("\nQuit Mousekey Console\n");
 596:../../tmk_core_custom/common/command.c ****             print("C> ");
 597:../../tmk_core_custom/common/command.c ****             command_state = CONSOLE;
 598:../../tmk_core_custom/common/command.c ****             return false;
 599:../../tmk_core_custom/common/command.c ****         case KC_P:
 600:../../tmk_core_custom/common/command.c ****             mousekey_param_print();
 601:../../tmk_core_custom/common/command.c ****             break;
 602:../../tmk_core_custom/common/command.c ****         case KC_1:
 603:../../tmk_core_custom/common/command.c ****         case KC_2:
 604:../../tmk_core_custom/common/command.c ****         case KC_3:
 605:../../tmk_core_custom/common/command.c ****         case KC_4:
 606:../../tmk_core_custom/common/command.c ****         case KC_5:
 607:../../tmk_core_custom/common/command.c ****         case KC_6:
 608:../../tmk_core_custom/common/command.c ****         case KC_7:
 609:../../tmk_core_custom/common/command.c ****         case KC_8:
 610:../../tmk_core_custom/common/command.c ****         case KC_9:
 611:../../tmk_core_custom/common/command.c ****         case KC_0:
 612:../../tmk_core_custom/common/command.c ****             mousekey_param = numkey2num(code);
 613:../../tmk_core_custom/common/command.c ****             print("selected parameter: "); pdec(mousekey_param); print("\n");
 614:../../tmk_core_custom/common/command.c ****             break;
 615:../../tmk_core_custom/common/command.c ****         case KC_UP:
 616:../../tmk_core_custom/common/command.c ****             mousekey_param_inc(mousekey_param, 1);
 617:../../tmk_core_custom/common/command.c ****             break;
 618:../../tmk_core_custom/common/command.c ****         case KC_DOWN:
 619:../../tmk_core_custom/common/command.c ****             mousekey_param_dec(mousekey_param, 1);
 620:../../tmk_core_custom/common/command.c ****             break;
 621:../../tmk_core_custom/common/command.c ****         case KC_PGUP:
 622:../../tmk_core_custom/common/command.c ****             mousekey_param_inc(mousekey_param, 10);
 623:../../tmk_core_custom/common/command.c ****             break;
 624:../../tmk_core_custom/common/command.c ****         case KC_PGDN:
 625:../../tmk_core_custom/common/command.c ****             mousekey_param_dec(mousekey_param, 10);
 626:../../tmk_core_custom/common/command.c ****             break;
 627:../../tmk_core_custom/common/command.c ****         case KC_D:
 628:../../tmk_core_custom/common/command.c ****             mk_delay = MOUSEKEY_DELAY/10;
 629:../../tmk_core_custom/common/command.c ****             mk_interval = MOUSEKEY_INTERVAL;
 630:../../tmk_core_custom/common/command.c ****             mk_max_speed = MOUSEKEY_MAX_SPEED;
 631:../../tmk_core_custom/common/command.c ****             mk_time_to_max = MOUSEKEY_TIME_TO_MAX;
 632:../../tmk_core_custom/common/command.c ****             mk_wheel_max_speed = MOUSEKEY_WHEEL_MAX_SPEED;
 633:../../tmk_core_custom/common/command.c ****             mk_wheel_time_to_max = MOUSEKEY_WHEEL_TIME_TO_MAX;
 634:../../tmk_core_custom/common/command.c ****             print("set default values.\n");
 635:../../tmk_core_custom/common/command.c ****             break;
 636:../../tmk_core_custom/common/command.c ****         default:
 637:../../tmk_core_custom/common/command.c ****             print("?");
 638:../../tmk_core_custom/common/command.c ****             return false;
 639:../../tmk_core_custom/common/command.c ****     }
 640:../../tmk_core_custom/common/command.c ****     print("M"); pdec(mousekey_param); print("> ");
 641:../../tmk_core_custom/common/command.c ****     return true;
 642:../../tmk_core_custom/common/command.c **** }
 643:../../tmk_core_custom/common/command.c **** #endif
 644:../../tmk_core_custom/common/command.c **** 
 645:../../tmk_core_custom/common/command.c **** 
 646:../../tmk_core_custom/common/command.c **** /***********************************************************
 647:../../tmk_core_custom/common/command.c ****  * Utilities
 648:../../tmk_core_custom/common/command.c ****  ***********************************************************/
 649:../../tmk_core_custom/common/command.c **** static uint8_t numkey2num(uint8_t code)
 650:../../tmk_core_custom/common/command.c **** {
 651:../../tmk_core_custom/common/command.c ****     switch (code) {
 652:../../tmk_core_custom/common/command.c ****         case KC_1: return 1;
 653:../../tmk_core_custom/common/command.c ****         case KC_2: return 2;
 654:../../tmk_core_custom/common/command.c ****         case KC_3: return 3;
 655:../../tmk_core_custom/common/command.c ****         case KC_4: return 4;
 656:../../tmk_core_custom/common/command.c ****         case KC_5: return 5;
 657:../../tmk_core_custom/common/command.c ****         case KC_6: return 6;
 658:../../tmk_core_custom/common/command.c ****         case KC_7: return 7;
 659:../../tmk_core_custom/common/command.c ****         case KC_8: return 8;
 660:../../tmk_core_custom/common/command.c ****         case KC_9: return 9;
 661:../../tmk_core_custom/common/command.c ****         case KC_0: return 0;
 662:../../tmk_core_custom/common/command.c ****     }
 663:../../tmk_core_custom/common/command.c ****     return 0;
 664:../../tmk_core_custom/common/command.c **** }
 665:../../tmk_core_custom/common/command.c **** 
 666:../../tmk_core_custom/common/command.c **** static void switch_default_layer(uint8_t layer)
 667:../../tmk_core_custom/common/command.c **** {
 870               		.loc 1 667 0
 871               		.cfi_startproc
 872               	.LVL92:
 873 0000 CF93      		push r28
 874               	.LCFI69:
 875               		.cfi_def_cfa_offset 3
 876               		.cfi_offset 28, -2
 877               	/* prologue: function */
 878               	/* frame size = 0 */
 879               	/* stack size = 1 */
 880               	.L__stack_usage = 1
 881 0002 C82F      		mov r28,r24
 668:../../tmk_core_custom/common/command.c ****     print("switch_default_layer: "); print_dec(biton32(default_layer_state));
 882               		.loc 1 668 0
 883 0004 80E0      		ldi r24,lo8(__c.5329)
 884 0006 90E0      		ldi r25,hi8(__c.5329)
 885               	.LVL93:
 886 0008 0E94 0000 		call xputs
 887               	.LVL94:
 888 000c 6091 0000 		lds r22,default_layer_state
 889 0010 7091 0000 		lds r23,default_layer_state+1
 890 0014 8091 0000 		lds r24,default_layer_state+2
 891 0018 9091 0000 		lds r25,default_layer_state+3
 892 001c 0E94 0000 		call biton32
 893               	.LVL95:
 894 0020 1F92      		push __zero_reg__
 895               	.LCFI70:
 896               		.cfi_def_cfa_offset 4
 897 0022 8F93      		push r24
 898               	.LCFI71:
 899               		.cfi_def_cfa_offset 5
 900 0024 20E0      		ldi r18,lo8(__c.5331)
 901 0026 30E0      		ldi r19,hi8(__c.5331)
 902 0028 3F93      		push r19
 903               	.LCFI72:
 904               		.cfi_def_cfa_offset 6
 905 002a 2F93      		push r18
 906               	.LCFI73:
 907               		.cfi_def_cfa_offset 7
 908 002c 0E94 0000 		call __xprintf
 909               	.LVL96:
 669:../../tmk_core_custom/common/command.c ****     print(" to "); print_dec(layer); print("\n");
 910               		.loc 1 669 0
 911 0030 80E0      		ldi r24,lo8(__c.5333)
 912 0032 90E0      		ldi r25,hi8(__c.5333)
 913 0034 0E94 0000 		call xputs
 914               	.LVL97:
 915 0038 1F92      		push __zero_reg__
 916               	.LCFI74:
 917               		.cfi_def_cfa_offset 8
 918 003a CF93      		push r28
 919               	.LCFI75:
 920               		.cfi_def_cfa_offset 9
 921 003c 20E0      		ldi r18,lo8(__c.5335)
 922 003e 30E0      		ldi r19,hi8(__c.5335)
 923 0040 3F93      		push r19
 924               	.LCFI76:
 925               		.cfi_def_cfa_offset 10
 926 0042 2F93      		push r18
 927               	.LCFI77:
 928               		.cfi_def_cfa_offset 11
 929 0044 0E94 0000 		call __xprintf
 930               	.LVL98:
 931 0048 80E0      		ldi r24,lo8(__c.5337)
 932 004a 90E0      		ldi r25,hi8(__c.5337)
 933 004c 0E94 0000 		call xputs
 934               	.LVL99:
 670:../../tmk_core_custom/common/command.c ****     default_layer_set(1UL<<layer);
 935               		.loc 1 670 0
 936 0050 61E0      		ldi r22,lo8(1)
 937 0052 70E0      		ldi r23,0
 938 0054 80E0      		ldi r24,0
 939 0056 90E0      		ldi r25,0
 940 0058 00C0      		rjmp 2f
 941               		1:
 942 005a 660F      		lsl r22
 943 005c 771F      		rol r23
 944 005e 881F      		rol r24
 945 0060 991F      		rol r25
 946               		2:
 947 0062 CA95      		dec r28
 948 0064 02F4      		brpl 1b
 949 0066 0E94 0000 		call default_layer_set
 950               	.LVL100:
 671:../../tmk_core_custom/common/command.c ****     clear_keyboard();
 951               		.loc 1 671 0
 952 006a 8DB7      		in r24,__SP_L__
 953 006c 9EB7      		in r25,__SP_H__
 954 006e 0896      		adiw r24,8
 955 0070 0FB6      		in __tmp_reg__,__SREG__
 956 0072 F894      		cli
 957 0074 9EBF      		out __SP_H__,r25
 958 0076 0FBE      		out __SREG__,__tmp_reg__
 959 0078 8DBF      		out __SP_L__,r24
 960               	.LCFI78:
 961               		.cfi_def_cfa_offset 3
 962               	/* epilogue start */
 672:../../tmk_core_custom/common/command.c **** }
 963               		.loc 1 672 0
 964 007a CF91      		pop r28
 965               	.LVL101:
 671:../../tmk_core_custom/common/command.c ****     clear_keyboard();
 966               		.loc 1 671 0
 967 007c 0C94 0000 		jmp clear_keyboard
 968               	.LVL102:
 969               		.cfi_endproc
 970               	.LFE119:
 972               		.section	.text.command_common,"ax",@progbits
 974               	command_common:
 975               	.LFB110:
 184:../../tmk_core_custom/common/command.c **** {
 976               		.loc 1 184 0
 977               		.cfi_startproc
 978 0000 CF93      		push r28
 979               	.LCFI79:
 980               		.cfi_def_cfa_offset 3
 981               		.cfi_offset 28, -2
 982               	/* prologue: function */
 983               	/* frame size = 0 */
 984               	/* stack size = 1 */
 985               	.L__stack_usage = 1
 186:../../tmk_core_custom/common/command.c ****     switch (code) {
 986               		.loc 1 186 0
 987 0002 482F      		mov r20,r24
 988 0004 50E0      		ldi r21,0
 989 0006 FA01      		movw r30,r20
 990 0008 3697      		sbiw r30,6
 991 000a E334      		cpi r30,67
 992 000c F105      		cpc r31,__zero_reg__
 993 000e 00F0      		brlo .+2
 994 0010 00C0      		rjmp .L50
 995 0012 E050      		subi r30,lo8(-(gs(.L52)))
 996 0014 F040      		sbci r31,hi8(-(gs(.L52)))
 997 0016 0C94 0000 		jmp __tablejump2__
 998               		.section	.progmem.gcc_sw_table.command_common,"a",@progbits
 999               		.p2align	1
 1000               	.L52:
 1001 0000 0000      		.word gs(.L51)
 1002 0002 0000      		.word gs(.L53)
 1003 0004 0000      		.word gs(.L54)
 1004 0006 0000      		.word gs(.L50)
 1005 0008 0000      		.word gs(.L50)
 1006 000a 0000      		.word gs(.L55)
 1007 000c 0000      		.word gs(.L50)
 1008 000e 0000      		.word gs(.L50)
 1009 0010 0000      		.word gs(.L56)
 1010 0012 0000      		.word gs(.L50)
 1011 0014 0000      		.word gs(.L57)
 1012 0016 0000      		.word gs(.L58)
 1013 0018 0000      		.word gs(.L50)
 1014 001a 0000      		.word gs(.L50)
 1015 001c 0000      		.word gs(.L50)
 1016 001e 0000      		.word gs(.L50)
 1017 0020 0000      		.word gs(.L59)
 1018 0022 0000      		.word gs(.L60)
 1019 0024 0000      		.word gs(.L50)
 1020 0026 0000      		.word gs(.L61)
 1021 0028 0000      		.word gs(.L50)
 1022 002a 0000      		.word gs(.L62)
 1023 002c 0000      		.word gs(.L50)
 1024 002e 0000      		.word gs(.L50)
 1025 0030 0000      		.word gs(.L63)
 1026 0032 0000      		.word gs(.L63)
 1027 0034 0000      		.word gs(.L63)
 1028 0036 0000      		.word gs(.L63)
 1029 0038 0000      		.word gs(.L63)
 1030 003a 0000      		.word gs(.L63)
 1031 003c 0000      		.word gs(.L63)
 1032 003e 0000      		.word gs(.L63)
 1033 0040 0000      		.word gs(.L63)
 1034 0042 0000      		.word gs(.L64)
 1035 0044 0000      		.word gs(.L50)
 1036 0046 0000      		.word gs(.L64)
 1037 0048 0000      		.word gs(.L50)
 1038 004a 0000      		.word gs(.L50)
 1039 004c 0000      		.word gs(.L50)
 1040 004e 0000      		.word gs(.L50)
 1041 0050 0000      		.word gs(.L50)
 1042 0052 0000      		.word gs(.L50)
 1043 0054 0000      		.word gs(.L50)
 1044 0056 0000      		.word gs(.L50)
 1045 0058 0000      		.word gs(.L50)
 1046 005a 0000      		.word gs(.L50)
 1047 005c 0000      		.word gs(.L50)
 1048 005e 0000      		.word gs(.L64)
 1049 0060 0000      		.word gs(.L50)
 1050 0062 0000      		.word gs(.L50)
 1051 0064 0000      		.word gs(.L55)
 1052 0066 0000      		.word gs(.L65)
 1053 0068 0000      		.word gs(.L66)
 1054 006a 0000      		.word gs(.L66)
 1055 006c 0000      		.word gs(.L66)
 1056 006e 0000      		.word gs(.L66)
 1057 0070 0000      		.word gs(.L66)
 1058 0072 0000      		.word gs(.L66)
 1059 0074 0000      		.word gs(.L66)
 1060 0076 0000      		.word gs(.L66)
 1061 0078 0000      		.word gs(.L66)
 1062 007a 0000      		.word gs(.L66)
 1063 007c 0000      		.word gs(.L66)
 1064 007e 0000      		.word gs(.L66)
 1065 0080 0000      		.word gs(.L67)
 1066 0082 0000      		.word gs(.L50)
 1067 0084 0000      		.word gs(.L68)
 1068               		.section	.text.command_common
 1069               	.L54:
 197:../../tmk_core_custom/common/command.c ****             print("eeconfig:\n");
 1070               		.loc 1 197 0
 1071 001a 80E0      		ldi r24,lo8(__c.4979)
 1072 001c 90E0      		ldi r25,hi8(__c.4979)
 1073 001e 0E94 0000 		call xputs
 1074               	.LBB149:
 1075               	.LBB150:
 147:../../tmk_core_custom/common/command.c ****     print("default_layer: "); print_dec(eeconfig_read_default_layer()); print("\n");
 1076               		.loc 1 147 0
 1077 0022 80E0      		ldi r24,lo8(__c.4863)
 1078 0024 90E0      		ldi r25,hi8(__c.4863)
 1079 0026 0E94 0000 		call xputs
 1080 002a 0E94 0000 		call eeconfig_read_default_layer
 1081 002e 1F92      		push __zero_reg__
 1082               	.LCFI80:
 1083               		.cfi_def_cfa_offset 4
 1084 0030 8F93      		push r24
 1085               	.LCFI81:
 1086               		.cfi_def_cfa_offset 5
 1087 0032 80E0      		ldi r24,lo8(__c.4865)
 1088 0034 90E0      		ldi r25,hi8(__c.4865)
 1089 0036 9F93      		push r25
 1090               	.LCFI82:
 1091               		.cfi_def_cfa_offset 6
 1092 0038 8F93      		push r24
 1093               	.LCFI83:
 1094               		.cfi_def_cfa_offset 7
 1095 003a 0E94 0000 		call __xprintf
 1096 003e 80E0      		ldi r24,lo8(__c.4867)
 1097 0040 90E0      		ldi r25,hi8(__c.4867)
 1098 0042 0E94 0000 		call xputs
 150:../../tmk_core_custom/common/command.c ****     dc.raw = eeconfig_read_debug();
 1099               		.loc 1 150 0
 1100 0046 0E94 0000 		call eeconfig_read_debug
 1101 004a C82F      		mov r28,r24
 151:../../tmk_core_custom/common/command.c ****     print("debug_config.raw: "); print_hex8(dc.raw); print("\n");
 1102               		.loc 1 151 0
 1103 004c 80E0      		ldi r24,lo8(__c.4870)
 1104 004e 90E0      		ldi r25,hi8(__c.4870)
 1105 0050 0E94 0000 		call xputs
 1106 0054 1F92      		push __zero_reg__
 1107               	.LCFI84:
 1108               		.cfi_def_cfa_offset 8
 1109 0056 CF93      		push r28
 1110               	.LCFI85:
 1111               		.cfi_def_cfa_offset 9
 1112 0058 20E0      		ldi r18,lo8(__c.4872)
 1113 005a 30E0      		ldi r19,hi8(__c.4872)
 1114 005c 3F93      		push r19
 1115               	.LCFI86:
 1116               		.cfi_def_cfa_offset 10
 1117 005e 2F93      		push r18
 1118               	.LCFI87:
 1119               		.cfi_def_cfa_offset 11
 1120 0060 0E94 0000 		call __xprintf
 1121 0064 80E0      		ldi r24,lo8(__c.4874)
 1122 0066 90E0      		ldi r25,hi8(__c.4874)
 1123 0068 0E94 0000 		call xputs
 152:../../tmk_core_custom/common/command.c ****     print(".enable: "); print_dec(dc.enable); print("\n");
 1124               		.loc 1 152 0
 1125 006c 80E0      		ldi r24,lo8(__c.4876)
 1126 006e 90E0      		ldi r25,hi8(__c.4876)
 1127 0070 0E94 0000 		call xputs
 1128 0074 8C2F      		mov r24,r28
 1129 0076 8170      		andi r24,1
 1130 0078 1F92      		push __zero_reg__
 1131               	.LCFI88:
 1132               		.cfi_def_cfa_offset 12
 1133 007a 8F93      		push r24
 1134               	.LCFI89:
 1135               		.cfi_def_cfa_offset 13
 1136 007c 20E0      		ldi r18,lo8(__c.4878)
 1137 007e 30E0      		ldi r19,hi8(__c.4878)
 1138 0080 3F93      		push r19
 1139               	.LCFI90:
 1140               		.cfi_def_cfa_offset 14
 1141 0082 2F93      		push r18
 1142               	.LCFI91:
 1143               		.cfi_def_cfa_offset 15
 1144 0084 0E94 0000 		call __xprintf
 1145 0088 80E0      		ldi r24,lo8(__c.4880)
 1146 008a 90E0      		ldi r25,hi8(__c.4880)
 1147 008c 0E94 0000 		call xputs
 153:../../tmk_core_custom/common/command.c ****     print(".matrix: "); print_dec(dc.matrix); print("\n");
 1148               		.loc 1 153 0
 1149 0090 80E0      		ldi r24,lo8(__c.4882)
 1150 0092 90E0      		ldi r25,hi8(__c.4882)
 1151 0094 0E94 0000 		call xputs
 1152 0098 C1FB      		bst r28,1
 1153 009a 8827      		clr r24
 1154 009c 80F9      		bld r24,0
 1155 009e 1F92      		push __zero_reg__
 1156               	.LCFI92:
 1157               		.cfi_def_cfa_offset 16
 1158 00a0 8F93      		push r24
 1159               	.LCFI93:
 1160               		.cfi_def_cfa_offset 17
 1161 00a2 20E0      		ldi r18,lo8(__c.4884)
 1162 00a4 30E0      		ldi r19,hi8(__c.4884)
 1163 00a6 3F93      		push r19
 1164               	.LCFI94:
 1165               		.cfi_def_cfa_offset 18
 1166 00a8 2F93      		push r18
 1167               	.LCFI95:
 1168               		.cfi_def_cfa_offset 19
 1169 00aa 0E94 0000 		call __xprintf
 1170 00ae 80E0      		ldi r24,lo8(__c.4886)
 1171 00b0 90E0      		ldi r25,hi8(__c.4886)
 1172 00b2 0E94 0000 		call xputs
 154:../../tmk_core_custom/common/command.c ****     print(".keyboard: "); print_dec(dc.keyboard); print("\n");
 1173               		.loc 1 154 0
 1174 00b6 80E0      		ldi r24,lo8(__c.4888)
 1175 00b8 90E0      		ldi r25,hi8(__c.4888)
 1176 00ba 0E94 0000 		call xputs
 1177 00be C2FB      		bst r28,2
 1178 00c0 8827      		clr r24
 1179 00c2 80F9      		bld r24,0
 1180 00c4 1F92      		push __zero_reg__
 1181               	.LCFI96:
 1182               		.cfi_def_cfa_offset 20
 1183 00c6 8F93      		push r24
 1184               	.LCFI97:
 1185               		.cfi_def_cfa_offset 21
 1186 00c8 20E0      		ldi r18,lo8(__c.4890)
 1187 00ca 30E0      		ldi r19,hi8(__c.4890)
 1188 00cc 3F93      		push r19
 1189               	.LCFI98:
 1190               		.cfi_def_cfa_offset 22
 1191 00ce 2F93      		push r18
 1192               	.LCFI99:
 1193               		.cfi_def_cfa_offset 23
 1194 00d0 0E94 0000 		call __xprintf
 1195 00d4 80E0      		ldi r24,lo8(__c.4892)
 1196 00d6 90E0      		ldi r25,hi8(__c.4892)
 1197 00d8 0E94 0000 		call xputs
 155:../../tmk_core_custom/common/command.c ****     print(".mouse: "); print_dec(dc.mouse); print("\n");
 1198               		.loc 1 155 0
 1199 00dc 80E0      		ldi r24,lo8(__c.4894)
 1200 00de 90E0      		ldi r25,hi8(__c.4894)
 1201 00e0 0E94 0000 		call xputs
 1202 00e4 C3FB      		bst r28,3
 1203 00e6 CC27      		clr r28
 1204 00e8 C0F9      		bld r28,0
 1205 00ea 1F92      		push __zero_reg__
 1206               	.LCFI100:
 1207               		.cfi_def_cfa_offset 24
 1208 00ec CF93      		push r28
 1209               	.LCFI101:
 1210               		.cfi_def_cfa_offset 25
 1211 00ee 80E0      		ldi r24,lo8(__c.4896)
 1212 00f0 90E0      		ldi r25,hi8(__c.4896)
 1213 00f2 9F93      		push r25
 1214               	.LCFI102:
 1215               		.cfi_def_cfa_offset 26
 1216 00f4 8F93      		push r24
 1217               	.LCFI103:
 1218               		.cfi_def_cfa_offset 27
 1219 00f6 0E94 0000 		call __xprintf
 1220 00fa 80E0      		ldi r24,lo8(__c.4898)
 1221 00fc 90E0      		ldi r25,hi8(__c.4898)
 1222 00fe 0E94 0000 		call xputs
 158:../../tmk_core_custom/common/command.c ****     kc.raw = eeconfig_read_keymap();
 1223               		.loc 1 158 0
 1224 0102 0E94 0000 		call eeconfig_read_keymap
 1225 0106 C82F      		mov r28,r24
 159:../../tmk_core_custom/common/command.c ****     print("keymap_config.raw: "); print_hex8(kc.raw); print("\n");
 1226               		.loc 1 159 0
 1227 0108 80E0      		ldi r24,lo8(__c.4901)
 1228 010a 90E0      		ldi r25,hi8(__c.4901)
 1229 010c 0E94 0000 		call xputs
 1230 0110 1F92      		push __zero_reg__
 1231               	.LCFI104:
 1232               		.cfi_def_cfa_offset 28
 1233 0112 CF93      		push r28
 1234               	.LCFI105:
 1235               		.cfi_def_cfa_offset 29
 1236 0114 20E0      		ldi r18,lo8(__c.4903)
 1237 0116 30E0      		ldi r19,hi8(__c.4903)
 1238 0118 3F93      		push r19
 1239               	.LCFI106:
 1240               		.cfi_def_cfa_offset 30
 1241 011a 2F93      		push r18
 1242               	.LCFI107:
 1243               		.cfi_def_cfa_offset 31
 1244 011c 0E94 0000 		call __xprintf
 1245 0120 80E0      		ldi r24,lo8(__c.4905)
 1246 0122 90E0      		ldi r25,hi8(__c.4905)
 1247 0124 0E94 0000 		call xputs
 160:../../tmk_core_custom/common/command.c ****     print(".swap_control_capslock: "); print_dec(kc.swap_control_capslock); print("\n");
 1248               		.loc 1 160 0
 1249 0128 80E0      		ldi r24,lo8(__c.4907)
 1250 012a 90E0      		ldi r25,hi8(__c.4907)
 1251 012c 0E94 0000 		call xputs
 1252 0130 8C2F      		mov r24,r28
 1253 0132 8170      		andi r24,1
 1254 0134 1F92      		push __zero_reg__
 1255               	.LCFI108:
 1256               		.cfi_def_cfa_offset 32
 1257 0136 8F93      		push r24
 1258               	.LCFI109:
 1259               		.cfi_def_cfa_offset 33
 1260 0138 20E0      		ldi r18,lo8(__c.4909)
 1261 013a 30E0      		ldi r19,hi8(__c.4909)
 1262 013c 3F93      		push r19
 1263               	.LCFI110:
 1264               		.cfi_def_cfa_offset 34
 1265 013e 2F93      		push r18
 1266               	.LCFI111:
 1267               		.cfi_def_cfa_offset 35
 1268 0140 0E94 0000 		call __xprintf
 1269 0144 8DB7      		in r24,__SP_L__
 1270 0146 9EB7      		in r25,__SP_H__
 1271 0148 8096      		adiw r24,32
 1272 014a 0FB6      		in __tmp_reg__,__SREG__
 1273 014c F894      		cli
 1274 014e 9EBF      		out __SP_H__,r25
 1275 0150 0FBE      		out __SREG__,__tmp_reg__
 1276 0152 8DBF      		out __SP_L__,r24
 1277               	.LCFI112:
 1278               		.cfi_def_cfa_offset 3
 1279 0154 80E0      		ldi r24,lo8(__c.4911)
 1280 0156 90E0      		ldi r25,hi8(__c.4911)
 1281 0158 0E94 0000 		call xputs
 161:../../tmk_core_custom/common/command.c ****     print(".capslock_to_control: "); print_dec(kc.capslock_to_control); print("\n");
 1282               		.loc 1 161 0
 1283 015c 80E0      		ldi r24,lo8(__c.4913)
 1284 015e 90E0      		ldi r25,hi8(__c.4913)
 1285 0160 0E94 0000 		call xputs
 1286 0164 C1FB      		bst r28,1
 1287 0166 8827      		clr r24
 1288 0168 80F9      		bld r24,0
 1289 016a 1F92      		push __zero_reg__
 1290               	.LCFI113:
 1291               		.cfi_def_cfa_offset 4
 1292 016c 8F93      		push r24
 1293               	.LCFI114:
 1294               		.cfi_def_cfa_offset 5
 1295 016e 20E0      		ldi r18,lo8(__c.4915)
 1296 0170 30E0      		ldi r19,hi8(__c.4915)
 1297 0172 3F93      		push r19
 1298               	.LCFI115:
 1299               		.cfi_def_cfa_offset 6
 1300 0174 2F93      		push r18
 1301               	.LCFI116:
 1302               		.cfi_def_cfa_offset 7
 1303 0176 0E94 0000 		call __xprintf
 1304 017a 80E0      		ldi r24,lo8(__c.4917)
 1305 017c 90E0      		ldi r25,hi8(__c.4917)
 1306 017e 0E94 0000 		call xputs
 162:../../tmk_core_custom/common/command.c ****     print(".swap_lalt_lgui: "); print_dec(kc.swap_lalt_lgui); print("\n");
 1307               		.loc 1 162 0
 1308 0182 80E0      		ldi r24,lo8(__c.4919)
 1309 0184 90E0      		ldi r25,hi8(__c.4919)
 1310 0186 0E94 0000 		call xputs
 1311 018a C2FB      		bst r28,2
 1312 018c 8827      		clr r24
 1313 018e 80F9      		bld r24,0
 1314 0190 1F92      		push __zero_reg__
 1315               	.LCFI117:
 1316               		.cfi_def_cfa_offset 8
 1317 0192 8F93      		push r24
 1318               	.LCFI118:
 1319               		.cfi_def_cfa_offset 9
 1320 0194 20E0      		ldi r18,lo8(__c.4921)
 1321 0196 30E0      		ldi r19,hi8(__c.4921)
 1322 0198 3F93      		push r19
 1323               	.LCFI119:
 1324               		.cfi_def_cfa_offset 10
 1325 019a 2F93      		push r18
 1326               	.LCFI120:
 1327               		.cfi_def_cfa_offset 11
 1328 019c 0E94 0000 		call __xprintf
 1329 01a0 80E0      		ldi r24,lo8(__c.4923)
 1330 01a2 90E0      		ldi r25,hi8(__c.4923)
 1331 01a4 0E94 0000 		call xputs
 163:../../tmk_core_custom/common/command.c ****     print(".swap_ralt_rgui: "); print_dec(kc.swap_ralt_rgui); print("\n");
 1332               		.loc 1 163 0
 1333 01a8 80E0      		ldi r24,lo8(__c.4925)
 1334 01aa 90E0      		ldi r25,hi8(__c.4925)
 1335 01ac 0E94 0000 		call xputs
 1336 01b0 C3FB      		bst r28,3
 1337 01b2 8827      		clr r24
 1338 01b4 80F9      		bld r24,0
 1339 01b6 1F92      		push __zero_reg__
 1340               	.LCFI121:
 1341               		.cfi_def_cfa_offset 12
 1342 01b8 8F93      		push r24
 1343               	.LCFI122:
 1344               		.cfi_def_cfa_offset 13
 1345 01ba 20E0      		ldi r18,lo8(__c.4927)
 1346 01bc 30E0      		ldi r19,hi8(__c.4927)
 1347 01be 3F93      		push r19
 1348               	.LCFI123:
 1349               		.cfi_def_cfa_offset 14
 1350 01c0 2F93      		push r18
 1351               	.LCFI124:
 1352               		.cfi_def_cfa_offset 15
 1353 01c2 0E94 0000 		call __xprintf
 1354 01c6 80E0      		ldi r24,lo8(__c.4929)
 1355 01c8 90E0      		ldi r25,hi8(__c.4929)
 1356 01ca 0E94 0000 		call xputs
 164:../../tmk_core_custom/common/command.c ****     print(".no_gui: "); print_dec(kc.no_gui); print("\n");
 1357               		.loc 1 164 0
 1358 01ce 80E0      		ldi r24,lo8(__c.4931)
 1359 01d0 90E0      		ldi r25,hi8(__c.4931)
 1360 01d2 0E94 0000 		call xputs
 1361 01d6 C4FB      		bst r28,4
 1362 01d8 8827      		clr r24
 1363 01da 80F9      		bld r24,0
 1364 01dc 1F92      		push __zero_reg__
 1365               	.LCFI125:
 1366               		.cfi_def_cfa_offset 16
 1367 01de 8F93      		push r24
 1368               	.LCFI126:
 1369               		.cfi_def_cfa_offset 17
 1370 01e0 20E0      		ldi r18,lo8(__c.4933)
 1371 01e2 30E0      		ldi r19,hi8(__c.4933)
 1372 01e4 3F93      		push r19
 1373               	.LCFI127:
 1374               		.cfi_def_cfa_offset 18
 1375 01e6 2F93      		push r18
 1376               	.LCFI128:
 1377               		.cfi_def_cfa_offset 19
 1378 01e8 0E94 0000 		call __xprintf
 1379 01ec 80E0      		ldi r24,lo8(__c.4935)
 1380 01ee 90E0      		ldi r25,hi8(__c.4935)
 1381 01f0 0E94 0000 		call xputs
 165:../../tmk_core_custom/common/command.c ****     print(".swap_grave_esc: "); print_dec(kc.swap_grave_esc); print("\n");
 1382               		.loc 1 165 0
 1383 01f4 80E0      		ldi r24,lo8(__c.4937)
 1384 01f6 90E0      		ldi r25,hi8(__c.4937)
 1385 01f8 0E94 0000 		call xputs
 1386 01fc C5FB      		bst r28,5
 1387 01fe 8827      		clr r24
 1388 0200 80F9      		bld r24,0
 1389 0202 1F92      		push __zero_reg__
 1390               	.LCFI129:
 1391               		.cfi_def_cfa_offset 20
 1392 0204 8F93      		push r24
 1393               	.LCFI130:
 1394               		.cfi_def_cfa_offset 21
 1395 0206 20E0      		ldi r18,lo8(__c.4939)
 1396 0208 30E0      		ldi r19,hi8(__c.4939)
 1397 020a 3F93      		push r19
 1398               	.LCFI131:
 1399               		.cfi_def_cfa_offset 22
 1400 020c 2F93      		push r18
 1401               	.LCFI132:
 1402               		.cfi_def_cfa_offset 23
 1403 020e 0E94 0000 		call __xprintf
 1404 0212 80E0      		ldi r24,lo8(__c.4941)
 1405 0214 90E0      		ldi r25,hi8(__c.4941)
 1406 0216 0E94 0000 		call xputs
 166:../../tmk_core_custom/common/command.c ****     print(".swap_backslash_backspace: "); print_dec(kc.swap_backslash_backspace); print("\n");
 1407               		.loc 1 166 0
 1408 021a 80E0      		ldi r24,lo8(__c.4943)
 1409 021c 90E0      		ldi r25,hi8(__c.4943)
 1410 021e 0E94 0000 		call xputs
 1411 0222 C6FB      		bst r28,6
 1412 0224 8827      		clr r24
 1413 0226 80F9      		bld r24,0
 1414 0228 1F92      		push __zero_reg__
 1415               	.LCFI133:
 1416               		.cfi_def_cfa_offset 24
 1417 022a 8F93      		push r24
 1418               	.LCFI134:
 1419               		.cfi_def_cfa_offset 25
 1420 022c 20E0      		ldi r18,lo8(__c.4945)
 1421 022e 30E0      		ldi r19,hi8(__c.4945)
 1422 0230 3F93      		push r19
 1423               	.LCFI135:
 1424               		.cfi_def_cfa_offset 26
 1425 0232 2F93      		push r18
 1426               	.LCFI136:
 1427               		.cfi_def_cfa_offset 27
 1428 0234 0E94 0000 		call __xprintf
 1429 0238 80E0      		ldi r24,lo8(__c.4947)
 1430 023a 90E0      		ldi r25,hi8(__c.4947)
 1431 023c 0E94 0000 		call xputs
 167:../../tmk_core_custom/common/command.c ****     print(".nkro: "); print_dec(kc.nkro); print("\n");
 1432               		.loc 1 167 0
 1433 0240 80E0      		ldi r24,lo8(__c.4949)
 1434 0242 90E0      		ldi r25,hi8(__c.4949)
 1435 0244 0E94 0000 		call xputs
 1436 0248 C7FB      		bst r28,7
 1437 024a CC27      		clr r28
 1438 024c C0F9      		bld r28,0
 1439 024e 1F92      		push __zero_reg__
 1440               	.LCFI137:
 1441               		.cfi_def_cfa_offset 28
 1442 0250 CF93      		push r28
 1443               	.LCFI138:
 1444               		.cfi_def_cfa_offset 29
 1445 0252 80E0      		ldi r24,lo8(__c.4951)
 1446 0254 90E0      		ldi r25,hi8(__c.4951)
 1447 0256 9F93      		push r25
 1448               	.LCFI139:
 1449               		.cfi_def_cfa_offset 30
 1450 0258 8F93      		push r24
 1451               	.LCFI140:
 1452               		.cfi_def_cfa_offset 31
 1453 025a 0E94 0000 		call __xprintf
 1454 025e 80E0      		ldi r24,lo8(__c.4953)
 1455 0260 90E0      		ldi r25,hi8(__c.4953)
 1456 0262 0E94 0000 		call xputs
 171:../../tmk_core_custom/common/command.c ****     bc.raw = eeconfig_read_backlight();
 1457               		.loc 1 171 0
 1458 0266 0E94 0000 		call eeconfig_read_backlight
 1459 026a C82F      		mov r28,r24
 172:../../tmk_core_custom/common/command.c ****     print("backlight_config.raw: "); print_hex8(bc.raw); print("\n");
 1460               		.loc 1 172 0
 1461 026c 80E0      		ldi r24,lo8(__c.4956)
 1462 026e 90E0      		ldi r25,hi8(__c.4956)
 1463 0270 0E94 0000 		call xputs
 1464 0274 1F92      		push __zero_reg__
 1465               	.LCFI141:
 1466               		.cfi_def_cfa_offset 32
 1467 0276 CF93      		push r28
 1468               	.LCFI142:
 1469               		.cfi_def_cfa_offset 33
 1470 0278 20E0      		ldi r18,lo8(__c.4958)
 1471 027a 30E0      		ldi r19,hi8(__c.4958)
 1472 027c 3F93      		push r19
 1473               	.LCFI143:
 1474               		.cfi_def_cfa_offset 34
 1475 027e 2F93      		push r18
 1476               	.LCFI144:
 1477               		.cfi_def_cfa_offset 35
 1478 0280 0E94 0000 		call __xprintf
 1479 0284 8DB7      		in r24,__SP_L__
 1480 0286 9EB7      		in r25,__SP_H__
 1481 0288 8096      		adiw r24,32
 1482 028a 0FB6      		in __tmp_reg__,__SREG__
 1483 028c F894      		cli
 1484 028e 9EBF      		out __SP_H__,r25
 1485 0290 0FBE      		out __SREG__,__tmp_reg__
 1486 0292 8DBF      		out __SP_L__,r24
 1487               	.LCFI145:
 1488               		.cfi_def_cfa_offset 3
 1489 0294 80E0      		ldi r24,lo8(__c.4960)
 1490 0296 90E0      		ldi r25,hi8(__c.4960)
 1491 0298 0E94 0000 		call xputs
 173:../../tmk_core_custom/common/command.c ****     print(".enable: "); print_dec(bc.enable); print("\n");
 1492               		.loc 1 173 0
 1493 029c 80E0      		ldi r24,lo8(__c.4962)
 1494 029e 90E0      		ldi r25,hi8(__c.4962)
 1495 02a0 0E94 0000 		call xputs
 1496 02a4 8C2F      		mov r24,r28
 1497 02a6 8170      		andi r24,1
 1498 02a8 1F92      		push __zero_reg__
 1499               	.LCFI146:
 1500               		.cfi_def_cfa_offset 4
 1501 02aa 8F93      		push r24
 1502               	.LCFI147:
 1503               		.cfi_def_cfa_offset 5
 1504 02ac 20E0      		ldi r18,lo8(__c.4964)
 1505 02ae 30E0      		ldi r19,hi8(__c.4964)
 1506 02b0 3F93      		push r19
 1507               	.LCFI148:
 1508               		.cfi_def_cfa_offset 6
 1509 02b2 2F93      		push r18
 1510               	.LCFI149:
 1511               		.cfi_def_cfa_offset 7
 1512 02b4 0E94 0000 		call __xprintf
 1513 02b8 80E0      		ldi r24,lo8(__c.4966)
 1514 02ba 90E0      		ldi r25,hi8(__c.4966)
 1515 02bc 0E94 0000 		call xputs
 174:../../tmk_core_custom/common/command.c ****     print(".level: "); print_dec(bc.level); print("\n");
 1516               		.loc 1 174 0
 1517 02c0 80E0      		ldi r24,lo8(__c.4968)
 1518 02c2 90E0      		ldi r25,hi8(__c.4968)
 1519 02c4 0E94 0000 		call xputs
 1520 02c8 C695      		lsr r28
 1521 02ca 1F92      		push __zero_reg__
 1522               	.LCFI150:
 1523               		.cfi_def_cfa_offset 8
 1524 02cc CF93      		push r28
 1525               	.LCFI151:
 1526               		.cfi_def_cfa_offset 9
 1527 02ce 80E0      		ldi r24,lo8(__c.4970)
 1528 02d0 90E0      		ldi r25,hi8(__c.4970)
 1529 02d2 9F93      		push r25
 1530               	.LCFI152:
 1531               		.cfi_def_cfa_offset 10
 1532 02d4 8F93      		push r24
 1533               	.LCFI153:
 1534               		.cfi_def_cfa_offset 11
 1535 02d6 0E94 0000 		call __xprintf
 1536 02da 80E0      		ldi r24,lo8(__c.4972)
 1537 02dc 90E0      		ldi r25,hi8(__c.4972)
 1538 02de 0E94 0000 		call xputs
 1539 02e2 8DB7      		in r24,__SP_L__
 1540 02e4 9EB7      		in r25,__SP_H__
 1541 02e6 0896      		adiw r24,8
 1542 02e8 0FB6      		in __tmp_reg__,__SREG__
 1543 02ea F894      		cli
 1544 02ec 9EBF      		out __SP_H__,r25
 1545 02ee 0FBE      		out __SREG__,__tmp_reg__
 1546 02f0 8DBF      		out __SP_L__,r24
 1547               	.LCFI154:
 1548               		.cfi_def_cfa_offset 3
 1549 02f2 00C0      		rjmp .L77
 1550               	.L65:
 1551               	.LBE150:
 1552               	.LBE149:
 202:../../tmk_core_custom/common/command.c ****             if (host_get_driver()) {
 1553               		.loc 1 202 0
 1554 02f4 0E94 0000 		call host_get_driver
 1555 02f8 892B      		or r24,r25
 1556 02fa 01F0      		breq .L70
 203:../../tmk_core_custom/common/command.c ****                 host_driver = host_get_driver();
 1557               		.loc 1 203 0
 1558 02fc 0E94 0000 		call host_get_driver
 1559 0300 9093 0000 		sts host_driver.4977+1,r25
 1560 0304 8093 0000 		sts host_driver.4977,r24
 204:../../tmk_core_custom/common/command.c ****                 clear_keyboard();
 1561               		.loc 1 204 0
 1562 0308 0E94 0000 		call clear_keyboard
 205:../../tmk_core_custom/common/command.c ****                 host_set_driver(0);
 1563               		.loc 1 205 0
 1564 030c 80E0      		ldi r24,0
 1565 030e 90E0      		ldi r25,0
 1566 0310 0E94 0000 		call host_set_driver
 206:../../tmk_core_custom/common/command.c ****                 print("Locked.\n");
 1567               		.loc 1 206 0
 1568 0314 80E0      		ldi r24,lo8(__c.4983)
 1569 0316 90E0      		ldi r25,hi8(__c.4983)
 1570 0318 00C0      		rjmp .L76
 1571               	.L70:
 208:../../tmk_core_custom/common/command.c ****                 host_set_driver(host_driver);
 1572               		.loc 1 208 0
 1573 031a 8091 0000 		lds r24,host_driver.4977
 1574 031e 9091 0000 		lds r25,host_driver.4977+1
 1575 0322 0E94 0000 		call host_set_driver
 209:../../tmk_core_custom/common/command.c ****                 print("Unlocked.\n");
 1576               		.loc 1 209 0
 1577 0326 80E0      		ldi r24,lo8(__c.4985)
 1578 0328 90E0      		ldi r25,hi8(__c.4985)
 1579               	.L76:
 1580 032a 0E94 0000 		call xputs
 1581               	.L77:
 404:../../tmk_core_custom/common/command.c ****     return true;
 1582               		.loc 1 404 0
 1583 032e C1E0      		ldi r28,lo8(1)
 1584 0330 00C0      		rjmp .L69
 1585               	.L55:
 1586               	.LBB151:
 1587               	.LBB152:
 118:../../tmk_core_custom/common/command.c ****     print("\n\n----- Command Help -----\n");
 1588               		.loc 1 118 0
 1589 0332 80E0      		ldi r24,lo8(__c.4822)
 1590 0334 90E0      		ldi r25,hi8(__c.4822)
 1591 0336 0E94 0000 		call xputs
 119:../../tmk_core_custom/common/command.c ****     print("c:	enter console mode\n");
 1592               		.loc 1 119 0
 1593 033a 80E0      		ldi r24,lo8(__c.4824)
 1594 033c 90E0      		ldi r25,hi8(__c.4824)
 1595 033e 0E94 0000 		call xputs
 120:../../tmk_core_custom/common/command.c ****     print("d:	toggle debug enable\n");
 1596               		.loc 1 120 0
 1597 0342 80E0      		ldi r24,lo8(__c.4826)
 1598 0344 90E0      		ldi r25,hi8(__c.4826)
 1599 0346 0E94 0000 		call xputs
 121:../../tmk_core_custom/common/command.c ****     print("x:	toggle matrix debug\n");
 1600               		.loc 1 121 0
 1601 034a 80E0      		ldi r24,lo8(__c.4828)
 1602 034c 90E0      		ldi r25,hi8(__c.4828)
 1603 034e 0E94 0000 		call xputs
 122:../../tmk_core_custom/common/command.c ****     print("k:	toggle keyboard debug\n");
 1604               		.loc 1 122 0
 1605 0352 80E0      		ldi r24,lo8(__c.4830)
 1606 0354 90E0      		ldi r25,hi8(__c.4830)
 1607 0356 0E94 0000 		call xputs
 123:../../tmk_core_custom/common/command.c ****     print("m:	toggle mouse debug\n");
 1608               		.loc 1 123 0
 1609 035a 80E0      		ldi r24,lo8(__c.4832)
 1610 035c 90E0      		ldi r25,hi8(__c.4832)
 1611 035e 0E94 0000 		call xputs
 127:../../tmk_core_custom/common/command.c ****     print("v:	print device version & info\n");
 1612               		.loc 1 127 0
 1613 0362 80E0      		ldi r24,lo8(__c.4834)
 1614 0364 90E0      		ldi r25,hi8(__c.4834)
 1615 0366 0E94 0000 		call xputs
 128:../../tmk_core_custom/common/command.c ****     print("t:	print timer count\n");
 1616               		.loc 1 128 0
 1617 036a 80E0      		ldi r24,lo8(__c.4836)
 1618 036c 90E0      		ldi r25,hi8(__c.4836)
 1619 036e 0E94 0000 		call xputs
 129:../../tmk_core_custom/common/command.c ****     print("s:	print status\n");
 1620               		.loc 1 129 0
 1621 0372 80E0      		ldi r24,lo8(__c.4838)
 1622 0374 90E0      		ldi r25,hi8(__c.4838)
 1623 0376 0E94 0000 		call xputs
 130:../../tmk_core_custom/common/command.c ****     print("e:	print eeprom config\n");
 1624               		.loc 1 130 0
 1625 037a 80E0      		ldi r24,lo8(__c.4840)
 1626 037c 90E0      		ldi r25,hi8(__c.4840)
 1627 037e 0E94 0000 		call xputs
 132:../../tmk_core_custom/common/command.c ****     print("n:	toggle NKRO\n");
 1628               		.loc 1 132 0
 1629 0382 80E0      		ldi r24,lo8(__c.4842)
 1630 0384 90E0      		ldi r25,hi8(__c.4842)
 1631 0386 0E94 0000 		call xputs
 134:../../tmk_core_custom/common/command.c ****     print("0/F10:	switch to Layer0 \n");
 1632               		.loc 1 134 0
 1633 038a 80E0      		ldi r24,lo8(__c.4844)
 1634 038c 90E0      		ldi r25,hi8(__c.4844)
 1635 038e 0E94 0000 		call xputs
 135:../../tmk_core_custom/common/command.c ****     print("1/F1:	switch to Layer1 \n");
 1636               		.loc 1 135 0
 1637 0392 80E0      		ldi r24,lo8(__c.4846)
 1638 0394 90E0      		ldi r25,hi8(__c.4846)
 1639 0396 0E94 0000 		call xputs
 136:../../tmk_core_custom/common/command.c ****     print("2/F2:	switch to Layer2 \n");
 1640               		.loc 1 136 0
 1641 039a 80E0      		ldi r24,lo8(__c.4848)
 1642 039c 90E0      		ldi r25,hi8(__c.4848)
 1643 039e 0E94 0000 		call xputs
 137:../../tmk_core_custom/common/command.c ****     print("3/F3:	switch to Layer3 \n");
 1644               		.loc 1 137 0
 1645 03a2 80E0      		ldi r24,lo8(__c.4850)
 1646 03a4 90E0      		ldi r25,hi8(__c.4850)
 1647 03a6 0E94 0000 		call xputs
 138:../../tmk_core_custom/common/command.c ****     print("4/F4:	switch to Layer4 \n");
 1648               		.loc 1 138 0
 1649 03aa 80E0      		ldi r24,lo8(__c.4852)
 1650 03ac 90E0      		ldi r25,hi8(__c.4852)
 1651 03ae 0E94 0000 		call xputs
 139:../../tmk_core_custom/common/command.c ****     print("PScr:	power down/remote wake-up\n");
 1652               		.loc 1 139 0
 1653 03b2 80E0      		ldi r24,lo8(__c.4854)
 1654 03b4 90E0      		ldi r25,hi8(__c.4854)
 1655 03b6 0E94 0000 		call xputs
 140:../../tmk_core_custom/common/command.c ****     print("Caps:	Lock Keyboard(Child Proof)\n");
 1656               		.loc 1 140 0
 1657 03ba 80E0      		ldi r24,lo8(__c.4856)
 1658 03bc 90E0      		ldi r25,hi8(__c.4856)
 1659 03be 0E94 0000 		call xputs
 141:../../tmk_core_custom/common/command.c ****     print("Paus:	jump to bootloader\n");
 1660               		.loc 1 141 0
 1661 03c2 80E0      		ldi r24,lo8(__c.4858)
 1662 03c4 90E0      		ldi r25,hi8(__c.4858)
 1663 03c6 00C0      		rjmp .L76
 1664               	.L51:
 1665               	.LBE152:
 1666               	.LBE151:
 217:../../tmk_core_custom/common/command.c ****             debug_matrix   = false;
 1667               		.loc 1 217 0
 1668 03c8 8091 0000 		lds r24,debug_config
 220:../../tmk_core_custom/common/command.c ****             debug_enable   = false;
 1669               		.loc 1 220 0
 1670 03cc 817F      		andi r24,lo8(-15)
 1671 03ce 8E7F      		andi r24,lo8(~(1<<0))
 1672 03d0 8093 0000 		sts debug_config,r24
 221:../../tmk_core_custom/common/command.c ****             command_console_help();
 1673               		.loc 1 221 0
 1674 03d4 0E94 0000 		call command_console_help
 222:../../tmk_core_custom/common/command.c ****             print("\nEnter Console Mode\n");
 1675               		.loc 1 222 0
 1676 03d8 80E0      		ldi r24,lo8(__c.4990)
 1677 03da 90E0      		ldi r25,hi8(__c.4990)
 1678 03dc 0E94 0000 		call xputs
 223:../../tmk_core_custom/common/command.c ****             print("C> ");
 1679               		.loc 1 223 0
 1680 03e0 80E0      		ldi r24,lo8(__c.4992)
 1681 03e2 90E0      		ldi r25,hi8(__c.4992)
 1682 03e4 0E94 0000 		call xputs
 224:../../tmk_core_custom/common/command.c ****             command_state = CONSOLE;
 1683               		.loc 1 224 0
 1684 03e8 81E0      		ldi r24,lo8(1)
 1685 03ea 8093 0000 		sts command_state,r24
 1686 03ee 00C0      		rjmp .L77
 1687               	.L68:
 227:../../tmk_core_custom/common/command.c ****             clear_keyboard();
 1688               		.loc 1 227 0
 1689 03f0 0E94 0000 		call clear_keyboard
 228:../../tmk_core_custom/common/command.c ****             print("\n\nJump to bootloader... ");
 1690               		.loc 1 228 0
 1691 03f4 80E0      		ldi r24,lo8(__c.4995)
 1692 03f6 90E0      		ldi r25,hi8(__c.4995)
 1693 03f8 0E94 0000 		call xputs
 1694               	.LBB153:
 1695               	.LBB154:
 1696               		.file 2 "/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h"
   1:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
   6:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
   9:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  12:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      distribution.
  16:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  17:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  21:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  33:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* $Id$ */
  34:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  35:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  38:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef __HAS_DELAY_CYCLES
  39:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #define __HAS_DELAY_CYCLES 1
  40:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  41:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  42:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <inttypes.h>
  43:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <util/delay_basic.h>
  44:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #include <math.h>
  45:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  46:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /** \file */
  47:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  48:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \code
  49:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  50:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  51:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     #include <util/delay.h>
  52:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \endcode
  53:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  54:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  55:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  56:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  57:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     used.
  58:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  59:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  60:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  61:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  62:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  63:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  64:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  65:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  66:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  67:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  68:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  69:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  70:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  71:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  72:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  73:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  74:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  75:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     routines linked into the application.
  76:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  77:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  78:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  79:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  80:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  81:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** */
  82:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  83:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  84:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  85:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  86:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  87:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  88:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef F_CPU
  89:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  90:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  91:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # define F_CPU 1000000UL
  92:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  93:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  94:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  95:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  96:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
  97:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
  98:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
  99:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 100:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   __STDC_HOSTED__
 101:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #  include <math.h>
 102:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #endif
 103:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 104:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** /**
 105:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    \ingroup util_delay
 106:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 107:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 108:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 109:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 110:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 111:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 112:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 113:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 114:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 115:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 116:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 117:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 118:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 119:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 120:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 121:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 122:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 123:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    no delay i.e., 0ms.
 124:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 125:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 126:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 127:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 128:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 129:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 130:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    to round down and round to closest integer.
 131:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 132:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Note: The new implementation of _delay_ms(double __ms) with 
 133:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible. 
 134:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 135:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    Also, the backward compatible
 136:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 137:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 138:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 139:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 140:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****  */
 141:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** void
 142:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** _delay_ms(double __ms)
 143:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** {
 144:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	double __tmp ; 
 145:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 146:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 147:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h ****   __STDC_HOSTED__
 148:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 149:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 150:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 151:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 152:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 153:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 154:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 155:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 156:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 157:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 158:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#else
 159:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		//round up by default
 160:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 161:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	#endif
 162:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 
 163:/usr/local/CrossPack-AVR-20131216/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 1697               		.loc 2 163 0
 1698 03fc 9FEF      		ldi r25,lo8(3199999)
 1699 03fe 23ED      		ldi r18,hi8(3199999)
 1700 0400 80E3      		ldi r24,hlo8(3199999)
 1701 0402 9150      		1: subi r25,1
 1702 0404 2040      		sbci r18,0
 1703 0406 8040      		sbci r24,0
 1704 0408 01F4      		brne 1b
 1705 040a 00C0      		rjmp .
 1706 040c 0000      		nop
 1707               	.LBE154:
 1708               	.LBE153:
 230:../../tmk_core_custom/common/command.c ****             bootloader_jump(); // not return
 1709               		.loc 1 230 0
 1710 040e 0E94 0000 		call bootloader_jump
 231:../../tmk_core_custom/common/command.c ****             print("not supported.\n");
 1711               		.loc 1 231 0
 1712 0412 80E0      		ldi r24,lo8(__c.4997)
 1713 0414 90E0      		ldi r25,hi8(__c.4997)
 1714 0416 00C0      		rjmp .L76
 1715               	.L53:
 234:../../tmk_core_custom/common/command.c ****             if (debug_enable) {
 1716               		.loc 1 234 0
 1717 0418 8091 0000 		lds r24,debug_config
 1718 041c C82F      		mov r28,r24
 1719 041e C170      		andi r28,1
 1720 0420 80FF      		sbrs r24,0
 1721 0422 00C0      		rjmp .L71
 235:../../tmk_core_custom/common/command.c ****                 print("\nDEBUG: disabled.\n");
 1722               		.loc 1 235 0
 1723 0424 80E0      		ldi r24,lo8(__c.5000)
 1724 0426 90E0      		ldi r25,hi8(__c.5000)
 1725 0428 0E94 0000 		call xputs
 236:../../tmk_core_custom/common/command.c ****                 debug_matrix   = false;
 1726               		.loc 1 236 0
 1727 042c 8091 0000 		lds r24,debug_config
 239:../../tmk_core_custom/common/command.c ****                 debug_enable   = false;
 1728               		.loc 1 239 0
 1729 0430 817F      		andi r24,lo8(-15)
 1730 0432 8E7F      		andi r24,lo8(~(1<<0))
 1731 0434 00C0      		rjmp .L78
 1732               	.L71:
 241:../../tmk_core_custom/common/command.c ****                 print("\nDEBUG: enabled.\n");
 1733               		.loc 1 241 0
 1734 0436 80E0      		ldi r24,lo8(__c.5002)
 1735 0438 90E0      		ldi r25,hi8(__c.5002)
 1736 043a 0E94 0000 		call xputs
 242:../../tmk_core_custom/common/command.c ****                 debug_enable   = true;
 1737               		.loc 1 242 0
 1738 043e 8091 0000 		lds r24,debug_config
 1739 0442 8160      		ori r24,lo8(1<<0)
 1740 0444 8093 0000 		sts debug_config,r24
 1741 0448 00C0      		rjmp .L77
 1742               	.L62:
 246:../../tmk_core_custom/common/command.c ****             debug_matrix = !debug_matrix;
 1743               		.loc 1 246 0
 1744 044a 8091 0000 		lds r24,debug_config
 1745 044e 81FB      		bst r24,1
 1746 0450 CC27      		clr r28
 1747 0452 C0F9      		bld r28,0
 1748 0454 91E0      		ldi r25,lo8(1)
 1749 0456 C927      		eor r28,r25
 1750 0458 C0FB      		bst r28,0
 1751 045a 81F9      		bld r24,1
 1752 045c 8093 0000 		sts debug_config,r24
 247:../../tmk_core_custom/common/command.c ****             if (debug_matrix) {
 1753               		.loc 1 247 0
 1754 0460 CC23      		tst r28
 1755 0462 01F0      		breq .L72
 248:../../tmk_core_custom/common/command.c ****                 print("\nDEBUG: matrix enabled.\n");
 1756               		.loc 1 248 0
 1757 0464 80E0      		ldi r24,lo8(__c.5005)
 1758 0466 90E0      		ldi r25,hi8(__c.5005)
 1759 0468 00C0      		rjmp .L79
 1760               	.L72:
 251:../../tmk_core_custom/common/command.c ****                 print("\nDEBUG: matrix disabled.\n");
 1761               		.loc 1 251 0
 1762 046a 80E0      		ldi r24,lo8(__c.5007)
 1763 046c 90E0      		ldi r25,hi8(__c.5007)
 1764 046e 00C0      		rjmp .L76
 1765               	.L56:
 255:../../tmk_core_custom/common/command.c ****             debug_keyboard = !debug_keyboard;
 1766               		.loc 1 255 0
 1767 0470 8091 0000 		lds r24,debug_config
 1768 0474 82FB      		bst r24,2
 1769 0476 CC27      		clr r28
 1770 0478 C0F9      		bld r28,0
 1771 047a 91E0      		ldi r25,lo8(1)
 1772 047c C927      		eor r28,r25
 1773 047e C0FB      		bst r28,0
 1774 0480 82F9      		bld r24,2
 1775 0482 8093 0000 		sts debug_config,r24
 256:../../tmk_core_custom/common/command.c ****             if (debug_keyboard) {
 1776               		.loc 1 256 0
 1777 0486 CC23      		tst r28
 1778 0488 01F0      		breq .L73
 257:../../tmk_core_custom/common/command.c ****                 print("\nDEBUG: keyboard enabled.\n");
 1779               		.loc 1 257 0
 1780 048a 80E0      		ldi r24,lo8(__c.5010)
 1781 048c 90E0      		ldi r25,hi8(__c.5010)
 1782 048e 00C0      		rjmp .L79
 1783               	.L73:
 260:../../tmk_core_custom/common/command.c ****                 print("\nDEBUG: keyboard disabled.\n");
 1784               		.loc 1 260 0
 1785 0490 80E0      		ldi r24,lo8(__c.5012)
 1786 0492 90E0      		ldi r25,hi8(__c.5012)
 1787 0494 00C0      		rjmp .L76
 1788               	.L57:
 264:../../tmk_core_custom/common/command.c ****             debug_mouse = !debug_mouse;
 1789               		.loc 1 264 0
 1790 0496 8091 0000 		lds r24,debug_config
 1791 049a 83FB      		bst r24,3
 1792 049c CC27      		clr r28
 1793 049e C0F9      		bld r28,0
 1794 04a0 91E0      		ldi r25,lo8(1)
 1795 04a2 C927      		eor r28,r25
 1796 04a4 C0FB      		bst r28,0
 1797 04a6 83F9      		bld r24,3
 1798 04a8 8093 0000 		sts debug_config,r24
 265:../../tmk_core_custom/common/command.c ****             if (debug_mouse) {
 1799               		.loc 1 265 0
 1800 04ac CC23      		tst r28
 1801 04ae 01F0      		breq .L74
 266:../../tmk_core_custom/common/command.c ****                 print("\nDEBUG: mouse enabled.\n");
 1802               		.loc 1 266 0
 1803 04b0 80E0      		ldi r24,lo8(__c.5015)
 1804 04b2 90E0      		ldi r25,hi8(__c.5015)
 1805               	.L79:
 1806 04b4 0E94 0000 		call xputs
 267:../../tmk_core_custom/common/command.c ****                 debug_enable = true;
 1807               		.loc 1 267 0
 1808 04b8 8091 0000 		lds r24,debug_config
 1809 04bc 8160      		ori r24,lo8(1<<0)
 1810               	.L78:
 1811 04be 8093 0000 		sts debug_config,r24
 1812 04c2 00C0      		rjmp .L69
 1813               	.L74:
 269:../../tmk_core_custom/common/command.c ****                 print("\nDEBUG: mouse disabled.\n");
 1814               		.loc 1 269 0
 1815 04c4 80E0      		ldi r24,lo8(__c.5017)
 1816 04c6 90E0      		ldi r25,hi8(__c.5017)
 1817 04c8 00C0      		rjmp .L76
 1818               	.L61:
 273:../../tmk_core_custom/common/command.c ****             print("\n\n----- Version -----\n");
 1819               		.loc 1 273 0
 1820 04ca 80E0      		ldi r24,lo8(__c.5020)
 1821 04cc 90E0      		ldi r25,hi8(__c.5020)
 1822 04ce 0E94 0000 		call xputs
 274:../../tmk_core_custom/common/command.c ****             print("DESC: " STR(DESCRIPTION) "\n");
 1823               		.loc 1 274 0
 1824 04d2 80E0      		ldi r24,lo8(__c.5022)
 1825 04d4 90E0      		ldi r25,hi8(__c.5022)
 1826 04d6 0E94 0000 		call xputs
 275:../../tmk_core_custom/common/command.c ****             print("VID: " STR(VENDOR_ID) "(" STR(MANUFACTURER) ") "
 1827               		.loc 1 275 0
 1828 04da 80E0      		ldi r24,lo8(__c.5024)
 1829 04dc 90E0      		ldi r25,hi8(__c.5024)
 1830 04de 0E94 0000 		call xputs
 278:../../tmk_core_custom/common/command.c ****             print("BUILD: " STR(VERSION) " (" __TIME__ " " __DATE__ ")\n");
 1831               		.loc 1 278 0
 1832 04e2 80E0      		ldi r24,lo8(__c.5026)
 1833 04e4 90E0      		ldi r25,hi8(__c.5026)
 1834 04e6 0E94 0000 		call xputs
 280:../../tmk_core_custom/common/command.c ****             print("OPTIONS:"
 1835               		.loc 1 280 0
 1836 04ea 80E0      		ldi r24,lo8(__c.5028)
 1837 04ec 90E0      		ldi r25,hi8(__c.5028)
 1838 04ee 0E94 0000 		call xputs
 334:../../tmk_core_custom/common/command.c ****             print("GCC: " STR(__GNUC__) "." STR(__GNUC_MINOR__) "." STR(__GNUC_PATCHLEVEL__)
 1839               		.loc 1 334 0
 1840 04f2 80E0      		ldi r24,lo8(__c.5030)
 1841 04f4 90E0      		ldi r25,hi8(__c.5030)
 1842 04f6 00C0      		rjmp .L76
 1843               	.L60:
 339:../../tmk_core_custom/common/command.c ****             print_val_hex32(timer_count);
 1844               		.loc 1 339 0
 1845 04f8 8091 0000 		lds r24,timer_count
 1846 04fc 9091 0000 		lds r25,timer_count+1
 1847 0500 A091 0000 		lds r26,timer_count+2
 1848 0504 B091 0000 		lds r27,timer_count+3
 1849 0508 BF93      		push r27
 1850               	.LCFI155:
 1851               		.cfi_def_cfa_offset 4
 1852 050a AF93      		push r26
 1853               	.LCFI156:
 1854               		.cfi_def_cfa_offset 5
 1855 050c 9F93      		push r25
 1856               	.LCFI157:
 1857               		.cfi_def_cfa_offset 6
 1858 050e 8F93      		push r24
 1859               	.LCFI158:
 1860               		.cfi_def_cfa_offset 7
 1861 0510 80E0      		ldi r24,lo8(__c.5033)
 1862 0512 90E0      		ldi r25,hi8(__c.5033)
 1863 0514 9F93      		push r25
 1864               	.LCFI159:
 1865               		.cfi_def_cfa_offset 8
 1866 0516 8F93      		push r24
 1867               	.LCFI160:
 1868               		.cfi_def_cfa_offset 9
 1869 0518 0E94 0000 		call __xprintf
 340:../../tmk_core_custom/common/command.c ****             break;
 1870               		.loc 1 340 0
 1871 051c 0F90      		pop __tmp_reg__
 1872 051e 0F90      		pop __tmp_reg__
 1873 0520 0F90      		pop __tmp_reg__
 1874 0522 0F90      		pop __tmp_reg__
 1875 0524 0F90      		pop __tmp_reg__
 1876 0526 0F90      		pop __tmp_reg__
 1877               	.LCFI161:
 1878               		.cfi_def_cfa_offset 3
 1879 0528 00C0      		rjmp .L77
 1880               	.L59:
 342:../../tmk_core_custom/common/command.c ****             print("\n\n----- Status -----\n");
 1881               		.loc 1 342 0
 1882 052a 80E0      		ldi r24,lo8(__c.5036)
 1883 052c 90E0      		ldi r25,hi8(__c.5036)
 1884 052e 0E94 0000 		call xputs
 343:../../tmk_core_custom/common/command.c ****             print_val_hex8(host_keyboard_leds());
 1885               		.loc 1 343 0
 1886 0532 0E94 0000 		call host_keyboard_leds
 1887 0536 1F92      		push __zero_reg__
 1888               	.LCFI162:
 1889               		.cfi_def_cfa_offset 4
 1890 0538 8F93      		push r24
 1891               	.LCFI163:
 1892               		.cfi_def_cfa_offset 5
 1893 053a 80E0      		ldi r24,lo8(__c.5038)
 1894 053c 90E0      		ldi r25,hi8(__c.5038)
 1895 053e 9F93      		push r25
 1896               	.LCFI164:
 1897               		.cfi_def_cfa_offset 6
 1898 0540 8F93      		push r24
 1899               	.LCFI165:
 1900               		.cfi_def_cfa_offset 7
 1901 0542 0E94 0000 		call __xprintf
 344:../../tmk_core_custom/common/command.c ****             print_val_hex8(keyboard_protocol);
 1902               		.loc 1 344 0
 1903 0546 8091 0000 		lds r24,keyboard_protocol
 1904 054a 1F92      		push __zero_reg__
 1905               	.LCFI166:
 1906               		.cfi_def_cfa_offset 8
 1907 054c 8F93      		push r24
 1908               	.LCFI167:
 1909               		.cfi_def_cfa_offset 9
 1910 054e 80E0      		ldi r24,lo8(__c.5040)
 1911 0550 90E0      		ldi r25,hi8(__c.5040)
 1912 0552 9F93      		push r25
 1913               	.LCFI168:
 1914               		.cfi_def_cfa_offset 10
 1915 0554 8F93      		push r24
 1916               	.LCFI169:
 1917               		.cfi_def_cfa_offset 11
 1918 0556 0E94 0000 		call __xprintf
 345:../../tmk_core_custom/common/command.c ****             print_val_hex8(keyboard_idle);
 1919               		.loc 1 345 0
 1920 055a 8091 0000 		lds r24,keyboard_idle
 1921 055e 1F92      		push __zero_reg__
 1922               	.LCFI170:
 1923               		.cfi_def_cfa_offset 12
 1924 0560 8F93      		push r24
 1925               	.LCFI171:
 1926               		.cfi_def_cfa_offset 13
 1927 0562 80E0      		ldi r24,lo8(__c.5042)
 1928 0564 90E0      		ldi r25,hi8(__c.5042)
 1929 0566 9F93      		push r25
 1930               	.LCFI172:
 1931               		.cfi_def_cfa_offset 14
 1932 0568 8F93      		push r24
 1933               	.LCFI173:
 1934               		.cfi_def_cfa_offset 15
 1935 056a 0E94 0000 		call __xprintf
 359:../../tmk_core_custom/common/command.c ****             break;
 1936               		.loc 1 359 0
 1937 056e 8DB7      		in r24,__SP_L__
 1938 0570 9EB7      		in r25,__SP_H__
 1939 0572 0C96      		adiw r24,12
 1940 0574 0FB6      		in __tmp_reg__,__SREG__
 1941 0576 F894      		cli
 1942 0578 9EBF      		out __SP_H__,r25
 1943 057a 0FBE      		out __SREG__,__tmp_reg__
 1944 057c 8DBF      		out __SP_L__,r24
 1945               	.LCFI174:
 1946               		.cfi_def_cfa_offset 3
 1947 057e 00C0      		rjmp .L77
 1948               	.L58:
 362:../../tmk_core_custom/common/command.c ****             clear_keyboard(); //Prevents stuck keys.
 1949               		.loc 1 362 0
 1950 0580 0E94 0000 		call clear_keyboard
 363:../../tmk_core_custom/common/command.c ****             keyboard_nkro = !keyboard_nkro;
 1951               		.loc 1 363 0
 1952 0584 C091 0000 		lds r28,keyboard_nkro
 1953 0588 81E0      		ldi r24,lo8(1)
 1954 058a C827      		eor r28,r24
 1955 058c C093 0000 		sts keyboard_nkro,r28
 364:../../tmk_core_custom/common/command.c ****             if (keyboard_nkro)
 1956               		.loc 1 364 0
 1957 0590 CC23      		tst r28
 1958 0592 01F0      		breq .L75
 365:../../tmk_core_custom/common/command.c ****                 print("NKRO: enabled\n");
 1959               		.loc 1 365 0
 1960 0594 80E0      		ldi r24,lo8(__c.5045)
 1961 0596 90E0      		ldi r25,hi8(__c.5045)
 1962 0598 0E94 0000 		call xputs
 1963 059c 00C0      		rjmp .L69
 1964               	.L75:
 367:../../tmk_core_custom/common/command.c ****                 print("NKRO: disabled\n");
 1965               		.loc 1 367 0
 1966 059e 80E0      		ldi r24,lo8(__c.5047)
 1967 05a0 90E0      		ldi r25,hi8(__c.5047)
 1968 05a2 00C0      		rjmp .L76
 1969               	.L67:
 382:../../tmk_core_custom/common/command.c ****             host_system_send(SYSTEM_POWER_DOWN);
 1970               		.loc 1 382 0
 1971 05a4 81E8      		ldi r24,lo8(-127)
 1972 05a6 90E0      		ldi r25,0
 1973 05a8 0E94 0000 		call host_system_send
 1974               	.LBB155:
 1975               	.LBB156:
 1976               		.loc 2 163 0
 1977 05ac 9FEF      		ldi r25,lo8(319999)
 1978 05ae 21EE      		ldi r18,hi8(319999)
 1979 05b0 84E0      		ldi r24,hlo8(319999)
 1980 05b2 9150      		1: subi r25,1
 1981 05b4 2040      		sbci r18,0
 1982 05b6 8040      		sbci r24,0
 1983 05b8 01F4      		brne 1b
 1984 05ba 00C0      		rjmp .
 1985 05bc 0000      		nop
 1986               	.LBE156:
 1987               	.LBE155:
 384:../../tmk_core_custom/common/command.c ****             host_system_send(0);
 1988               		.loc 1 384 0
 1989 05be 80E0      		ldi r24,0
 1990 05c0 90E0      		ldi r25,0
 1991 05c2 0E94 0000 		call host_system_send
 1992               	.LBB157:
 1993               	.LBB158:
 1994               		.loc 2 163 0
 1995 05c6 9FEF      		ldi r25,lo8(1599999)
 1996 05c8 29E6      		ldi r18,hi8(1599999)
 1997 05ca 88E1      		ldi r24,hlo8(1599999)
 1998 05cc 9150      		1: subi r25,1
 1999 05ce 2040      		sbci r18,0
 2000 05d0 8040      		sbci r24,0
 2001 05d2 01F4      		brne 1b
 2002 05d4 00C0      		rjmp .
 2003 05d6 0000      		nop
 2004 05d8 00C0      		rjmp .L77
 2005               	.L64:
 2006               	.LBE158:
 2007               	.LBE157:
 392:../../tmk_core_custom/common/command.c ****             switch_default_layer(0);
 2008               		.loc 1 392 0
 2009 05da 80E0      		ldi r24,0
 2010 05dc 00C0      		rjmp .L80
 2011               	.L63:
 395:../../tmk_core_custom/common/command.c ****             switch_default_layer((code - KC_1) + 1);
 2012               		.loc 1 395 0
 2013 05de 8D51      		subi r24,lo8(-(-29))
 2014 05e0 00C0      		rjmp .L80
 2015               	.L66:
 398:../../tmk_core_custom/common/command.c ****             switch_default_layer((code - KC_F1) + 1);
 2016               		.loc 1 398 0
 2017 05e2 8953      		subi r24,lo8(-(-57))
 2018               	.L80:
 2019 05e4 0E94 0000 		call switch_default_layer
 2020 05e8 00C0      		rjmp .L77
 2021               	.L50:
 401:../../tmk_core_custom/common/command.c ****             print("?");
 2022               		.loc 1 401 0
 2023 05ea 80E0      		ldi r24,lo8(__c.5056)
 2024 05ec 90E0      		ldi r25,hi8(__c.5056)
 2025 05ee 0E94 0000 		call xputs
 402:../../tmk_core_custom/common/command.c ****             return false;
 2026               		.loc 1 402 0
 2027 05f2 C0E0      		ldi r28,0
 2028               	.L69:
 405:../../tmk_core_custom/common/command.c **** }
 2029               		.loc 1 405 0
 2030 05f4 8C2F      		mov r24,r28
 2031               	/* epilogue start */
 2032 05f6 CF91      		pop r28
 2033 05f8 0895      		ret
 2034               		.cfi_endproc
 2035               	.LFE110:
 2037               		.section	.text.matrix_power_up,"ax",@progbits
 2038               		.weak	matrix_power_up
 2040               	matrix_power_up:
 2041               	.LFB103:
 2042               		.file 3 "../../tmk_core_custom/common/keyboard.h"
   1:../../tmk_core_custom/common/keyboard.h **** /*
   2:../../tmk_core_custom/common/keyboard.h **** Copyright 2011,2012,2013 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core_custom/common/keyboard.h **** 
   4:../../tmk_core_custom/common/keyboard.h **** This program is free software: you can redistribute it and/or modify
   5:../../tmk_core_custom/common/keyboard.h **** it under the terms of the GNU General Public License as published by
   6:../../tmk_core_custom/common/keyboard.h **** the Free Software Foundation, either version 2 of the License, or
   7:../../tmk_core_custom/common/keyboard.h **** (at your option) any later version.
   8:../../tmk_core_custom/common/keyboard.h **** 
   9:../../tmk_core_custom/common/keyboard.h **** This program is distributed in the hope that it will be useful,
  10:../../tmk_core_custom/common/keyboard.h **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../tmk_core_custom/common/keyboard.h **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../tmk_core_custom/common/keyboard.h **** GNU General Public License for more details.
  13:../../tmk_core_custom/common/keyboard.h **** 
  14:../../tmk_core_custom/common/keyboard.h **** You should have received a copy of the GNU General Public License
  15:../../tmk_core_custom/common/keyboard.h **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../tmk_core_custom/common/keyboard.h **** */
  17:../../tmk_core_custom/common/keyboard.h **** 
  18:../../tmk_core_custom/common/keyboard.h **** #ifndef KEYBOARD_H
  19:../../tmk_core_custom/common/keyboard.h **** #define KEYBOARD_H
  20:../../tmk_core_custom/common/keyboard.h **** 
  21:../../tmk_core_custom/common/keyboard.h **** #include <stdbool.h>
  22:../../tmk_core_custom/common/keyboard.h **** #include <stdint.h>
  23:../../tmk_core_custom/common/keyboard.h **** 
  24:../../tmk_core_custom/common/keyboard.h **** 
  25:../../tmk_core_custom/common/keyboard.h **** #ifdef __cplusplus
  26:../../tmk_core_custom/common/keyboard.h **** extern "C" {
  27:../../tmk_core_custom/common/keyboard.h **** #endif
  28:../../tmk_core_custom/common/keyboard.h **** 
  29:../../tmk_core_custom/common/keyboard.h **** /* key matrix position */
  30:../../tmk_core_custom/common/keyboard.h **** typedef struct {
  31:../../tmk_core_custom/common/keyboard.h ****     uint8_t col;
  32:../../tmk_core_custom/common/keyboard.h ****     uint8_t row;
  33:../../tmk_core_custom/common/keyboard.h **** } keypos_t;
  34:../../tmk_core_custom/common/keyboard.h **** 
  35:../../tmk_core_custom/common/keyboard.h **** /* key event */
  36:../../tmk_core_custom/common/keyboard.h **** typedef struct {
  37:../../tmk_core_custom/common/keyboard.h ****     keypos_t key;
  38:../../tmk_core_custom/common/keyboard.h ****     bool     pressed;
  39:../../tmk_core_custom/common/keyboard.h ****     uint16_t time;
  40:../../tmk_core_custom/common/keyboard.h **** } keyevent_t;
  41:../../tmk_core_custom/common/keyboard.h **** 
  42:../../tmk_core_custom/common/keyboard.h **** /* equivalent test of keypos_t */
  43:../../tmk_core_custom/common/keyboard.h **** #define KEYEQ(keya, keyb)       ((keya).row == (keyb).row && (keya).col == (keyb).col)
  44:../../tmk_core_custom/common/keyboard.h **** 
  45:../../tmk_core_custom/common/keyboard.h **** /* Rules for No Event:
  46:../../tmk_core_custom/common/keyboard.h ****  * 1) (time == 0) to handle (keyevent_t){} as empty event
  47:../../tmk_core_custom/common/keyboard.h ****  * 2) Matrix(255, 255) to make TICK event available
  48:../../tmk_core_custom/common/keyboard.h ****  */
  49:../../tmk_core_custom/common/keyboard.h **** static inline bool IS_NOEVENT(keyevent_t event) { return event.time == 0 || (event.key.row == 255 &
  50:../../tmk_core_custom/common/keyboard.h **** static inline bool IS_PRESSED(keyevent_t event) { return (!IS_NOEVENT(event) && event.pressed); }
  51:../../tmk_core_custom/common/keyboard.h **** static inline bool IS_RELEASED(keyevent_t event) { return (!IS_NOEVENT(event) && !event.pressed); }
  52:../../tmk_core_custom/common/keyboard.h **** 
  53:../../tmk_core_custom/common/keyboard.h **** /* Tick event */
  54:../../tmk_core_custom/common/keyboard.h **** #define TICK                    (keyevent_t){           \
  55:../../tmk_core_custom/common/keyboard.h ****     .key = (keypos_t){ .row = 255, .col = 255 },           \
  56:../../tmk_core_custom/common/keyboard.h ****     .pressed = false,                                   \
  57:../../tmk_core_custom/common/keyboard.h ****     .time = (timer_read() | 1)                          \
  58:../../tmk_core_custom/common/keyboard.h **** }
  59:../../tmk_core_custom/common/keyboard.h **** 
  60:../../tmk_core_custom/common/keyboard.h **** 
  61:../../tmk_core_custom/common/keyboard.h **** void keyboard_init(void);
  62:../../tmk_core_custom/common/keyboard.h **** void keyboard_task(void);
  63:../../tmk_core_custom/common/keyboard.h **** void keyboard_set_leds(uint8_t leds);
  64:../../tmk_core_custom/common/keyboard.h **** 
  65:../../tmk_core_custom/common/keyboard.h **** __attribute__ ((weak)) void matrix_power_up(void) {}
 2043               		.loc 3 65 0
 2044               		.cfi_startproc
 2045               	/* prologue: function */
 2046               	/* frame size = 0 */
 2047               	/* stack size = 0 */
 2048               	.L__stack_usage = 0
 2049 0000 0895      		ret
 2050               		.cfi_endproc
 2051               	.LFE103:
 2053               		.section	.text.matrix_power_down,"ax",@progbits
 2054               		.weak	matrix_power_down
 2056               	matrix_power_down:
 2057               	.LFB104:
  66:../../tmk_core_custom/common/keyboard.h **** __attribute__ ((weak)) void matrix_power_down(void) {}
 2058               		.loc 3 66 0
 2059               		.cfi_startproc
 2060               	/* prologue: function */
 2061               	/* frame size = 0 */
 2062               	/* stack size = 0 */
 2063               	.L__stack_usage = 0
 2064 0000 0895      		ret
 2065               		.cfi_endproc
 2066               	.LFE104:
 2068               		.section	.text.command_extra,"ax",@progbits
 2069               		.weak	command_extra
 2071               	command_extra:
 2072               	.LFB106:
 102:../../tmk_core_custom/common/command.c **** {
 2073               		.loc 1 102 0
 2074               		.cfi_startproc
 2075               	.LVL103:
 2076               	/* prologue: function */
 2077               	/* frame size = 0 */
 2078               	/* stack size = 0 */
 2079               	.L__stack_usage = 0
 104:../../tmk_core_custom/common/command.c **** }
 2080               		.loc 1 104 0
 2081 0000 80E0      		ldi r24,0
 2082               	.LVL104:
 2083 0002 0895      		ret
 2084               		.cfi_endproc
 2085               	.LFE106:
 2087               		.section	.text.command_console_extra,"ax",@progbits
 2088               		.weak	command_console_extra
 2090               	command_console_extra:
 2091               	.LFB107:
 108:../../tmk_core_custom/common/command.c **** {
 2092               		.loc 1 108 0
 2093               		.cfi_startproc
 2094               	.LVL105:
 2095               	/* prologue: function */
 2096               	/* frame size = 0 */
 2097               	/* stack size = 0 */
 2098               	.L__stack_usage = 0
 110:../../tmk_core_custom/common/command.c **** }
 2099               		.loc 1 110 0
 2100 0000 80E0      		ldi r24,0
 2101               	.LVL106:
 2102 0002 0895      		ret
 2103               		.cfi_endproc
 2104               	.LFE107:
 2106               		.section	.text.command_proc,"ax",@progbits
 2107               	.global	command_proc
 2109               	command_proc:
 2110               	.LFB105:
  73:../../tmk_core_custom/common/command.c **** {
 2111               		.loc 1 73 0
 2112               		.cfi_startproc
 2113 0000 CF93      		push r28
 2114               	.LCFI175:
 2115               		.cfi_def_cfa_offset 3
 2116               		.cfi_offset 28, -2
 2117               	/* prologue: function */
 2118               	/* frame size = 0 */
 2119               	/* stack size = 1 */
 2120               	.L__stack_usage = 1
 2121 0002 C82F      		mov r28,r24
  74:../../tmk_core_custom/common/command.c ****     switch (command_state) {
 2122               		.loc 1 74 0
 2123 0004 8091 0000 		lds r24,command_state
 2124 0008 8130      		cpi r24,lo8(1)
 2125 000a 01F0      		breq .L87
 2126 000c 00F0      		brlo .L88
 2127 000e 8230      		cpi r24,lo8(2)
 2128 0010 01F4      		brne .+2
 2129 0012 00C0      		rjmp .L89
 2130 0014 00C0      		rjmp .L163
 2131               	.L88:
  76:../../tmk_core_custom/common/command.c ****             if (!IS_COMMAND())
 2132               		.loc 1 76 0
 2133 0016 60E0      		ldi r22,0
 2134 0018 80E0      		ldi r24,0
 2135 001a 0E94 0000 		call matrix_is_on
 2136 001e 8823      		tst r24
 2137 0020 01F4      		brne .+2
 2138 0022 00C0      		rjmp .L159
  76:../../tmk_core_custom/common/command.c ****             if (!IS_COMMAND())
 2139               		.loc 1 76 0 is_stmt 0 discriminator 1
 2140 0024 63E0      		ldi r22,lo8(3)
 2141 0026 80E0      		ldi r24,0
 2142 0028 0E94 0000 		call matrix_is_on
 2143 002c 8823      		tst r24
 2144 002e 01F4      		brne .+2
 2145 0030 00C0      		rjmp .L159
 2146 0032 00C0      		rjmp .L162
 2147               	.L87:
  81:../../tmk_core_custom/common/command.c ****             if (IS_COMMAND())
 2148               		.loc 1 81 0 is_stmt 1
 2149 0034 60E0      		ldi r22,0
 2150 0036 80E0      		ldi r24,0
 2151 0038 0E94 0000 		call matrix_is_on
 2152 003c 8823      		tst r24
 2153 003e 01F0      		breq .L94
  81:../../tmk_core_custom/common/command.c ****             if (IS_COMMAND())
 2154               		.loc 1 81 0 is_stmt 0 discriminator 1
 2155 0040 63E0      		ldi r22,lo8(3)
 2156 0042 80E0      		ldi r24,0
 2157 0044 0E94 0000 		call matrix_is_on
 2158 0048 8823      		tst r24
 2159 004a 01F0      		breq .L94
 2160               	.L162:
  82:../../tmk_core_custom/common/command.c ****                 return (command_extra(code) || command_common(code));
 2161               		.loc 1 82 0 is_stmt 1
 2162 004c 8C2F      		mov r24,r28
 2163 004e 0E94 0000 		call command_extra
 2164 0052 8111      		cpse r24,__zero_reg__
 2165 0054 00C0      		rjmp .L120
  82:../../tmk_core_custom/common/command.c ****                 return (command_extra(code) || command_common(code));
 2166               		.loc 1 82 0 is_stmt 0 discriminator 2
 2167 0056 8C2F      		mov r24,r28
 2168 0058 0E94 0000 		call command_common
 2169 005c 00C0      		rjmp .L96
 2170               	.L94:
  84:../../tmk_core_custom/common/command.c ****                 return (command_console_extra(code) || command_console(code));
 2171               		.loc 1 84 0 is_stmt 1
 2172 005e 8C2F      		mov r24,r28
 2173 0060 0E94 0000 		call command_console_extra
 2174 0064 8111      		cpse r24,__zero_reg__
 2175 0066 00C0      		rjmp .L120
 2176               	.LBB201:
 2177               	.LBB202:
 422:../../tmk_core_custom/common/command.c ****     switch (code) {
 2178               		.loc 1 422 0
 2179 0068 C431      		cpi r28,lo8(20)
 2180 006a 01F0      		breq .L98
 2181 006c 00F4      		brsh .L99
 2182 006e CB30      		cpi r28,lo8(11)
 2183 0070 01F0      		breq .L100
 2184 0072 C031      		cpi r28,lo8(16)
 2185 0074 01F4      		brne .L97
 434:../../tmk_core_custom/common/command.c ****             mousekey_console_help();
 2186               		.loc 1 434 0
 2187 0076 0E94 0000 		call mousekey_console_help
 435:../../tmk_core_custom/common/command.c ****             print("\nEnter Mousekey Console\n");
 2188               		.loc 1 435 0
 2189 007a 80E0      		ldi r24,lo8(__c.5078)
 2190 007c 90E0      		ldi r25,hi8(__c.5078)
 2191 007e 0E94 0000 		call xputs
 436:../../tmk_core_custom/common/command.c ****             print("M0>");
 2192               		.loc 1 436 0
 2193 0082 80E0      		ldi r24,lo8(__c.5080)
 2194 0084 90E0      		ldi r25,hi8(__c.5080)
 2195 0086 0E94 0000 		call xputs
 437:../../tmk_core_custom/common/command.c ****             command_state = MOUSEKEY;
 2196               		.loc 1 437 0
 2197 008a 82E0      		ldi r24,lo8(2)
 2198 008c 8093 0000 		sts command_state,r24
 2199 0090 00C0      		rjmp .L120
 2200               	.L99:
 422:../../tmk_core_custom/common/command.c ****     switch (code) {
 2201               		.loc 1 422 0
 2202 0092 C932      		cpi r28,lo8(41)
 2203 0094 01F0      		breq .L98
 2204 0096 C833      		cpi r28,lo8(56)
 2205 0098 01F4      		brne .L97
 2206               	.L100:
 425:../../tmk_core_custom/common/command.c ****             command_console_help();
 2207               		.loc 1 425 0
 2208 009a 0E94 0000 		call command_console_help
 444:../../tmk_core_custom/common/command.c ****     print("C> ");
 2209               		.loc 1 444 0
 2210 009e 80E0      		ldi r24,lo8(__c.5085)
 2211 00a0 90E0      		ldi r25,hi8(__c.5085)
 2212 00a2 0E94 0000 		call xputs
 2213 00a6 00C0      		rjmp .L120
 2214               	.L98:
 429:../../tmk_core_custom/common/command.c ****             print("\nQuit Console Mode\n");
 2215               		.loc 1 429 0
 2216 00a8 80E0      		ldi r24,lo8(__c.5075)
 2217 00aa 90E0      		ldi r25,hi8(__c.5075)
 2218 00ac 0E94 0000 		call xputs
 430:../../tmk_core_custom/common/command.c ****             command_state = ONESHOT;
 2219               		.loc 1 430 0
 2220 00b0 1092 0000 		sts command_state,__zero_reg__
 2221 00b4 00C0      		rjmp .L103
 2222               	.L97:
 441:../../tmk_core_custom/common/command.c ****             print("?");
 2223               		.loc 1 441 0
 2224 00b6 80E0      		ldi r24,lo8(__c.5083)
 2225 00b8 90E0      		ldi r25,hi8(__c.5083)
 2226 00ba 0E94 0000 		call xputs
 2227 00be 00C0      		rjmp .L103
 2228               	.L120:
 2229               	.LBE202:
 2230               	.LBE201:
  84:../../tmk_core_custom/common/command.c ****                 return (command_console_extra(code) || command_console(code));
 2231               		.loc 1 84 0
 2232 00c0 81E0      		ldi r24,lo8(1)
 2233               	.L96:
  84:../../tmk_core_custom/common/command.c ****                 return (command_console_extra(code) || command_console(code));
 2234               		.loc 1 84 0 is_stmt 0 discriminator 4
 2235 00c2 8170      		andi r24,lo8(1)
 2236 00c4 00C0      		rjmp .L155
 2237               	.L89:
 2238               	.LBB203:
 2239               	.LBB204:
 587:../../tmk_core_custom/common/command.c ****     switch (code) {
 2240               		.loc 1 587 0 is_stmt 1
 2241 00c6 C832      		cpi r28,lo8(40)
 2242 00c8 00F4      		brsh .L105
 2243 00ca CE31      		cpi r28,lo8(30)
 2244 00cc 00F0      		brlo .+2
 2245 00ce 00C0      		rjmp .L106
 2246 00d0 CB30      		cpi r28,lo8(11)
 2247 00d2 01F0      		breq .L107
 2248 00d4 00F4      		brsh .L108
 2249 00d6 C730      		cpi r28,lo8(7)
 2250 00d8 01F0      		breq .+2
 2251 00da 00C0      		rjmp .L104
 628:../../tmk_core_custom/common/command.c ****             mk_delay = MOUSEKEY_DELAY/10;
 2252               		.loc 1 628 0
 2253 00dc 8EE1      		ldi r24,lo8(30)
 2254 00de 8093 0000 		sts mk_delay,r24
 629:../../tmk_core_custom/common/command.c ****             mk_interval = MOUSEKEY_INTERVAL;
 2255               		.loc 1 629 0
 2256 00e2 82E3      		ldi r24,lo8(50)
 2257 00e4 8093 0000 		sts mk_interval,r24
 630:../../tmk_core_custom/common/command.c ****             mk_max_speed = MOUSEKEY_MAX_SPEED;
 2258               		.loc 1 630 0
 2259 00e8 8AE0      		ldi r24,lo8(10)
 2260 00ea 8093 0000 		sts mk_max_speed,r24
 631:../../tmk_core_custom/common/command.c ****             mk_time_to_max = MOUSEKEY_TIME_TO_MAX;
 2261               		.loc 1 631 0
 2262 00ee 84E1      		ldi r24,lo8(20)
 2263 00f0 8093 0000 		sts mk_time_to_max,r24
 632:../../tmk_core_custom/common/command.c ****             mk_wheel_max_speed = MOUSEKEY_WHEEL_MAX_SPEED;
 2264               		.loc 1 632 0
 2265 00f4 88E0      		ldi r24,lo8(8)
 2266 00f6 8093 0000 		sts mk_wheel_max_speed,r24
 633:../../tmk_core_custom/common/command.c ****             mk_wheel_time_to_max = MOUSEKEY_WHEEL_TIME_TO_MAX;
 2267               		.loc 1 633 0
 2268 00fa 88E2      		ldi r24,lo8(40)
 2269 00fc 8093 0000 		sts mk_wheel_time_to_max,r24
 634:../../tmk_core_custom/common/command.c ****             print("set default values.\n");
 2270               		.loc 1 634 0
 2271 0100 80E0      		ldi r24,lo8(__c.5302)
 2272 0102 90E0      		ldi r25,hi8(__c.5302)
 2273 0104 0E94 0000 		call xputs
 2274 0108 00C0      		rjmp .L117
 2275               	.L108:
 587:../../tmk_core_custom/common/command.c ****     switch (code) {
 2276               		.loc 1 587 0
 2277 010a C331      		cpi r28,lo8(19)
 2278 010c 01F0      		breq .L110
 2279 010e C431      		cpi r28,lo8(20)
 2280 0110 01F0      		breq .L111
 2281 0112 00C0      		rjmp .L104
 2282               	.L105:
 2283 0114 CB34      		cpi r28,lo8(75)
 2284 0116 01F4      		brne .+2
 2285 0118 00C0      		rjmp .L112
 2286 011a 00F4      		brsh .L113
 2287 011c C932      		cpi r28,lo8(41)
 2288 011e 01F0      		breq .L111
 2289 0120 C833      		cpi r28,lo8(56)
 2290 0122 01F0      		breq .L107
 2291 0124 00C0      		rjmp .L104
 2292               	.L113:
 2293 0126 C135      		cpi r28,lo8(81)
 2294 0128 01F4      		brne .+2
 2295 012a 00C0      		rjmp .L114
 2296 012c C235      		cpi r28,lo8(82)
 2297 012e 01F4      		brne .+2
 2298 0130 00C0      		rjmp .L115
 2299 0132 CE34      		cpi r28,lo8(78)
 2300 0134 01F0      		breq .+2
 2301 0136 00C0      		rjmp .L104
 625:../../tmk_core_custom/common/command.c ****             mousekey_param_dec(mousekey_param, 10);
 2302               		.loc 1 625 0
 2303 0138 6AE0      		ldi r22,lo8(10)
 2304 013a 00C0      		rjmp .L157
 2305               	.L107:
 590:../../tmk_core_custom/common/command.c ****             mousekey_console_help();
 2306               		.loc 1 590 0
 2307 013c 0E94 0000 		call mousekey_console_help
 2308 0140 00C0      		rjmp .L117
 2309               	.L111:
 594:../../tmk_core_custom/common/command.c ****             mousekey_param = 0;
 2310               		.loc 1 594 0
 2311 0142 1092 0000 		sts mousekey_param,__zero_reg__
 595:../../tmk_core_custom/common/command.c ****             print("\nQuit Mousekey Console\n");
 2312               		.loc 1 595 0
 2313 0146 80E0      		ldi r24,lo8(__c.5276)
 2314 0148 90E0      		ldi r25,hi8(__c.5276)
 2315 014a 0E94 0000 		call xputs
 596:../../tmk_core_custom/common/command.c ****             print("C> ");
 2316               		.loc 1 596 0
 2317 014e 80E0      		ldi r24,lo8(__c.5278)
 2318 0150 90E0      		ldi r25,hi8(__c.5278)
 2319 0152 0E94 0000 		call xputs
 597:../../tmk_core_custom/common/command.c ****             command_state = CONSOLE;
 2320               		.loc 1 597 0
 2321 0156 81E0      		ldi r24,lo8(1)
 2322 0158 8093 0000 		sts command_state,r24
 2323 015c 00C0      		rjmp .L155
 2324               	.L110:
 2325               	.LBB205:
 2326               	.LBB206:
 457:../../tmk_core_custom/common/command.c ****     print("\n\n----- Mousekey Parameters -----\n");
 2327               		.loc 1 457 0
 2328 015e 80E0      		ldi r24,lo8(__c.5091)
 2329 0160 90E0      		ldi r25,hi8(__c.5091)
 2330 0162 0E94 0000 		call xputs
 458:../../tmk_core_custom/common/command.c ****     print("1: mk_delay(*10ms): "); pdec(mk_delay); print("\n");
 2331               		.loc 1 458 0
 2332 0166 80E0      		ldi r24,lo8(__c.5093)
 2333 0168 90E0      		ldi r25,hi8(__c.5093)
 2334 016a 0E94 0000 		call xputs
 2335 016e 8091 0000 		lds r24,mk_delay
 2336 0172 1F92      		push __zero_reg__
 2337               	.LCFI176:
 2338               		.cfi_def_cfa_offset 4
 2339 0174 8F93      		push r24
 2340               	.LCFI177:
 2341               		.cfi_def_cfa_offset 5
 2342 0176 80E0      		ldi r24,lo8(__c.5095)
 2343 0178 90E0      		ldi r25,hi8(__c.5095)
 2344 017a 9F93      		push r25
 2345               	.LCFI178:
 2346               		.cfi_def_cfa_offset 6
 2347 017c 8F93      		push r24
 2348               	.LCFI179:
 2349               		.cfi_def_cfa_offset 7
 2350 017e 0E94 0000 		call __xprintf
 2351 0182 80E0      		ldi r24,lo8(__c.5097)
 2352 0184 90E0      		ldi r25,hi8(__c.5097)
 2353 0186 0E94 0000 		call xputs
 459:../../tmk_core_custom/common/command.c ****     print("2: mk_interval(ms): "); pdec(mk_interval); print("\n");
 2354               		.loc 1 459 0
 2355 018a 80E0      		ldi r24,lo8(__c.5099)
 2356 018c 90E0      		ldi r25,hi8(__c.5099)
 2357 018e 0E94 0000 		call xputs
 2358 0192 8091 0000 		lds r24,mk_interval
 2359 0196 1F92      		push __zero_reg__
 2360               	.LCFI180:
 2361               		.cfi_def_cfa_offset 8
 2362 0198 8F93      		push r24
 2363               	.LCFI181:
 2364               		.cfi_def_cfa_offset 9
 2365 019a 80E0      		ldi r24,lo8(__c.5101)
 2366 019c 90E0      		ldi r25,hi8(__c.5101)
 2367 019e 9F93      		push r25
 2368               	.LCFI182:
 2369               		.cfi_def_cfa_offset 10
 2370 01a0 8F93      		push r24
 2371               	.LCFI183:
 2372               		.cfi_def_cfa_offset 11
 2373 01a2 0E94 0000 		call __xprintf
 2374 01a6 80E0      		ldi r24,lo8(__c.5103)
 2375 01a8 90E0      		ldi r25,hi8(__c.5103)
 2376 01aa 0E94 0000 		call xputs
 460:../../tmk_core_custom/common/command.c ****     print("3: mk_max_speed: "); pdec(mk_max_speed); print("\n");
 2377               		.loc 1 460 0
 2378 01ae 80E0      		ldi r24,lo8(__c.5105)
 2379 01b0 90E0      		ldi r25,hi8(__c.5105)
 2380 01b2 0E94 0000 		call xputs
 2381 01b6 8091 0000 		lds r24,mk_max_speed
 2382 01ba 1F92      		push __zero_reg__
 2383               	.LCFI184:
 2384               		.cfi_def_cfa_offset 12
 2385 01bc 8F93      		push r24
 2386               	.LCFI185:
 2387               		.cfi_def_cfa_offset 13
 2388 01be 80E0      		ldi r24,lo8(__c.5107)
 2389 01c0 90E0      		ldi r25,hi8(__c.5107)
 2390 01c2 9F93      		push r25
 2391               	.LCFI186:
 2392               		.cfi_def_cfa_offset 14
 2393 01c4 8F93      		push r24
 2394               	.LCFI187:
 2395               		.cfi_def_cfa_offset 15
 2396 01c6 0E94 0000 		call __xprintf
 2397 01ca 80E0      		ldi r24,lo8(__c.5109)
 2398 01cc 90E0      		ldi r25,hi8(__c.5109)
 2399 01ce 0E94 0000 		call xputs
 461:../../tmk_core_custom/common/command.c ****     print("4: mk_time_to_max: "); pdec(mk_time_to_max); print("\n");
 2400               		.loc 1 461 0
 2401 01d2 80E0      		ldi r24,lo8(__c.5111)
 2402 01d4 90E0      		ldi r25,hi8(__c.5111)
 2403 01d6 0E94 0000 		call xputs
 2404 01da 8091 0000 		lds r24,mk_time_to_max
 2405 01de 1F92      		push __zero_reg__
 2406               	.LCFI188:
 2407               		.cfi_def_cfa_offset 16
 2408 01e0 8F93      		push r24
 2409               	.LCFI189:
 2410               		.cfi_def_cfa_offset 17
 2411 01e2 80E0      		ldi r24,lo8(__c.5113)
 2412 01e4 90E0      		ldi r25,hi8(__c.5113)
 2413 01e6 9F93      		push r25
 2414               	.LCFI190:
 2415               		.cfi_def_cfa_offset 18
 2416 01e8 8F93      		push r24
 2417               	.LCFI191:
 2418               		.cfi_def_cfa_offset 19
 2419 01ea 0E94 0000 		call __xprintf
 2420 01ee 80E0      		ldi r24,lo8(__c.5115)
 2421 01f0 90E0      		ldi r25,hi8(__c.5115)
 2422 01f2 0E94 0000 		call xputs
 462:../../tmk_core_custom/common/command.c ****     print("5: mk_wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 2423               		.loc 1 462 0
 2424 01f6 80E0      		ldi r24,lo8(__c.5117)
 2425 01f8 90E0      		ldi r25,hi8(__c.5117)
 2426 01fa 0E94 0000 		call xputs
 2427 01fe 8091 0000 		lds r24,mk_wheel_max_speed
 2428 0202 1F92      		push __zero_reg__
 2429               	.LCFI192:
 2430               		.cfi_def_cfa_offset 20
 2431 0204 8F93      		push r24
 2432               	.LCFI193:
 2433               		.cfi_def_cfa_offset 21
 2434 0206 80E0      		ldi r24,lo8(__c.5119)
 2435 0208 90E0      		ldi r25,hi8(__c.5119)
 2436 020a 9F93      		push r25
 2437               	.LCFI194:
 2438               		.cfi_def_cfa_offset 22
 2439 020c 8F93      		push r24
 2440               	.LCFI195:
 2441               		.cfi_def_cfa_offset 23
 2442 020e 0E94 0000 		call __xprintf
 2443 0212 80E0      		ldi r24,lo8(__c.5121)
 2444 0214 90E0      		ldi r25,hi8(__c.5121)
 2445 0216 0E94 0000 		call xputs
 463:../../tmk_core_custom/common/command.c ****     print("6: mk_wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 2446               		.loc 1 463 0
 2447 021a 80E0      		ldi r24,lo8(__c.5123)
 2448 021c 90E0      		ldi r25,hi8(__c.5123)
 2449 021e 0E94 0000 		call xputs
 2450 0222 8091 0000 		lds r24,mk_wheel_time_to_max
 2451 0226 1F92      		push __zero_reg__
 2452               	.LCFI196:
 2453               		.cfi_def_cfa_offset 24
 2454 0228 8F93      		push r24
 2455               	.LCFI197:
 2456               		.cfi_def_cfa_offset 25
 2457 022a 80E0      		ldi r24,lo8(__c.5125)
 2458 022c 90E0      		ldi r25,hi8(__c.5125)
 2459 022e 9F93      		push r25
 2460               	.LCFI198:
 2461               		.cfi_def_cfa_offset 26
 2462 0230 8F93      		push r24
 2463               	.LCFI199:
 2464               		.cfi_def_cfa_offset 27
 2465 0232 0E94 0000 		call __xprintf
 2466 0236 80E0      		ldi r24,lo8(__c.5127)
 2467 0238 90E0      		ldi r25,hi8(__c.5127)
 2468 023a 0E94 0000 		call xputs
 2469 023e 8DB7      		in r24,__SP_L__
 2470 0240 9EB7      		in r25,__SP_H__
 2471 0242 4896      		adiw r24,24
 2472 0244 0FB6      		in __tmp_reg__,__SREG__
 2473 0246 F894      		cli
 2474 0248 9EBF      		out __SP_H__,r25
 2475 024a 0FBE      		out __SREG__,__tmp_reg__
 2476 024c 8DBF      		out __SP_L__,r24
 2477               	.LCFI200:
 2478               		.cfi_def_cfa_offset 3
 2479 024e 00C0      		rjmp .L117
 2480               	.L106:
 2481 0250 CE51      		subi r28,lo8(-(-30))
 2482 0252 EC2F      		mov r30,r28
 2483 0254 F0E0      		ldi r31,0
 2484 0256 E050      		subi r30,lo8(-(CSWTCH.46))
 2485 0258 F040      		sbci r31,hi8(-(CSWTCH.46))
 2486               	.LBE206:
 2487               	.LBE205:
 612:../../tmk_core_custom/common/command.c ****             mousekey_param = numkey2num(code);
 2488               		.loc 1 612 0
 2489 025a 8081      		ld r24,Z
 2490 025c 8093 0000 		sts mousekey_param,r24
 613:../../tmk_core_custom/common/command.c ****             print("selected parameter: "); pdec(mousekey_param); print("\n");
 2491               		.loc 1 613 0
 2492 0260 80E0      		ldi r24,lo8(__c.5291)
 2493 0262 90E0      		ldi r25,hi8(__c.5291)
 2494 0264 0E94 0000 		call xputs
 2495 0268 8091 0000 		lds r24,mousekey_param
 2496 026c 1F92      		push __zero_reg__
 2497               	.LCFI201:
 2498               		.cfi_def_cfa_offset 4
 2499 026e 8F93      		push r24
 2500               	.LCFI202:
 2501               		.cfi_def_cfa_offset 5
 2502 0270 80E0      		ldi r24,lo8(__c.5293)
 2503 0272 90E0      		ldi r25,hi8(__c.5293)
 2504 0274 9F93      		push r25
 2505               	.LCFI203:
 2506               		.cfi_def_cfa_offset 6
 2507 0276 8F93      		push r24
 2508               	.LCFI204:
 2509               		.cfi_def_cfa_offset 7
 2510 0278 0E94 0000 		call __xprintf
 2511 027c 80E0      		ldi r24,lo8(__c.5295)
 2512 027e 90E0      		ldi r25,hi8(__c.5295)
 2513 0280 0E94 0000 		call xputs
 2514 0284 0F90      		pop __tmp_reg__
 2515 0286 0F90      		pop __tmp_reg__
 2516 0288 0F90      		pop __tmp_reg__
 2517 028a 0F90      		pop __tmp_reg__
 2518               	.LCFI205:
 2519               		.cfi_def_cfa_offset 3
 2520 028c 00C0      		rjmp .L117
 2521               	.L115:
 616:../../tmk_core_custom/common/command.c ****             mousekey_param_inc(mousekey_param, 1);
 2522               		.loc 1 616 0
 2523 028e 61E0      		ldi r22,lo8(1)
 2524 0290 00C0      		rjmp .L156
 2525               	.L114:
 619:../../tmk_core_custom/common/command.c ****             mousekey_param_dec(mousekey_param, 1);
 2526               		.loc 1 619 0
 2527 0292 61E0      		ldi r22,lo8(1)
 2528 0294 00C0      		rjmp .L157
 2529               	.L112:
 622:../../tmk_core_custom/common/command.c ****             mousekey_param_inc(mousekey_param, 10);
 2530               		.loc 1 622 0
 2531 0296 6AE0      		ldi r22,lo8(10)
 2532               	.L156:
 2533 0298 8091 0000 		lds r24,mousekey_param
 2534 029c 0E94 0000 		call mousekey_param_inc
 2535 02a0 00C0      		rjmp .L117
 2536               	.L157:
 625:../../tmk_core_custom/common/command.c ****             mousekey_param_dec(mousekey_param, 10);
 2537               		.loc 1 625 0
 2538 02a2 8091 0000 		lds r24,mousekey_param
 2539 02a6 0E94 0000 		call mousekey_param_dec
 2540 02aa 00C0      		rjmp .L117
 2541               	.L104:
 637:../../tmk_core_custom/common/command.c ****             print("?");
 2542               		.loc 1 637 0
 2543 02ac 80E0      		ldi r24,lo8(__c.5305)
 2544 02ae 90E0      		ldi r25,hi8(__c.5305)
 2545 02b0 0E94 0000 		call xputs
 2546 02b4 00C0      		rjmp .L158
 2547               	.L117:
 640:../../tmk_core_custom/common/command.c ****     print("M"); pdec(mousekey_param); print("> ");
 2548               		.loc 1 640 0
 2549 02b6 80E0      		ldi r24,lo8(__c.5307)
 2550 02b8 90E0      		ldi r25,hi8(__c.5307)
 2551 02ba 0E94 0000 		call xputs
 2552 02be 8091 0000 		lds r24,mousekey_param
 2553 02c2 1F92      		push __zero_reg__
 2554               	.LCFI206:
 2555               		.cfi_def_cfa_offset 4
 2556 02c4 8F93      		push r24
 2557               	.LCFI207:
 2558               		.cfi_def_cfa_offset 5
 2559 02c6 80E0      		ldi r24,lo8(__c.5309)
 2560 02c8 90E0      		ldi r25,hi8(__c.5309)
 2561 02ca 9F93      		push r25
 2562               	.LCFI208:
 2563               		.cfi_def_cfa_offset 6
 2564 02cc 8F93      		push r24
 2565               	.LCFI209:
 2566               		.cfi_def_cfa_offset 7
 2567 02ce 0E94 0000 		call __xprintf
 2568 02d2 80E0      		ldi r24,lo8(__c.5311)
 2569 02d4 90E0      		ldi r25,hi8(__c.5311)
 2570 02d6 0E94 0000 		call xputs
 2571 02da 0F90      		pop __tmp_reg__
 2572 02dc 0F90      		pop __tmp_reg__
 2573 02de 0F90      		pop __tmp_reg__
 2574 02e0 0F90      		pop __tmp_reg__
 2575               	.LCFI210:
 2576               		.cfi_def_cfa_offset 3
 2577               	.L158:
 2578               	.LBE204:
 2579               	.LBE203:
  95:../../tmk_core_custom/common/command.c ****     return true;
 2580               		.loc 1 95 0
 2581 02e2 81E0      		ldi r24,lo8(1)
 2582 02e4 00C0      		rjmp .L155
 2583               	.L163:
  92:../../tmk_core_custom/common/command.c ****             command_state = ONESHOT;
 2584               		.loc 1 92 0
 2585 02e6 1092 0000 		sts command_state,__zero_reg__
 2586               	.L159:
  93:../../tmk_core_custom/common/command.c ****             return false;
 2587               		.loc 1 93 0
 2588 02ea 80E0      		ldi r24,0
 2589 02ec 00C0      		rjmp .L155
 2590               	.L103:
  84:../../tmk_core_custom/common/command.c ****                 return (command_console_extra(code) || command_console(code));
 2591               		.loc 1 84 0
 2592 02ee 80E0      		ldi r24,0
 2593 02f0 00C0      		rjmp .L96
 2594               	.L155:
 2595               	/* epilogue start */
  96:../../tmk_core_custom/common/command.c **** }
 2596               		.loc 1 96 0
 2597 02f2 CF91      		pop r28
 2598 02f4 0895      		ret
 2599               		.cfi_endproc
 2600               	.LFE105:
 2602               		.section	.rodata.CSWTCH.46,"a",@progbits
 2605               	CSWTCH.46:
 2606 0000 01        		.byte	1
 2607 0001 02        		.byte	2
 2608 0002 03        		.byte	3
 2609 0003 04        		.byte	4
 2610 0004 05        		.byte	5
 2611 0005 06        		.byte	6
 2612 0006 07        		.byte	7
 2613 0007 08        		.byte	8
 2614 0008 09        		.byte	9
 2615 0009 00        		.byte	0
 2616               		.section	.progmem.data.__c.5221,"a",@progbits
 2619               	__c.5221:
 2620 0000 0A00      		.string	"\n"
 2621               		.section	.progmem.data.__c.5219,"a",@progbits
 2624               	__c.5219:
 2625 0000 2575 00   		.string	"%u"
 2626               		.section	.progmem.data.__c.5217,"a",@progbits
 2629               	__c.5217:
 2630 0000 6D6B 5F77 		.string	"mk_wheel_time_to_max = "
 2630      6865 656C 
 2630      5F74 696D 
 2630      655F 746F 
 2630      5F6D 6178 
 2631               		.section	.progmem.data.__c.5214,"a",@progbits
 2634               	__c.5214:
 2635 0000 0A00      		.string	"\n"
 2636               		.section	.progmem.data.__c.5212,"a",@progbits
 2639               	__c.5212:
 2640 0000 2575 00   		.string	"%u"
 2641               		.section	.progmem.data.__c.5210,"a",@progbits
 2644               	__c.5210:
 2645 0000 6D6B 5F77 		.string	"mk_wheel_max_speed = "
 2645      6865 656C 
 2645      5F6D 6178 
 2645      5F73 7065 
 2645      6564 203D 
 2646               		.section	.progmem.data.__c.5207,"a",@progbits
 2649               	__c.5207:
 2650 0000 0A00      		.string	"\n"
 2651               		.section	.progmem.data.__c.5205,"a",@progbits
 2654               	__c.5205:
 2655 0000 2575 00   		.string	"%u"
 2656               		.section	.progmem.data.__c.5203,"a",@progbits
 2659               	__c.5203:
 2660 0000 6D6B 5F74 		.string	"mk_time_to_max = "
 2660      696D 655F 
 2660      746F 5F6D 
 2660      6178 203D 
 2660      2000 
 2661               		.section	.progmem.data.__c.5200,"a",@progbits
 2664               	__c.5200:
 2665 0000 0A00      		.string	"\n"
 2666               		.section	.progmem.data.__c.5198,"a",@progbits
 2669               	__c.5198:
 2670 0000 2575 00   		.string	"%u"
 2671               		.section	.progmem.data.__c.5196,"a",@progbits
 2674               	__c.5196:
 2675 0000 6D6B 5F6D 		.string	"mk_max_speed = "
 2675      6178 5F73 
 2675      7065 6564 
 2675      203D 2000 
 2676               		.section	.progmem.data.__c.5193,"a",@progbits
 2679               	__c.5193:
 2680 0000 0A00      		.string	"\n"
 2681               		.section	.progmem.data.__c.5191,"a",@progbits
 2684               	__c.5191:
 2685 0000 2575 00   		.string	"%u"
 2686               		.section	.progmem.data.__c.5189,"a",@progbits
 2689               	__c.5189:
 2690 0000 6D6B 5F69 		.string	"mk_interval = "
 2690      6E74 6572 
 2690      7661 6C20 
 2690      3D20 00
 2691               		.section	.progmem.data.__c.5185,"a",@progbits
 2694               	__c.5185:
 2695 0000 0A00      		.string	"\n"
 2696               		.section	.progmem.data.__c.5183,"a",@progbits
 2699               	__c.5183:
 2700 0000 2575 00   		.string	"%u"
 2701               		.section	.progmem.data.__c.5181,"a",@progbits
 2704               	__c.5181:
 2705 0000 6D6B 5F64 		.string	"mk_delay = "
 2705      656C 6179 
 2705      203D 2000 
 2706               		.section	.progmem.data.__c.5174,"a",@progbits
 2709               	__c.5174:
 2710 0000 0A00      		.string	"\n"
 2711               		.section	.progmem.data.__c.5172,"a",@progbits
 2714               	__c.5172:
 2715 0000 2575 00   		.string	"%u"
 2716               		.section	.progmem.data.__c.5170,"a",@progbits
 2719               	__c.5170:
 2720 0000 6D6B 5F77 		.string	"mk_wheel_time_to_max = "
 2720      6865 656C 
 2720      5F74 696D 
 2720      655F 746F 
 2720      5F6D 6178 
 2721               		.section	.progmem.data.__c.5167,"a",@progbits
 2724               	__c.5167:
 2725 0000 0A00      		.string	"\n"
 2726               		.section	.progmem.data.__c.5165,"a",@progbits
 2729               	__c.5165:
 2730 0000 2575 00   		.string	"%u"
 2731               		.section	.progmem.data.__c.5163,"a",@progbits
 2734               	__c.5163:
 2735 0000 6D6B 5F77 		.string	"mk_wheel_max_speed = "
 2735      6865 656C 
 2735      5F6D 6178 
 2735      5F73 7065 
 2735      6564 203D 
 2736               		.section	.progmem.data.__c.5160,"a",@progbits
 2739               	__c.5160:
 2740 0000 0A00      		.string	"\n"
 2741               		.section	.progmem.data.__c.5158,"a",@progbits
 2744               	__c.5158:
 2745 0000 2575 00   		.string	"%u"
 2746               		.section	.progmem.data.__c.5156,"a",@progbits
 2749               	__c.5156:
 2750 0000 6D6B 5F74 		.string	"mk_time_to_max = "
 2750      696D 655F 
 2750      746F 5F6D 
 2750      6178 203D 
 2750      2000 
 2751               		.section	.progmem.data.__c.5153,"a",@progbits
 2754               	__c.5153:
 2755 0000 0A00      		.string	"\n"
 2756               		.section	.progmem.data.__c.5151,"a",@progbits
 2759               	__c.5151:
 2760 0000 2575 00   		.string	"%u"
 2761               		.section	.progmem.data.__c.5149,"a",@progbits
 2764               	__c.5149:
 2765 0000 6D6B 5F6D 		.string	"mk_max_speed = "
 2765      6178 5F73 
 2765      7065 6564 
 2765      203D 2000 
 2766               		.section	.progmem.data.__c.5146,"a",@progbits
 2769               	__c.5146:
 2770 0000 0A00      		.string	"\n"
 2771               		.section	.progmem.data.__c.5144,"a",@progbits
 2774               	__c.5144:
 2775 0000 2575 00   		.string	"%u"
 2776               		.section	.progmem.data.__c.5142,"a",@progbits
 2779               	__c.5142:
 2780 0000 6D6B 5F69 		.string	"mk_interval = "
 2780      6E74 6572 
 2780      7661 6C20 
 2780      3D20 00
 2781               		.section	.progmem.data.__c.5138,"a",@progbits
 2784               	__c.5138:
 2785 0000 0A00      		.string	"\n"
 2786               		.section	.progmem.data.__c.5136,"a",@progbits
 2789               	__c.5136:
 2790 0000 2575 00   		.string	"%u"
 2791               		.section	.progmem.data.__c.5134,"a",@progbits
 2794               	__c.5134:
 2795 0000 6D6B 5F64 		.string	"mk_delay = "
 2795      656C 6179 
 2795      203D 2000 
 2796               		.section	.progmem.data.__c.5127,"a",@progbits
 2799               	__c.5127:
 2800 0000 0A00      		.string	"\n"
 2801               		.section	.progmem.data.__c.5125,"a",@progbits
 2804               	__c.5125:
 2805 0000 2575 00   		.string	"%u"
 2806               		.section	.progmem.data.__c.5123,"a",@progbits
 2809               	__c.5123:
 2810 0000 363A 206D 		.string	"6: mk_wheel_time_to_max: "
 2810      6B5F 7768 
 2810      6565 6C5F 
 2810      7469 6D65 
 2810      5F74 6F5F 
 2811               		.section	.progmem.data.__c.5121,"a",@progbits
 2814               	__c.5121:
 2815 0000 0A00      		.string	"\n"
 2816               		.section	.progmem.data.__c.5119,"a",@progbits
 2819               	__c.5119:
 2820 0000 2575 00   		.string	"%u"
 2821               		.section	.progmem.data.__c.5117,"a",@progbits
 2824               	__c.5117:
 2825 0000 353A 206D 		.string	"5: mk_wheel_max_speed: "
 2825      6B5F 7768 
 2825      6565 6C5F 
 2825      6D61 785F 
 2825      7370 6565 
 2826               		.section	.progmem.data.__c.5115,"a",@progbits
 2829               	__c.5115:
 2830 0000 0A00      		.string	"\n"
 2831               		.section	.progmem.data.__c.5113,"a",@progbits
 2834               	__c.5113:
 2835 0000 2575 00   		.string	"%u"
 2836               		.section	.progmem.data.__c.5111,"a",@progbits
 2839               	__c.5111:
 2840 0000 343A 206D 		.string	"4: mk_time_to_max: "
 2840      6B5F 7469 
 2840      6D65 5F74 
 2840      6F5F 6D61 
 2840      783A 2000 
 2841               		.section	.progmem.data.__c.5109,"a",@progbits
 2844               	__c.5109:
 2845 0000 0A00      		.string	"\n"
 2846               		.section	.progmem.data.__c.5107,"a",@progbits
 2849               	__c.5107:
 2850 0000 2575 00   		.string	"%u"
 2851               		.section	.progmem.data.__c.5105,"a",@progbits
 2854               	__c.5105:
 2855 0000 333A 206D 		.string	"3: mk_max_speed: "
 2855      6B5F 6D61 
 2855      785F 7370 
 2855      6565 643A 
 2855      2000 
 2856               		.section	.progmem.data.__c.5103,"a",@progbits
 2859               	__c.5103:
 2860 0000 0A00      		.string	"\n"
 2861               		.section	.progmem.data.__c.5101,"a",@progbits
 2864               	__c.5101:
 2865 0000 2575 00   		.string	"%u"
 2866               		.section	.progmem.data.__c.5099,"a",@progbits
 2869               	__c.5099:
 2870 0000 323A 206D 		.string	"2: mk_interval(ms): "
 2870      6B5F 696E 
 2870      7465 7276 
 2870      616C 286D 
 2870      7329 3A20 
 2871               		.section	.progmem.data.__c.5097,"a",@progbits
 2874               	__c.5097:
 2875 0000 0A00      		.string	"\n"
 2876               		.section	.progmem.data.__c.5095,"a",@progbits
 2879               	__c.5095:
 2880 0000 2575 00   		.string	"%u"
 2881               		.section	.progmem.data.__c.5093,"a",@progbits
 2884               	__c.5093:
 2885 0000 313A 206D 		.string	"1: mk_delay(*10ms): "
 2885      6B5F 6465 
 2885      6C61 7928 
 2885      2A31 306D 
 2885      7329 3A20 
 2886               		.section	.progmem.data.__c.5091,"a",@progbits
 2889               	__c.5091:
 2890 0000 0A0A 2D2D 		.string	"\n\n----- Mousekey Parameters -----\n"
 2890      2D2D 2D20 
 2890      4D6F 7573 
 2890      656B 6579 
 2890      2050 6172 
 2891               		.section	.progmem.data.__c.5311,"a",@progbits
 2894               	__c.5311:
 2895 0000 3E20 00   		.string	"> "
 2896               		.section	.progmem.data.__c.5309,"a",@progbits
 2899               	__c.5309:
 2900 0000 2575 00   		.string	"%u"
 2901               		.section	.progmem.data.__c.5307,"a",@progbits
 2904               	__c.5307:
 2905 0000 4D00      		.string	"M"
 2906               		.section	.progmem.data.__c.5305,"a",@progbits
 2909               	__c.5305:
 2910 0000 3F00      		.string	"?"
 2911               		.section	.progmem.data.__c.5302,"a",@progbits
 2914               	__c.5302:
 2915 0000 7365 7420 		.string	"set default values.\n"
 2915      6465 6661 
 2915      756C 7420 
 2915      7661 6C75 
 2915      6573 2E0A 
 2916               		.section	.progmem.data.__c.5295,"a",@progbits
 2919               	__c.5295:
 2920 0000 0A00      		.string	"\n"
 2921               		.section	.progmem.data.__c.5293,"a",@progbits
 2924               	__c.5293:
 2925 0000 2575 00   		.string	"%u"
 2926               		.section	.progmem.data.__c.5291,"a",@progbits
 2929               	__c.5291:
 2930 0000 7365 6C65 		.string	"selected parameter: "
 2930      6374 6564 
 2930      2070 6172 
 2930      616D 6574 
 2930      6572 3A20 
 2931               		.section	.progmem.data.__c.5278,"a",@progbits
 2934               	__c.5278:
 2935 0000 433E 2000 		.string	"C> "
 2936               		.section	.progmem.data.__c.5276,"a",@progbits
 2939               	__c.5276:
 2940 0000 0A51 7569 		.string	"\nQuit Mousekey Console\n"
 2940      7420 4D6F 
 2940      7573 656B 
 2940      6579 2043 
 2940      6F6E 736F 
 2941               		.section	.progmem.data.__c.5266,"a",@progbits
 2944               	__c.5266:
 2945 0000 5365 6520 		.string	"See http://en.wikipedia.org/wiki/Mouse_keys\n"
 2945      6874 7470 
 2945      3A2F 2F65 
 2945      6E2E 7769 
 2945      6B69 7065 
 2946               		.section	.progmem.data.__c.5264,"a",@progbits
 2949               	__c.5264:
 2950 0000 0A00      		.string	"\n"
 2951               		.section	.progmem.data.__c.5262,"a",@progbits
 2954               	__c.5262:
 2955 0000 2575 00   		.string	"%u"
 2956               		.section	.progmem.data.__c.5260,"a",@progbits
 2959               	__c.5260:
 2960 0000 2C20 7768 		.string	", wheel="
 2960      6565 6C3D 
 2960      00
 2961               		.section	.progmem.data.__c.5258,"a",@progbits
 2964               	__c.5258:
 2965 0000 2575 00   		.string	"%u"
 2966               		.section	.progmem.data.__c.5256,"a",@progbits
 2969               	__c.5256:
 2970 0000 7768 6572 		.string	"where delta: cursor="
 2970      6520 6465 
 2970      6C74 613A 
 2970      2063 7572 
 2970      736F 723D 
 2971               		.section	.progmem.data.__c.5254,"a",@progbits
 2974               	__c.5254:
 2975 0000 0A73 7065 		.string	"\nspeed = delta * max_speed * (repeat / time_to_max)\n"
 2975      6564 203D 
 2975      2064 656C 
 2975      7461 202A 
 2975      206D 6178 
 2976               		.section	.progmem.data.__c.5252,"a",@progbits
 2979               	__c.5252:
 2980 0000 7067 646F 		.string	"pgdown:\tdecrease parameters(-10)\n"
 2980      776E 3A09 
 2980      6465 6372 
 2980      6561 7365 
 2980      2070 6172 
 2981               		.section	.progmem.data.__c.5250,"a",@progbits
 2984               	__c.5250:
 2985 0000 7067 7570 		.string	"pgup:\tincrease parameters(+10)\n"
 2985      3A09 696E 
 2985      6372 6561 
 2985      7365 2070 
 2985      6172 616D 
 2986               		.section	.progmem.data.__c.5248,"a",@progbits
 2989               	__c.5248:
 2990 0000 646F 776E 		.string	"down:\tdecrease parameters(-1)\n"
 2990      3A09 6465 
 2990      6372 6561 
 2990      7365 2070 
 2990      6172 616D 
 2991               		.section	.progmem.data.__c.5246,"a",@progbits
 2994               	__c.5246:
 2995 0000 7570 3A09 		.string	"up:\tincrease parameters(+1)\n"
 2995      696E 6372 
 2995      6561 7365 
 2995      2070 6172 
 2995      616D 6574 
 2996               		.section	.progmem.data.__c.5244,"a",@progbits
 2999               	__c.5244:
 3000 0000 643A 0973 		.string	"d:\tset default values\n"
 3000      6574 2064 
 3000      6566 6175 
 3000      6C74 2076 
 3000      616C 7565 
 3001               		.section	.progmem.data.__c.5242,"a",@progbits
 3004               	__c.5242:
 3005 0000 703A 0970 		.string	"p:\tprint parameters\n"
 3005      7269 6E74 
 3005      2070 6172 
 3005      616D 6574 
 3005      6572 730A 
 3006               		.section	.progmem.data.__c.5240,"a",@progbits
 3009               	__c.5240:
 3010 0000 363A 0973 		.string	"6:\tselect mk_wheel_time_to_max\n"
 3010      656C 6563 
 3010      7420 6D6B 
 3010      5F77 6865 
 3010      656C 5F74 
 3011               		.section	.progmem.data.__c.5238,"a",@progbits
 3014               	__c.5238:
 3015 0000 353A 0973 		.string	"5:\tselect mk_wheel_max_speed\n"
 3015      656C 6563 
 3015      7420 6D6B 
 3015      5F77 6865 
 3015      656C 5F6D 
 3016               		.section	.progmem.data.__c.5236,"a",@progbits
 3019               	__c.5236:
 3020 0000 343A 0973 		.string	"4:\tselect mk_time_to_max\n"
 3020      656C 6563 
 3020      7420 6D6B 
 3020      5F74 696D 
 3020      655F 746F 
 3021               		.section	.progmem.data.__c.5234,"a",@progbits
 3024               	__c.5234:
 3025 0000 333A 0973 		.string	"3:\tselect mk_max_speed\n"
 3025      656C 6563 
 3025      7420 6D6B 
 3025      5F6D 6178 
 3025      5F73 7065 
 3026               		.section	.progmem.data.__c.5232,"a",@progbits
 3029               	__c.5232:
 3030 0000 323A 0973 		.string	"2:\tselect mk_interval(ms)\n"
 3030      656C 6563 
 3030      7420 6D6B 
 3030      5F69 6E74 
 3030      6572 7661 
 3031               		.section	.progmem.data.__c.5230,"a",@progbits
 3034               	__c.5230:
 3035 0000 313A 0973 		.string	"1:\tselect mk_delay(*10ms)\n"
 3035      656C 6563 
 3035      7420 6D6B 
 3035      5F64 656C 
 3035      6179 282A 
 3036               		.section	.progmem.data.__c.5228,"a",@progbits
 3039               	__c.5228:
 3040 0000 4553 432F 		.string	"ESC/q:\tquit\n"
 3040      713A 0971 
 3040      7569 740A 
 3040      00
 3041               		.section	.progmem.data.__c.5226,"a",@progbits
 3044               	__c.5226:
 3045 0000 0A0A 2D2D 		.string	"\n\n----- Mousekey Parameters Help -----\n"
 3045      2D2D 2D20 
 3045      4D6F 7573 
 3045      656B 6579 
 3045      2050 6172 
 3046               		.section	.progmem.data.__c.5083,"a",@progbits
 3049               	__c.5083:
 3050 0000 3F00      		.string	"?"
 3051               		.section	.progmem.data.__c.5080,"a",@progbits
 3054               	__c.5080:
 3055 0000 4D30 3E00 		.string	"M0>"
 3056               		.section	.progmem.data.__c.5078,"a",@progbits
 3059               	__c.5078:
 3060 0000 0A45 6E74 		.string	"\nEnter Mousekey Console\n"
 3060      6572 204D 
 3060      6F75 7365 
 3060      6B65 7920 
 3060      436F 6E73 
 3061               		.section	.progmem.data.__c.5075,"a",@progbits
 3064               	__c.5075:
 3065 0000 0A51 7569 		.string	"\nQuit Console Mode\n"
 3065      7420 436F 
 3065      6E73 6F6C 
 3065      6520 4D6F 
 3065      6465 0A00 
 3066               		.section	.progmem.data.__c.5085,"a",@progbits
 3069               	__c.5085:
 3070 0000 433E 2000 		.string	"C> "
 3071               		.section	.progmem.data.__c.5337,"a",@progbits
 3074               	__c.5337:
 3075 0000 0A00      		.string	"\n"
 3076               		.section	.progmem.data.__c.5335,"a",@progbits
 3079               	__c.5335:
 3080 0000 2575 00   		.string	"%u"
 3081               		.section	.progmem.data.__c.5333,"a",@progbits
 3084               	__c.5333:
 3085 0000 2074 6F20 		.string	" to "
 3085      00
 3086               		.section	.progmem.data.__c.5331,"a",@progbits
 3089               	__c.5331:
 3090 0000 2575 00   		.string	"%u"
 3091               		.section	.progmem.data.__c.5329,"a",@progbits
 3094               	__c.5329:
 3095 0000 7377 6974 		.string	"switch_default_layer: "
 3095      6368 5F64 
 3095      6566 6175 
 3095      6C74 5F6C 
 3095      6179 6572 
 3096               		.section	.progmem.data.__c.5065,"a",@progbits
 3099               	__c.5065:
 3100 0000 6D3A 096D 		.string	"m:\tmousekey\n"
 3100      6F75 7365 
 3100      6B65 790A 
 3100      00
 3101               		.section	.progmem.data.__c.5063,"a",@progbits
 3104               	__c.5063:
 3105 0000 4553 432F 		.string	"ESC/q:\tquit\n"
 3105      713A 0971 
 3105      7569 740A 
 3105      00
 3106               		.section	.progmem.data.__c.5061,"a",@progbits
 3109               	__c.5061:
 3110 0000 0A0A 2D2D 		.string	"\n\n----- Console Help -----\n"
 3110      2D2D 2D20 
 3110      436F 6E73 
 3110      6F6C 6520 
 3110      4865 6C70 
 3111               		.section	.progmem.data.__c.4858,"a",@progbits
 3114               	__c.4858:
 3115 0000 5061 7573 		.string	"Paus:\tjump to bootloader\n"
 3115      3A09 6A75 
 3115      6D70 2074 
 3115      6F20 626F 
 3115      6F74 6C6F 
 3116               		.section	.progmem.data.__c.4856,"a",@progbits
 3119               	__c.4856:
 3120 0000 4361 7073 		.string	"Caps:\tLock Keyboard(Child Proof)\n"
 3120      3A09 4C6F 
 3120      636B 204B 
 3120      6579 626F 
 3120      6172 6428 
 3121               		.section	.progmem.data.__c.4854,"a",@progbits
 3124               	__c.4854:
 3125 0000 5053 6372 		.string	"PScr:\tpower down/remote wake-up\n"
 3125      3A09 706F 
 3125      7765 7220 
 3125      646F 776E 
 3125      2F72 656D 
 3126               		.section	.progmem.data.__c.4852,"a",@progbits
 3129               	__c.4852:
 3130 0000 342F 4634 		.string	"4/F4:\tswitch to Layer4 \n"
 3130      3A09 7377 
 3130      6974 6368 
 3130      2074 6F20 
 3130      4C61 7965 
 3131               		.section	.progmem.data.__c.4850,"a",@progbits
 3134               	__c.4850:
 3135 0000 332F 4633 		.string	"3/F3:\tswitch to Layer3 \n"
 3135      3A09 7377 
 3135      6974 6368 
 3135      2074 6F20 
 3135      4C61 7965 
 3136               		.section	.progmem.data.__c.4848,"a",@progbits
 3139               	__c.4848:
 3140 0000 322F 4632 		.string	"2/F2:\tswitch to Layer2 \n"
 3140      3A09 7377 
 3140      6974 6368 
 3140      2074 6F20 
 3140      4C61 7965 
 3141               		.section	.progmem.data.__c.4846,"a",@progbits
 3144               	__c.4846:
 3145 0000 312F 4631 		.string	"1/F1:\tswitch to Layer1 \n"
 3145      3A09 7377 
 3145      6974 6368 
 3145      2074 6F20 
 3145      4C61 7965 
 3146               		.section	.progmem.data.__c.4844,"a",@progbits
 3149               	__c.4844:
 3150 0000 302F 4631 		.string	"0/F10:\tswitch to Layer0 \n"
 3150      303A 0973 
 3150      7769 7463 
 3150      6820 746F 
 3150      204C 6179 
 3151               		.section	.progmem.data.__c.4842,"a",@progbits
 3154               	__c.4842:
 3155 0000 6E3A 0974 		.string	"n:\ttoggle NKRO\n"
 3155      6F67 676C 
 3155      6520 4E4B 
 3155      524F 0A00 
 3156               		.section	.progmem.data.__c.4840,"a",@progbits
 3159               	__c.4840:
 3160 0000 653A 0970 		.string	"e:\tprint eeprom config\n"
 3160      7269 6E74 
 3160      2065 6570 
 3160      726F 6D20 
 3160      636F 6E66 
 3161               		.section	.progmem.data.__c.4838,"a",@progbits
 3164               	__c.4838:
 3165 0000 733A 0970 		.string	"s:\tprint status\n"
 3165      7269 6E74 
 3165      2073 7461 
 3165      7475 730A 
 3165      00
 3166               		.section	.progmem.data.__c.4836,"a",@progbits
 3169               	__c.4836:
 3170 0000 743A 0970 		.string	"t:\tprint timer count\n"
 3170      7269 6E74 
 3170      2074 696D 
 3170      6572 2063 
 3170      6F75 6E74 
 3171               		.section	.progmem.data.__c.4834,"a",@progbits
 3174               	__c.4834:
 3175 0000 763A 0970 		.string	"v:\tprint device version & info\n"
 3175      7269 6E74 
 3175      2064 6576 
 3175      6963 6520 
 3175      7665 7273 
 3176               		.section	.progmem.data.__c.4832,"a",@progbits
 3179               	__c.4832:
 3180 0000 6D3A 0974 		.string	"m:\ttoggle mouse debug\n"
 3180      6F67 676C 
 3180      6520 6D6F 
 3180      7573 6520 
 3180      6465 6275 
 3181               		.section	.progmem.data.__c.4830,"a",@progbits
 3184               	__c.4830:
 3185 0000 6B3A 0974 		.string	"k:\ttoggle keyboard debug\n"
 3185      6F67 676C 
 3185      6520 6B65 
 3185      7962 6F61 
 3185      7264 2064 
 3186               		.section	.progmem.data.__c.4828,"a",@progbits
 3189               	__c.4828:
 3190 0000 783A 0974 		.string	"x:\ttoggle matrix debug\n"
 3190      6F67 676C 
 3190      6520 6D61 
 3190      7472 6978 
 3190      2064 6562 
 3191               		.section	.progmem.data.__c.4826,"a",@progbits
 3194               	__c.4826:
 3195 0000 643A 0974 		.string	"d:\ttoggle debug enable\n"
 3195      6F67 676C 
 3195      6520 6465 
 3195      6275 6720 
 3195      656E 6162 
 3196               		.section	.progmem.data.__c.4824,"a",@progbits
 3199               	__c.4824:
 3200 0000 633A 0965 		.string	"c:\tenter console mode\n"
 3200      6E74 6572 
 3200      2063 6F6E 
 3200      736F 6C65 
 3200      206D 6F64 
 3201               		.section	.progmem.data.__c.4822,"a",@progbits
 3204               	__c.4822:
 3205 0000 0A0A 2D2D 		.string	"\n\n----- Command Help -----\n"
 3205      2D2D 2D20 
 3205      436F 6D6D 
 3205      616E 6420 
 3205      4865 6C70 
 3206               		.section	.progmem.data.__c.4972,"a",@progbits
 3209               	__c.4972:
 3210 0000 0A00      		.string	"\n"
 3211               		.section	.progmem.data.__c.4970,"a",@progbits
 3214               	__c.4970:
 3215 0000 2575 00   		.string	"%u"
 3216               		.section	.progmem.data.__c.4968,"a",@progbits
 3219               	__c.4968:
 3220 0000 2E6C 6576 		.string	".level: "
 3220      656C 3A20 
 3220      00
 3221               		.section	.progmem.data.__c.4966,"a",@progbits
 3224               	__c.4966:
 3225 0000 0A00      		.string	"\n"
 3226               		.section	.progmem.data.__c.4964,"a",@progbits
 3229               	__c.4964:
 3230 0000 2575 00   		.string	"%u"
 3231               		.section	.progmem.data.__c.4962,"a",@progbits
 3234               	__c.4962:
 3235 0000 2E65 6E61 		.string	".enable: "
 3235      626C 653A 
 3235      2000 
 3236               		.section	.progmem.data.__c.4960,"a",@progbits
 3239               	__c.4960:
 3240 0000 0A00      		.string	"\n"
 3241               		.section	.progmem.data.__c.4958,"a",@progbits
 3244               	__c.4958:
 3245 0000 2530 3258 		.string	"%02X"
 3245      00
 3246               		.section	.progmem.data.__c.4956,"a",@progbits
 3249               	__c.4956:
 3250 0000 6261 636B 		.string	"backlight_config.raw: "
 3250      6C69 6768 
 3250      745F 636F 
 3250      6E66 6967 
 3250      2E72 6177 
 3251               		.section	.progmem.data.__c.4953,"a",@progbits
 3254               	__c.4953:
 3255 0000 0A00      		.string	"\n"
 3256               		.section	.progmem.data.__c.4951,"a",@progbits
 3259               	__c.4951:
 3260 0000 2575 00   		.string	"%u"
 3261               		.section	.progmem.data.__c.4949,"a",@progbits
 3264               	__c.4949:
 3265 0000 2E6E 6B72 		.string	".nkro: "
 3265      6F3A 2000 
 3266               		.section	.progmem.data.__c.4947,"a",@progbits
 3269               	__c.4947:
 3270 0000 0A00      		.string	"\n"
 3271               		.section	.progmem.data.__c.4945,"a",@progbits
 3274               	__c.4945:
 3275 0000 2575 00   		.string	"%u"
 3276               		.section	.progmem.data.__c.4943,"a",@progbits
 3279               	__c.4943:
 3280 0000 2E73 7761 		.string	".swap_backslash_backspace: "
 3280      705F 6261 
 3280      636B 736C 
 3280      6173 685F 
 3280      6261 636B 
 3281               		.section	.progmem.data.__c.4941,"a",@progbits
 3284               	__c.4941:
 3285 0000 0A00      		.string	"\n"
 3286               		.section	.progmem.data.__c.4939,"a",@progbits
 3289               	__c.4939:
 3290 0000 2575 00   		.string	"%u"
 3291               		.section	.progmem.data.__c.4937,"a",@progbits
 3294               	__c.4937:
 3295 0000 2E73 7761 		.string	".swap_grave_esc: "
 3295      705F 6772 
 3295      6176 655F 
 3295      6573 633A 
 3295      2000 
 3296               		.section	.progmem.data.__c.4935,"a",@progbits
 3299               	__c.4935:
 3300 0000 0A00      		.string	"\n"
 3301               		.section	.progmem.data.__c.4933,"a",@progbits
 3304               	__c.4933:
 3305 0000 2575 00   		.string	"%u"
 3306               		.section	.progmem.data.__c.4931,"a",@progbits
 3309               	__c.4931:
 3310 0000 2E6E 6F5F 		.string	".no_gui: "
 3310      6775 693A 
 3310      2000 
 3311               		.section	.progmem.data.__c.4929,"a",@progbits
 3314               	__c.4929:
 3315 0000 0A00      		.string	"\n"
 3316               		.section	.progmem.data.__c.4927,"a",@progbits
 3319               	__c.4927:
 3320 0000 2575 00   		.string	"%u"
 3321               		.section	.progmem.data.__c.4925,"a",@progbits
 3324               	__c.4925:
 3325 0000 2E73 7761 		.string	".swap_ralt_rgui: "
 3325      705F 7261 
 3325      6C74 5F72 
 3325      6775 693A 
 3325      2000 
 3326               		.section	.progmem.data.__c.4923,"a",@progbits
 3329               	__c.4923:
 3330 0000 0A00      		.string	"\n"
 3331               		.section	.progmem.data.__c.4921,"a",@progbits
 3334               	__c.4921:
 3335 0000 2575 00   		.string	"%u"
 3336               		.section	.progmem.data.__c.4919,"a",@progbits
 3339               	__c.4919:
 3340 0000 2E73 7761 		.string	".swap_lalt_lgui: "
 3340      705F 6C61 
 3340      6C74 5F6C 
 3340      6775 693A 
 3340      2000 
 3341               		.section	.progmem.data.__c.4917,"a",@progbits
 3344               	__c.4917:
 3345 0000 0A00      		.string	"\n"
 3346               		.section	.progmem.data.__c.4915,"a",@progbits
 3349               	__c.4915:
 3350 0000 2575 00   		.string	"%u"
 3351               		.section	.progmem.data.__c.4913,"a",@progbits
 3354               	__c.4913:
 3355 0000 2E63 6170 		.string	".capslock_to_control: "
 3355      736C 6F63 
 3355      6B5F 746F 
 3355      5F63 6F6E 
 3355      7472 6F6C 
 3356               		.section	.progmem.data.__c.4911,"a",@progbits
 3359               	__c.4911:
 3360 0000 0A00      		.string	"\n"
 3361               		.section	.progmem.data.__c.4909,"a",@progbits
 3364               	__c.4909:
 3365 0000 2575 00   		.string	"%u"
 3366               		.section	.progmem.data.__c.4907,"a",@progbits
 3369               	__c.4907:
 3370 0000 2E73 7761 		.string	".swap_control_capslock: "
 3370      705F 636F 
 3370      6E74 726F 
 3370      6C5F 6361 
 3370      7073 6C6F 
 3371               		.section	.progmem.data.__c.4905,"a",@progbits
 3374               	__c.4905:
 3375 0000 0A00      		.string	"\n"
 3376               		.section	.progmem.data.__c.4903,"a",@progbits
 3379               	__c.4903:
 3380 0000 2530 3258 		.string	"%02X"
 3380      00
 3381               		.section	.progmem.data.__c.4901,"a",@progbits
 3384               	__c.4901:
 3385 0000 6B65 796D 		.string	"keymap_config.raw: "
 3385      6170 5F63 
 3385      6F6E 6669 
 3385      672E 7261 
 3385      773A 2000 
 3386               		.section	.progmem.data.__c.4898,"a",@progbits
 3389               	__c.4898:
 3390 0000 0A00      		.string	"\n"
 3391               		.section	.progmem.data.__c.4896,"a",@progbits
 3394               	__c.4896:
 3395 0000 2575 00   		.string	"%u"
 3396               		.section	.progmem.data.__c.4894,"a",@progbits
 3399               	__c.4894:
 3400 0000 2E6D 6F75 		.string	".mouse: "
 3400      7365 3A20 
 3400      00
 3401               		.section	.progmem.data.__c.4892,"a",@progbits
 3404               	__c.4892:
 3405 0000 0A00      		.string	"\n"
 3406               		.section	.progmem.data.__c.4890,"a",@progbits
 3409               	__c.4890:
 3410 0000 2575 00   		.string	"%u"
 3411               		.section	.progmem.data.__c.4888,"a",@progbits
 3414               	__c.4888:
 3415 0000 2E6B 6579 		.string	".keyboard: "
 3415      626F 6172 
 3415      643A 2000 
 3416               		.section	.progmem.data.__c.4886,"a",@progbits
 3419               	__c.4886:
 3420 0000 0A00      		.string	"\n"
 3421               		.section	.progmem.data.__c.4884,"a",@progbits
 3424               	__c.4884:
 3425 0000 2575 00   		.string	"%u"
 3426               		.section	.progmem.data.__c.4882,"a",@progbits
 3429               	__c.4882:
 3430 0000 2E6D 6174 		.string	".matrix: "
 3430      7269 783A 
 3430      2000 
 3431               		.section	.progmem.data.__c.4880,"a",@progbits
 3434               	__c.4880:
 3435 0000 0A00      		.string	"\n"
 3436               		.section	.progmem.data.__c.4878,"a",@progbits
 3439               	__c.4878:
 3440 0000 2575 00   		.string	"%u"
 3441               		.section	.progmem.data.__c.4876,"a",@progbits
 3444               	__c.4876:
 3445 0000 2E65 6E61 		.string	".enable: "
 3445      626C 653A 
 3445      2000 
 3446               		.section	.progmem.data.__c.4874,"a",@progbits
 3449               	__c.4874:
 3450 0000 0A00      		.string	"\n"
 3451               		.section	.progmem.data.__c.4872,"a",@progbits
 3454               	__c.4872:
 3455 0000 2530 3258 		.string	"%02X"
 3455      00
 3456               		.section	.progmem.data.__c.4870,"a",@progbits
 3459               	__c.4870:
 3460 0000 6465 6275 		.string	"debug_config.raw: "
 3460      675F 636F 
 3460      6E66 6967 
 3460      2E72 6177 
 3460      3A20 00
 3461               		.section	.progmem.data.__c.4867,"a",@progbits
 3464               	__c.4867:
 3465 0000 0A00      		.string	"\n"
 3466               		.section	.progmem.data.__c.4865,"a",@progbits
 3469               	__c.4865:
 3470 0000 2575 00   		.string	"%u"
 3471               		.section	.progmem.data.__c.4863,"a",@progbits
 3474               	__c.4863:
 3475 0000 6465 6661 		.string	"default_layer: "
 3475      756C 745F 
 3475      6C61 7965 
 3475      723A 2000 
 3476               		.section	.progmem.data.__c.5056,"a",@progbits
 3479               	__c.5056:
 3480 0000 3F00      		.string	"?"
 3481               		.section	.progmem.data.__c.5047,"a",@progbits
 3484               	__c.5047:
 3485 0000 4E4B 524F 		.string	"NKRO: disabled\n"
 3485      3A20 6469 
 3485      7361 626C 
 3485      6564 0A00 
 3486               		.section	.progmem.data.__c.5045,"a",@progbits
 3489               	__c.5045:
 3490 0000 4E4B 524F 		.string	"NKRO: enabled\n"
 3490      3A20 656E 
 3490      6162 6C65 
 3490      640A 00
 3491               		.section	.progmem.data.__c.5042,"a",@progbits
 3494               	__c.5042:
 3495 0000 6B65 7962 		.string	"keyboard_idle: %X\n"
 3495      6F61 7264 
 3495      5F69 646C 
 3495      653A 2025 
 3495      580A 00
 3496               		.section	.progmem.data.__c.5040,"a",@progbits
 3499               	__c.5040:
 3500 0000 6B65 7962 		.string	"keyboard_protocol: %X\n"
 3500      6F61 7264 
 3500      5F70 726F 
 3500      746F 636F 
 3500      6C3A 2025 
 3501               		.section	.progmem.data.__c.5038,"a",@progbits
 3504               	__c.5038:
 3505 0000 686F 7374 		.string	"host_keyboard_leds(): %X\n"
 3505      5F6B 6579 
 3505      626F 6172 
 3505      645F 6C65 
 3505      6473 2829 
 3506               		.section	.progmem.data.__c.5036,"a",@progbits
 3509               	__c.5036:
 3510 0000 0A0A 2D2D 		.string	"\n\n----- Status -----\n"
 3510      2D2D 2D20 
 3510      5374 6174 
 3510      7573 202D 
 3510      2D2D 2D2D 
 3511               		.section	.progmem.data.__c.5033,"a",@progbits
 3514               	__c.5033:
 3515 0000 7469 6D65 		.string	"timer_count: %04lX\n"
 3515      725F 636F 
 3515      756E 743A 
 3515      2025 3034 
 3515      6C58 0A00 
 3516               		.section	.progmem.data.__c.5030,"a",@progbits
 3519               	__c.5030:
 3520 0000 4743 433A 		.string	"GCC: 4.8.1 AVR-LIBC: 1.8.0svn AVR_ARCH: avr5\n"
 3520      2034 2E38 
 3520      2E31 2041 
 3520      5652 2D4C 
 3520      4942 433A 
 3521               		.section	.progmem.data.__c.5028,"a",@progbits
 3524               	__c.5028:
 3525 0000 4F50 5449 		.string	"OPTIONS: LUFA BOOTMAGIC MOUSEKEY EXTRAKEY CONSOLE COMMAND NKRO 6KRO LEDMAP LEDMAP_IN_EEPR
 3525      4F4E 533A 
 3525      204C 5546 
 3525      4120 424F 
 3525      4F54 4D41 
 3526               		.section	.progmem.data.__c.5026,"a",@progbits
 3529               	__c.5026:
 3530 0000 4255 494C 		.string	"BUILD: unknown (11:57:14 Mar 21 2016)\n"
 3530      443A 2075 
 3530      6E6B 6E6F 
 3530      776E 2028 
 3530      3131 3A35 
 3531               		.section	.progmem.data.__c.5024,"a",@progbits
 3534               	__c.5024:
 3535 0000 5649 443A 		.string	"VID: 0xFEED(geekhack) PID: 0x1010(GHPad) VER: 0x0002\n"
 3535      2030 7846 
 3535      4545 4428 
 3535      6765 656B 
 3535      6861 636B 
 3536               		.section	.progmem.data.__c.5022,"a",@progbits
 3539               	__c.5022:
 3540 0000 4445 5343 		.string	"DESC: t.m.k. keyboard firmware for GHPad\n"
 3540      3A20 742E 
 3540      6D2E 6B2E 
 3540      206B 6579 
 3540      626F 6172 
 3541               		.section	.progmem.data.__c.5020,"a",@progbits
 3544               	__c.5020:
 3545 0000 0A0A 2D2D 		.string	"\n\n----- Version -----\n"
 3545      2D2D 2D20 
 3545      5665 7273 
 3545      696F 6E20 
 3545      2D2D 2D2D 
 3546               		.section	.progmem.data.__c.5017,"a",@progbits
 3549               	__c.5017:
 3550 0000 0A44 4542 		.string	"\nDEBUG: mouse disabled.\n"
 3550      5547 3A20 
 3550      6D6F 7573 
 3550      6520 6469 
 3550      7361 626C 
 3551               		.section	.progmem.data.__c.5015,"a",@progbits
 3554               	__c.5015:
 3555 0000 0A44 4542 		.string	"\nDEBUG: mouse enabled.\n"
 3555      5547 3A20 
 3555      6D6F 7573 
 3555      6520 656E 
 3555      6162 6C65 
 3556               		.section	.progmem.data.__c.5012,"a",@progbits
 3559               	__c.5012:
 3560 0000 0A44 4542 		.string	"\nDEBUG: keyboard disabled.\n"
 3560      5547 3A20 
 3560      6B65 7962 
 3560      6F61 7264 
 3560      2064 6973 
 3561               		.section	.progmem.data.__c.5010,"a",@progbits
 3564               	__c.5010:
 3565 0000 0A44 4542 		.string	"\nDEBUG: keyboard enabled.\n"
 3565      5547 3A20 
 3565      6B65 7962 
 3565      6F61 7264 
 3565      2065 6E61 
 3566               		.section	.progmem.data.__c.5007,"a",@progbits
 3569               	__c.5007:
 3570 0000 0A44 4542 		.string	"\nDEBUG: matrix disabled.\n"
 3570      5547 3A20 
 3570      6D61 7472 
 3570      6978 2064 
 3570      6973 6162 
 3571               		.section	.progmem.data.__c.5005,"a",@progbits
 3574               	__c.5005:
 3575 0000 0A44 4542 		.string	"\nDEBUG: matrix enabled.\n"
 3575      5547 3A20 
 3575      6D61 7472 
 3575      6978 2065 
 3575      6E61 626C 
 3576               		.section	.progmem.data.__c.5002,"a",@progbits
 3579               	__c.5002:
 3580 0000 0A44 4542 		.string	"\nDEBUG: enabled.\n"
 3580      5547 3A20 
 3580      656E 6162 
 3580      6C65 642E 
 3580      0A00 
 3581               		.section	.progmem.data.__c.5000,"a",@progbits
 3584               	__c.5000:
 3585 0000 0A44 4542 		.string	"\nDEBUG: disabled.\n"
 3585      5547 3A20 
 3585      6469 7361 
 3585      626C 6564 
 3585      2E0A 00
 3586               		.section	.progmem.data.__c.4997,"a",@progbits
 3589               	__c.4997:
 3590 0000 6E6F 7420 		.string	"not supported.\n"
 3590      7375 7070 
 3590      6F72 7465 
 3590      642E 0A00 
 3591               		.section	.progmem.data.__c.4995,"a",@progbits
 3594               	__c.4995:
 3595 0000 0A0A 4A75 		.string	"\n\nJump to bootloader... "
 3595      6D70 2074 
 3595      6F20 626F 
 3595      6F74 6C6F 
 3595      6164 6572 
 3596               		.section	.progmem.data.__c.4992,"a",@progbits
 3599               	__c.4992:
 3600 0000 433E 2000 		.string	"C> "
 3601               		.section	.progmem.data.__c.4990,"a",@progbits
 3604               	__c.4990:
 3605 0000 0A45 6E74 		.string	"\nEnter Console Mode\n"
 3605      6572 2043 
 3605      6F6E 736F 
 3605      6C65 204D 
 3605      6F64 650A 
 3606               		.section	.progmem.data.__c.4985,"a",@progbits
 3609               	__c.4985:
 3610 0000 556E 6C6F 		.string	"Unlocked.\n"
 3610      636B 6564 
 3610      2E0A 00
 3611               		.section	.progmem.data.__c.4983,"a",@progbits
 3614               	__c.4983:
 3615 0000 4C6F 636B 		.string	"Locked.\n"
 3615      6564 2E0A 
 3615      00
 3616               		.section	.bss.host_driver.4977,"aw",@nobits
 3619               	host_driver.4977:
 3620 0000 0000      		.zero	2
 3621               		.section	.progmem.data.__c.4979,"a",@progbits
 3624               	__c.4979:
 3625 0000 6565 636F 		.string	"eeconfig:\n"
 3625      6E66 6967 
 3625      3A0A 00
 3626               		.section	.bss.mousekey_param,"aw",@nobits
 3629               	mousekey_param:
 3630 0000 00        		.zero	1
 3631               	.global	command_state
 3632               		.section	.bss.command_state,"aw",@nobits
 3635               	command_state:
 3636 0000 00        		.zero	1
 3637               		.comm	keymap_config,1,1
 3638               		.text
 3639               	.Letext0:
 3640               		.file 4 "/usr/local/CrossPack-AVR-20131216/avr/include/stdint.h"
 3641               		.file 5 "../../tmk_core_custom/common/report.h"
 3642               		.file 6 "../../tmk_core_custom/common/host_driver.h"
 3643               		.file 7 "../../tmk_core_custom/common/keymap.h"
 3644               		.file 8 "../../tmk_core_custom/common/debug.h"
 3645               		.file 9 "../../tmk_core_custom/common/command.h"
 3646               		.file 10 "../../tmk_core_custom/common/backlight.h"
 3647               		.file 11 "../../tmk_core_custom/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
 3648               		.file 12 "../../tmk_core_custom/common/host.h"
 3649               		.file 13 "../../tmk_core_custom/common/timer.h"
 3650               		.file 14 "../../tmk_core_custom/common/action_layer.h"
 3651               		.file 15 "../../tmk_core_custom/common/mousekey.h"
 3652               		.file 16 "../../tmk_core_custom/common/avr/xprintf.h"
 3653               		.file 17 "../../tmk_core_custom/common/action.h"
 3654               		.file 18 "../../tmk_core_custom/common/keycode.h"
 3655               		.file 19 "../../tmk_core_custom/common/util.h"
DEFINED SYMBOLS
                            *ABS*:00000000 command.c
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2      *ABS*:0000003e __SP_H__
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3      *ABS*:0000003d __SP_L__
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:4      *ABS*:0000003f __SREG__
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:5      *ABS*:00000000 __tmp_reg__
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:6      *ABS*:00000001 __zero_reg__
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:12     .text.command_console_help:00000000 command_console_help
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3109   .progmem.data.__c.5061:00000000 __c.5061
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3104   .progmem.data.__c.5063:00000000 __c.5063
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3099   .progmem.data.__c.5065:00000000 __c.5065
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:41     .text.mousekey_console_help:00000000 mousekey_console_help
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3044   .progmem.data.__c.5226:00000000 __c.5226
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3039   .progmem.data.__c.5228:00000000 __c.5228
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3034   .progmem.data.__c.5230:00000000 __c.5230
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3029   .progmem.data.__c.5232:00000000 __c.5232
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3024   .progmem.data.__c.5234:00000000 __c.5234
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3019   .progmem.data.__c.5236:00000000 __c.5236
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3014   .progmem.data.__c.5238:00000000 __c.5238
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3009   .progmem.data.__c.5240:00000000 __c.5240
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3004   .progmem.data.__c.5242:00000000 __c.5242
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2999   .progmem.data.__c.5244:00000000 __c.5244
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2994   .progmem.data.__c.5246:00000000 __c.5246
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2989   .progmem.data.__c.5248:00000000 __c.5248
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2984   .progmem.data.__c.5250:00000000 __c.5250
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2979   .progmem.data.__c.5252:00000000 __c.5252
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2974   .progmem.data.__c.5254:00000000 __c.5254
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2969   .progmem.data.__c.5256:00000000 __c.5256
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2964   .progmem.data.__c.5258:00000000 __c.5258
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2959   .progmem.data.__c.5260:00000000 __c.5260
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2954   .progmem.data.__c.5262:00000000 __c.5262
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2949   .progmem.data.__c.5264:00000000 __c.5264
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2944   .progmem.data.__c.5266:00000000 __c.5266
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:192    .text.mousekey_param_inc:00000000 mousekey_param_inc
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2794   .progmem.data.__c.5134:00000000 __c.5134
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2789   .progmem.data.__c.5136:00000000 __c.5136
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2784   .progmem.data.__c.5138:00000000 __c.5138
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2779   .progmem.data.__c.5142:00000000 __c.5142
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2774   .progmem.data.__c.5144:00000000 __c.5144
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2769   .progmem.data.__c.5146:00000000 __c.5146
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2764   .progmem.data.__c.5149:00000000 __c.5149
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2759   .progmem.data.__c.5151:00000000 __c.5151
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2754   .progmem.data.__c.5153:00000000 __c.5153
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2749   .progmem.data.__c.5156:00000000 __c.5156
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2744   .progmem.data.__c.5158:00000000 __c.5158
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2739   .progmem.data.__c.5160:00000000 __c.5160
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2734   .progmem.data.__c.5163:00000000 __c.5163
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2729   .progmem.data.__c.5165:00000000 __c.5165
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2724   .progmem.data.__c.5167:00000000 __c.5167
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2719   .progmem.data.__c.5170:00000000 __c.5170
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2714   .progmem.data.__c.5172:00000000 __c.5172
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2709   .progmem.data.__c.5174:00000000 __c.5174
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:557    .text.mousekey_param_dec:00000000 mousekey_param_dec
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2704   .progmem.data.__c.5181:00000000 __c.5181
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2699   .progmem.data.__c.5183:00000000 __c.5183
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2694   .progmem.data.__c.5185:00000000 __c.5185
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2689   .progmem.data.__c.5189:00000000 __c.5189
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2684   .progmem.data.__c.5191:00000000 __c.5191
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2679   .progmem.data.__c.5193:00000000 __c.5193
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2674   .progmem.data.__c.5196:00000000 __c.5196
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2669   .progmem.data.__c.5198:00000000 __c.5198
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2664   .progmem.data.__c.5200:00000000 __c.5200
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2659   .progmem.data.__c.5203:00000000 __c.5203
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2654   .progmem.data.__c.5205:00000000 __c.5205
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2649   .progmem.data.__c.5207:00000000 __c.5207
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2644   .progmem.data.__c.5210:00000000 __c.5210
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2639   .progmem.data.__c.5212:00000000 __c.5212
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2634   .progmem.data.__c.5214:00000000 __c.5214
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2629   .progmem.data.__c.5217:00000000 __c.5217
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2624   .progmem.data.__c.5219:00000000 __c.5219
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2619   .progmem.data.__c.5221:00000000 __c.5221
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:868    .text.switch_default_layer:00000000 switch_default_layer
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3094   .progmem.data.__c.5329:00000000 __c.5329
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3089   .progmem.data.__c.5331:00000000 __c.5331
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3084   .progmem.data.__c.5333:00000000 __c.5333
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3079   .progmem.data.__c.5335:00000000 __c.5335
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3074   .progmem.data.__c.5337:00000000 __c.5337
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:974    .text.command_common:00000000 command_common
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3624   .progmem.data.__c.4979:00000000 __c.4979
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3474   .progmem.data.__c.4863:00000000 __c.4863
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3469   .progmem.data.__c.4865:00000000 __c.4865
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3464   .progmem.data.__c.4867:00000000 __c.4867
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3459   .progmem.data.__c.4870:00000000 __c.4870
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3454   .progmem.data.__c.4872:00000000 __c.4872
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3449   .progmem.data.__c.4874:00000000 __c.4874
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3444   .progmem.data.__c.4876:00000000 __c.4876
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3439   .progmem.data.__c.4878:00000000 __c.4878
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3434   .progmem.data.__c.4880:00000000 __c.4880
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3429   .progmem.data.__c.4882:00000000 __c.4882
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3424   .progmem.data.__c.4884:00000000 __c.4884
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3419   .progmem.data.__c.4886:00000000 __c.4886
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3414   .progmem.data.__c.4888:00000000 __c.4888
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3409   .progmem.data.__c.4890:00000000 __c.4890
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3404   .progmem.data.__c.4892:00000000 __c.4892
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3399   .progmem.data.__c.4894:00000000 __c.4894
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3394   .progmem.data.__c.4896:00000000 __c.4896
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3389   .progmem.data.__c.4898:00000000 __c.4898
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3384   .progmem.data.__c.4901:00000000 __c.4901
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3379   .progmem.data.__c.4903:00000000 __c.4903
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3374   .progmem.data.__c.4905:00000000 __c.4905
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3369   .progmem.data.__c.4907:00000000 __c.4907
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3364   .progmem.data.__c.4909:00000000 __c.4909
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3359   .progmem.data.__c.4911:00000000 __c.4911
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3354   .progmem.data.__c.4913:00000000 __c.4913
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3349   .progmem.data.__c.4915:00000000 __c.4915
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3344   .progmem.data.__c.4917:00000000 __c.4917
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3339   .progmem.data.__c.4919:00000000 __c.4919
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3334   .progmem.data.__c.4921:00000000 __c.4921
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3329   .progmem.data.__c.4923:00000000 __c.4923
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3324   .progmem.data.__c.4925:00000000 __c.4925
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3319   .progmem.data.__c.4927:00000000 __c.4927
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3314   .progmem.data.__c.4929:00000000 __c.4929
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3309   .progmem.data.__c.4931:00000000 __c.4931
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3304   .progmem.data.__c.4933:00000000 __c.4933
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3299   .progmem.data.__c.4935:00000000 __c.4935
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3294   .progmem.data.__c.4937:00000000 __c.4937
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3289   .progmem.data.__c.4939:00000000 __c.4939
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3284   .progmem.data.__c.4941:00000000 __c.4941
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3279   .progmem.data.__c.4943:00000000 __c.4943
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3274   .progmem.data.__c.4945:00000000 __c.4945
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3269   .progmem.data.__c.4947:00000000 __c.4947
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3264   .progmem.data.__c.4949:00000000 __c.4949
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3259   .progmem.data.__c.4951:00000000 __c.4951
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3254   .progmem.data.__c.4953:00000000 __c.4953
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3249   .progmem.data.__c.4956:00000000 __c.4956
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3244   .progmem.data.__c.4958:00000000 __c.4958
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3239   .progmem.data.__c.4960:00000000 __c.4960
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3234   .progmem.data.__c.4962:00000000 __c.4962
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3229   .progmem.data.__c.4964:00000000 __c.4964
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3224   .progmem.data.__c.4966:00000000 __c.4966
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3219   .progmem.data.__c.4968:00000000 __c.4968
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3214   .progmem.data.__c.4970:00000000 __c.4970
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3209   .progmem.data.__c.4972:00000000 __c.4972
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3619   .bss.host_driver.4977:00000000 host_driver.4977
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3614   .progmem.data.__c.4983:00000000 __c.4983
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3609   .progmem.data.__c.4985:00000000 __c.4985
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3204   .progmem.data.__c.4822:00000000 __c.4822
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3199   .progmem.data.__c.4824:00000000 __c.4824
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3194   .progmem.data.__c.4826:00000000 __c.4826
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3189   .progmem.data.__c.4828:00000000 __c.4828
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3184   .progmem.data.__c.4830:00000000 __c.4830
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3179   .progmem.data.__c.4832:00000000 __c.4832
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3174   .progmem.data.__c.4834:00000000 __c.4834
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3169   .progmem.data.__c.4836:00000000 __c.4836
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3164   .progmem.data.__c.4838:00000000 __c.4838
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3159   .progmem.data.__c.4840:00000000 __c.4840
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3154   .progmem.data.__c.4842:00000000 __c.4842
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3149   .progmem.data.__c.4844:00000000 __c.4844
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3144   .progmem.data.__c.4846:00000000 __c.4846
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3139   .progmem.data.__c.4848:00000000 __c.4848
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3134   .progmem.data.__c.4850:00000000 __c.4850
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3129   .progmem.data.__c.4852:00000000 __c.4852
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3124   .progmem.data.__c.4854:00000000 __c.4854
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3119   .progmem.data.__c.4856:00000000 __c.4856
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3114   .progmem.data.__c.4858:00000000 __c.4858
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3604   .progmem.data.__c.4990:00000000 __c.4990
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3599   .progmem.data.__c.4992:00000000 __c.4992
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3635   .bss.command_state:00000000 command_state
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3594   .progmem.data.__c.4995:00000000 __c.4995
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3589   .progmem.data.__c.4997:00000000 __c.4997
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3584   .progmem.data.__c.5000:00000000 __c.5000
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3579   .progmem.data.__c.5002:00000000 __c.5002
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3574   .progmem.data.__c.5005:00000000 __c.5005
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3569   .progmem.data.__c.5007:00000000 __c.5007
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3564   .progmem.data.__c.5010:00000000 __c.5010
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3559   .progmem.data.__c.5012:00000000 __c.5012
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3554   .progmem.data.__c.5015:00000000 __c.5015
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3549   .progmem.data.__c.5017:00000000 __c.5017
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3544   .progmem.data.__c.5020:00000000 __c.5020
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3539   .progmem.data.__c.5022:00000000 __c.5022
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3534   .progmem.data.__c.5024:00000000 __c.5024
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3529   .progmem.data.__c.5026:00000000 __c.5026
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3524   .progmem.data.__c.5028:00000000 __c.5028
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3519   .progmem.data.__c.5030:00000000 __c.5030
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3514   .progmem.data.__c.5033:00000000 __c.5033
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3509   .progmem.data.__c.5036:00000000 __c.5036
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3504   .progmem.data.__c.5038:00000000 __c.5038
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3499   .progmem.data.__c.5040:00000000 __c.5040
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3494   .progmem.data.__c.5042:00000000 __c.5042
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3489   .progmem.data.__c.5045:00000000 __c.5045
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3484   .progmem.data.__c.5047:00000000 __c.5047
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3479   .progmem.data.__c.5056:00000000 __c.5056
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2040   .text.matrix_power_up:00000000 matrix_power_up
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2056   .text.matrix_power_down:00000000 matrix_power_down
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2071   .text.command_extra:00000000 command_extra
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2090   .text.command_console_extra:00000000 command_console_extra
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2109   .text.command_proc:00000000 command_proc
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3059   .progmem.data.__c.5078:00000000 __c.5078
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3054   .progmem.data.__c.5080:00000000 __c.5080
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3069   .progmem.data.__c.5085:00000000 __c.5085
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3064   .progmem.data.__c.5075:00000000 __c.5075
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3049   .progmem.data.__c.5083:00000000 __c.5083
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2914   .progmem.data.__c.5302:00000000 __c.5302
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:3629   .bss.mousekey_param:00000000 mousekey_param
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2939   .progmem.data.__c.5276:00000000 __c.5276
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2934   .progmem.data.__c.5278:00000000 __c.5278
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2889   .progmem.data.__c.5091:00000000 __c.5091
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2884   .progmem.data.__c.5093:00000000 __c.5093
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2879   .progmem.data.__c.5095:00000000 __c.5095
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2874   .progmem.data.__c.5097:00000000 __c.5097
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2869   .progmem.data.__c.5099:00000000 __c.5099
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2864   .progmem.data.__c.5101:00000000 __c.5101
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2859   .progmem.data.__c.5103:00000000 __c.5103
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2854   .progmem.data.__c.5105:00000000 __c.5105
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2849   .progmem.data.__c.5107:00000000 __c.5107
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2844   .progmem.data.__c.5109:00000000 __c.5109
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2839   .progmem.data.__c.5111:00000000 __c.5111
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2834   .progmem.data.__c.5113:00000000 __c.5113
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2829   .progmem.data.__c.5115:00000000 __c.5115
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2824   .progmem.data.__c.5117:00000000 __c.5117
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2819   .progmem.data.__c.5119:00000000 __c.5119
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2814   .progmem.data.__c.5121:00000000 __c.5121
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2809   .progmem.data.__c.5123:00000000 __c.5123
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2804   .progmem.data.__c.5125:00000000 __c.5125
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2799   .progmem.data.__c.5127:00000000 __c.5127
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2605   .rodata.CSWTCH.46:00000000 CSWTCH.46
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2929   .progmem.data.__c.5291:00000000 __c.5291
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2924   .progmem.data.__c.5293:00000000 __c.5293
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2919   .progmem.data.__c.5295:00000000 __c.5295
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2909   .progmem.data.__c.5305:00000000 __c.5305
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2904   .progmem.data.__c.5307:00000000 __c.5307
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2899   .progmem.data.__c.5309:00000000 __c.5309
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//ccdUCEXU.s:2894   .progmem.data.__c.5311:00000000 __c.5311
                            *COM*:00000001 keymap_config

UNDEFINED SYMBOLS
xputs
__xprintf
mk_delay
mk_interval
mk_max_speed
mk_time_to_max
mk_wheel_max_speed
mk_wheel_time_to_max
default_layer_state
biton32
default_layer_set
clear_keyboard
__tablejump2__
eeconfig_read_default_layer
eeconfig_read_debug
eeconfig_read_keymap
eeconfig_read_backlight
host_get_driver
host_set_driver
debug_config
bootloader_jump
timer_count
host_keyboard_leds
keyboard_protocol
keyboard_idle
keyboard_nkro
host_system_send
matrix_is_on
__do_copy_data
__do_clear_bss
