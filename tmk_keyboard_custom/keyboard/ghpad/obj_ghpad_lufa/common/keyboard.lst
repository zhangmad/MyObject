   1               		.file	"keyboard.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.matrix_power_up,"ax",@progbits
  11               		.weak	matrix_power_up
  13               	matrix_power_up:
  14               	.LFB3:
  15               		.file 1 "../../tmk_core_custom/common/keyboard.h"
   1:../../tmk_core_custom/common/keyboard.h **** /*
   2:../../tmk_core_custom/common/keyboard.h **** Copyright 2011,2012,2013 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core_custom/common/keyboard.h **** 
   4:../../tmk_core_custom/common/keyboard.h **** This program is free software: you can redistribute it and/or modify
   5:../../tmk_core_custom/common/keyboard.h **** it under the terms of the GNU General Public License as published by
   6:../../tmk_core_custom/common/keyboard.h **** the Free Software Foundation, either version 2 of the License, or
   7:../../tmk_core_custom/common/keyboard.h **** (at your option) any later version.
   8:../../tmk_core_custom/common/keyboard.h **** 
   9:../../tmk_core_custom/common/keyboard.h **** This program is distributed in the hope that it will be useful,
  10:../../tmk_core_custom/common/keyboard.h **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../tmk_core_custom/common/keyboard.h **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../tmk_core_custom/common/keyboard.h **** GNU General Public License for more details.
  13:../../tmk_core_custom/common/keyboard.h **** 
  14:../../tmk_core_custom/common/keyboard.h **** You should have received a copy of the GNU General Public License
  15:../../tmk_core_custom/common/keyboard.h **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../tmk_core_custom/common/keyboard.h **** */
  17:../../tmk_core_custom/common/keyboard.h **** 
  18:../../tmk_core_custom/common/keyboard.h **** #ifndef KEYBOARD_H
  19:../../tmk_core_custom/common/keyboard.h **** #define KEYBOARD_H
  20:../../tmk_core_custom/common/keyboard.h **** 
  21:../../tmk_core_custom/common/keyboard.h **** #include <stdbool.h>
  22:../../tmk_core_custom/common/keyboard.h **** #include <stdint.h>
  23:../../tmk_core_custom/common/keyboard.h **** 
  24:../../tmk_core_custom/common/keyboard.h **** 
  25:../../tmk_core_custom/common/keyboard.h **** #ifdef __cplusplus
  26:../../tmk_core_custom/common/keyboard.h **** extern "C" {
  27:../../tmk_core_custom/common/keyboard.h **** #endif
  28:../../tmk_core_custom/common/keyboard.h **** 
  29:../../tmk_core_custom/common/keyboard.h **** /* key matrix position */
  30:../../tmk_core_custom/common/keyboard.h **** typedef struct {
  31:../../tmk_core_custom/common/keyboard.h ****     uint8_t col;
  32:../../tmk_core_custom/common/keyboard.h ****     uint8_t row;
  33:../../tmk_core_custom/common/keyboard.h **** } keypos_t;
  34:../../tmk_core_custom/common/keyboard.h **** 
  35:../../tmk_core_custom/common/keyboard.h **** /* key event */
  36:../../tmk_core_custom/common/keyboard.h **** typedef struct {
  37:../../tmk_core_custom/common/keyboard.h ****     keypos_t key;
  38:../../tmk_core_custom/common/keyboard.h ****     bool     pressed;
  39:../../tmk_core_custom/common/keyboard.h ****     uint16_t time;
  40:../../tmk_core_custom/common/keyboard.h **** } keyevent_t;
  41:../../tmk_core_custom/common/keyboard.h **** 
  42:../../tmk_core_custom/common/keyboard.h **** /* equivalent test of keypos_t */
  43:../../tmk_core_custom/common/keyboard.h **** #define KEYEQ(keya, keyb)       ((keya).row == (keyb).row && (keya).col == (keyb).col)
  44:../../tmk_core_custom/common/keyboard.h **** 
  45:../../tmk_core_custom/common/keyboard.h **** /* Rules for No Event:
  46:../../tmk_core_custom/common/keyboard.h ****  * 1) (time == 0) to handle (keyevent_t){} as empty event
  47:../../tmk_core_custom/common/keyboard.h ****  * 2) Matrix(255, 255) to make TICK event available
  48:../../tmk_core_custom/common/keyboard.h ****  */
  49:../../tmk_core_custom/common/keyboard.h **** static inline bool IS_NOEVENT(keyevent_t event) { return event.time == 0 || (event.key.row == 255 &
  50:../../tmk_core_custom/common/keyboard.h **** static inline bool IS_PRESSED(keyevent_t event) { return (!IS_NOEVENT(event) && event.pressed); }
  51:../../tmk_core_custom/common/keyboard.h **** static inline bool IS_RELEASED(keyevent_t event) { return (!IS_NOEVENT(event) && !event.pressed); }
  52:../../tmk_core_custom/common/keyboard.h **** 
  53:../../tmk_core_custom/common/keyboard.h **** /* Tick event */
  54:../../tmk_core_custom/common/keyboard.h **** #define TICK                    (keyevent_t){           \
  55:../../tmk_core_custom/common/keyboard.h ****     .key = (keypos_t){ .row = 255, .col = 255 },           \
  56:../../tmk_core_custom/common/keyboard.h ****     .pressed = false,                                   \
  57:../../tmk_core_custom/common/keyboard.h ****     .time = (timer_read() | 1)                          \
  58:../../tmk_core_custom/common/keyboard.h **** }
  59:../../tmk_core_custom/common/keyboard.h **** 
  60:../../tmk_core_custom/common/keyboard.h **** 
  61:../../tmk_core_custom/common/keyboard.h **** void keyboard_init(void);
  62:../../tmk_core_custom/common/keyboard.h **** void keyboard_task(void);
  63:../../tmk_core_custom/common/keyboard.h **** void keyboard_set_leds(uint8_t leds);
  64:../../tmk_core_custom/common/keyboard.h **** 
  65:../../tmk_core_custom/common/keyboard.h **** __attribute__ ((weak)) void matrix_power_up(void) {}
  16               		.loc 1 65 0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  22 0000 0895      		ret
  23               		.cfi_endproc
  24               	.LFE3:
  26               		.section	.text.matrix_power_down,"ax",@progbits
  27               		.weak	matrix_power_down
  29               	matrix_power_down:
  30               	.LFB4:
  66:../../tmk_core_custom/common/keyboard.h **** __attribute__ ((weak)) void matrix_power_down(void) {}
  31               		.loc 1 66 0
  32               		.cfi_startproc
  33               	/* prologue: function */
  34               	/* frame size = 0 */
  35               	/* stack size = 0 */
  36               	.L__stack_usage = 0
  37 0000 0895      		ret
  38               		.cfi_endproc
  39               	.LFE4:
  41               		.section	.text.keyboard_init,"ax",@progbits
  42               	.global	keyboard_init
  44               	keyboard_init:
  45               	.LFB105:
  46               		.file 2 "../../tmk_core_custom/common/keyboard.c"
   1:../../tmk_core_custom/common/keyboard.c **** /*
   2:../../tmk_core_custom/common/keyboard.c **** Copyright 2011,2012,2013 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core_custom/common/keyboard.c **** 
   4:../../tmk_core_custom/common/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:../../tmk_core_custom/common/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:../../tmk_core_custom/common/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:../../tmk_core_custom/common/keyboard.c **** (at your option) any later version.
   8:../../tmk_core_custom/common/keyboard.c **** 
   9:../../tmk_core_custom/common/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:../../tmk_core_custom/common/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../tmk_core_custom/common/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../tmk_core_custom/common/keyboard.c **** GNU General Public License for more details.
  13:../../tmk_core_custom/common/keyboard.c **** 
  14:../../tmk_core_custom/common/keyboard.c **** You should have received a copy of the GNU General Public License
  15:../../tmk_core_custom/common/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../tmk_core_custom/common/keyboard.c **** */
  17:../../tmk_core_custom/common/keyboard.c **** #include <stdint.h>
  18:../../tmk_core_custom/common/keyboard.c **** #include "keyboard.h"
  19:../../tmk_core_custom/common/keyboard.c **** #include "matrix.h"
  20:../../tmk_core_custom/common/keyboard.c **** #include "keymap.h"
  21:../../tmk_core_custom/common/keyboard.c **** #include "host.h"
  22:../../tmk_core_custom/common/keyboard.c **** #include "led.h"
  23:../../tmk_core_custom/common/keyboard.c **** #include "keycode.h"
  24:../../tmk_core_custom/common/keyboard.c **** #include "timer.h"
  25:../../tmk_core_custom/common/keyboard.c **** #include "print.h"
  26:../../tmk_core_custom/common/keyboard.c **** #include "debug.h"
  27:../../tmk_core_custom/common/keyboard.c **** #include "command.h"
  28:../../tmk_core_custom/common/keyboard.c **** #include "util.h"
  29:../../tmk_core_custom/common/keyboard.c **** #include "sendchar.h"
  30:../../tmk_core_custom/common/keyboard.c **** #include "bootmagic.h"
  31:../../tmk_core_custom/common/keyboard.c **** #include "eeconfig.h"
  32:../../tmk_core_custom/common/keyboard.c **** #include "backlight.h"
  33:../../tmk_core_custom/common/keyboard.c **** #ifdef SOFTPWM_LED_ENABLE
  34:../../tmk_core_custom/common/keyboard.c **** #include "softpwm_led.h"
  35:../../tmk_core_custom/common/keyboard.c **** #else
  36:../../tmk_core_custom/common/keyboard.c **** #include "breathing_led.h"
  37:../../tmk_core_custom/common/keyboard.c **** #endif
  38:../../tmk_core_custom/common/keyboard.c **** #include "ledmap.h"
  39:../../tmk_core_custom/common/keyboard.c **** #include "ledmap_in_eeprom.h"
  40:../../tmk_core_custom/common/keyboard.c **** #include "keymap_in_eeprom.h"
  41:../../tmk_core_custom/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  42:../../tmk_core_custom/common/keyboard.c **** #   include "mousekey.h"
  43:../../tmk_core_custom/common/keyboard.c **** #endif
  44:../../tmk_core_custom/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  45:../../tmk_core_custom/common/keyboard.c **** #   include "ps2_mouse.h"
  46:../../tmk_core_custom/common/keyboard.c **** #endif
  47:../../tmk_core_custom/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  48:../../tmk_core_custom/common/keyboard.c **** #include "serial_mouse.h"
  49:../../tmk_core_custom/common/keyboard.c **** #endif
  50:../../tmk_core_custom/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  51:../../tmk_core_custom/common/keyboard.c **** #include "adb.h"
  52:../../tmk_core_custom/common/keyboard.c **** #endif
  53:../../tmk_core_custom/common/keyboard.c **** 
  54:../../tmk_core_custom/common/keyboard.c **** 
  55:../../tmk_core_custom/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
  56:../../tmk_core_custom/common/keyboard.c **** static bool has_ghost_in_row(uint8_t row)
  57:../../tmk_core_custom/common/keyboard.c **** {
  58:../../tmk_core_custom/common/keyboard.c ****     matrix_row_t matrix_row = matrix_get_row(row);
  59:../../tmk_core_custom/common/keyboard.c ****     // No ghost exists when less than 2 keys are down on the row
  60:../../tmk_core_custom/common/keyboard.c ****     if (((matrix_row - 1) & matrix_row) == 0)
  61:../../tmk_core_custom/common/keyboard.c ****         return false;
  62:../../tmk_core_custom/common/keyboard.c **** 
  63:../../tmk_core_custom/common/keyboard.c ****     // Ghost occurs when the row shares column line with other row
  64:../../tmk_core_custom/common/keyboard.c ****     for (uint8_t i=0; i < MATRIX_ROWS; i++) {
  65:../../tmk_core_custom/common/keyboard.c ****         if (i != row && (matrix_get_row(i) & matrix_row))
  66:../../tmk_core_custom/common/keyboard.c ****             return true;
  67:../../tmk_core_custom/common/keyboard.c ****     }
  68:../../tmk_core_custom/common/keyboard.c ****     return false;
  69:../../tmk_core_custom/common/keyboard.c **** }
  70:../../tmk_core_custom/common/keyboard.c **** #endif
  71:../../tmk_core_custom/common/keyboard.c **** 
  72:../../tmk_core_custom/common/keyboard.c **** extern uint8_t ps2_mouse_enabled;
  73:../../tmk_core_custom/common/keyboard.c **** 
  74:../../tmk_core_custom/common/keyboard.c **** void keyboard_init(void)
  75:../../tmk_core_custom/common/keyboard.c **** {
  47               		.loc 2 75 0
  48               		.cfi_startproc
  49               	/* prologue: function */
  50               	/* frame size = 0 */
  51               	/* stack size = 0 */
  52               	.L__stack_usage = 0
  76:../../tmk_core_custom/common/keyboard.c ****     timer_init();
  53               		.loc 2 76 0
  54 0000 0E94 0000 		call timer_init
  55               	.LVL0:
  77:../../tmk_core_custom/common/keyboard.c ****     matrix_init();
  56               		.loc 2 77 0
  57 0004 0E94 0000 		call matrix_init
  58               	.LVL1:
  78:../../tmk_core_custom/common/keyboard.c **** 
  79:../../tmk_core_custom/common/keyboard.c **** #ifdef LED_MATRIX_ENABLE
  80:../../tmk_core_custom/common/keyboard.c ****     led_matrix_init();
  81:../../tmk_core_custom/common/keyboard.c **** #endif
  82:../../tmk_core_custom/common/keyboard.c **** 
  83:../../tmk_core_custom/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  84:../../tmk_core_custom/common/keyboard.c ****     if (ps2_mouse_enabled) {
  85:../../tmk_core_custom/common/keyboard.c ****         ps2_mouse_init();
  86:../../tmk_core_custom/common/keyboard.c ****     }
  87:../../tmk_core_custom/common/keyboard.c **** #endif
  88:../../tmk_core_custom/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  89:../../tmk_core_custom/common/keyboard.c ****     serial_mouse_init();
  90:../../tmk_core_custom/common/keyboard.c **** #endif
  91:../../tmk_core_custom/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  92:../../tmk_core_custom/common/keyboard.c ****     adb_mouse_init();
  93:../../tmk_core_custom/common/keyboard.c **** #endif
  94:../../tmk_core_custom/common/keyboard.c **** 
  95:../../tmk_core_custom/common/keyboard.c **** 
  96:../../tmk_core_custom/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
  97:../../tmk_core_custom/common/keyboard.c ****     bootmagic();
  59               		.loc 2 97 0
  60 0008 0E94 0000 		call bootmagic
  61               	.LVL2:
  98:../../tmk_core_custom/common/keyboard.c **** #endif
  99:../../tmk_core_custom/common/keyboard.c **** 
 100:../../tmk_core_custom/common/keyboard.c **** #ifdef LEDMAP_ENABLE
 101:../../tmk_core_custom/common/keyboard.c **** #ifdef LEDMAP_IN_EEPROM_ENABLE
 102:../../tmk_core_custom/common/keyboard.c ****     ledmap_in_eeprom_init();
  62               		.loc 2 102 0
  63 000c 0E94 0000 		call ledmap_in_eeprom_init
  64               	.LVL3:
 103:../../tmk_core_custom/common/keyboard.c **** #endif
 104:../../tmk_core_custom/common/keyboard.c ****     ledmap_init();
  65               		.loc 2 104 0
  66 0010 0E94 0000 		call ledmap_init
  67               	.LVL4:
 105:../../tmk_core_custom/common/keyboard.c **** #endif
 106:../../tmk_core_custom/common/keyboard.c **** 
 107:../../tmk_core_custom/common/keyboard.c **** #ifdef SOFTPWM_LED_ENABLE
 108:../../tmk_core_custom/common/keyboard.c ****     softpwm_init();
  68               		.loc 2 108 0
  69 0014 0E94 0000 		call softpwm_init
  70               	.LVL5:
 109:../../tmk_core_custom/common/keyboard.c **** #endif
 110:../../tmk_core_custom/common/keyboard.c **** 
 111:../../tmk_core_custom/common/keyboard.c **** #ifdef BREATHING_LED_ENABLE
 112:../../tmk_core_custom/common/keyboard.c ****     breathing_led_init();
 113:../../tmk_core_custom/common/keyboard.c **** #endif
 114:../../tmk_core_custom/common/keyboard.c **** 
 115:../../tmk_core_custom/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
 116:../../tmk_core_custom/common/keyboard.c ****     backlight_init();
  71               		.loc 2 116 0
  72 0018 0C94 0000 		jmp backlight_init
  73               	.LVL6:
  74               		.cfi_endproc
  75               	.LFE105:
  77               		.section	.text.keyboard_set_leds,"ax",@progbits
  78               	.global	keyboard_set_leds
  80               	keyboard_set_leds:
  81               	.LFB107:
 117:../../tmk_core_custom/common/keyboard.c **** #endif
 118:../../tmk_core_custom/common/keyboard.c **** 
 119:../../tmk_core_custom/common/keyboard.c **** #ifdef KEYMAP_IN_EEPROM_ENABLE
 120:../../tmk_core_custom/common/keyboard.c ****     keymap_in_eeprom_init();
 121:../../tmk_core_custom/common/keyboard.c **** #endif
 122:../../tmk_core_custom/common/keyboard.c **** }
 123:../../tmk_core_custom/common/keyboard.c **** 
 124:../../tmk_core_custom/common/keyboard.c **** /*
 125:../../tmk_core_custom/common/keyboard.c ****  * Do keyboard routine jobs: scan mantrix, light LEDs, ...
 126:../../tmk_core_custom/common/keyboard.c ****  * This is repeatedly called as fast as possible.
 127:../../tmk_core_custom/common/keyboard.c ****  */
 128:../../tmk_core_custom/common/keyboard.c **** void keyboard_task(void)
 129:../../tmk_core_custom/common/keyboard.c **** {
 130:../../tmk_core_custom/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 131:../../tmk_core_custom/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 132:../../tmk_core_custom/common/keyboard.c ****     static matrix_row_t matrix_ghost[MATRIX_ROWS];
 133:../../tmk_core_custom/common/keyboard.c **** #endif
 134:../../tmk_core_custom/common/keyboard.c ****     static uint8_t led_status = 0;
 135:../../tmk_core_custom/common/keyboard.c ****     matrix_row_t matrix_row = 0;
 136:../../tmk_core_custom/common/keyboard.c ****     matrix_row_t matrix_change = 0;
 137:../../tmk_core_custom/common/keyboard.c **** 
 138:../../tmk_core_custom/common/keyboard.c ****     matrix_scan();
 139:../../tmk_core_custom/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 140:../../tmk_core_custom/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 141:../../tmk_core_custom/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 142:../../tmk_core_custom/common/keyboard.c ****         if (matrix_change) {
 143:../../tmk_core_custom/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 144:../../tmk_core_custom/common/keyboard.c ****             if (has_ghost_in_row(r)) {
 145:../../tmk_core_custom/common/keyboard.c ****                 /* Keep track of whether ghosted status has changed for
 146:../../tmk_core_custom/common/keyboard.c ****                  * debugging. But don't update matrix_prev until un-ghosted, or
 147:../../tmk_core_custom/common/keyboard.c ****                  * the last key would be lost.
 148:../../tmk_core_custom/common/keyboard.c ****                  */
 149:../../tmk_core_custom/common/keyboard.c ****                 if (debug_matrix && matrix_ghost[r] != matrix_row) {
 150:../../tmk_core_custom/common/keyboard.c ****                     matrix_print();
 151:../../tmk_core_custom/common/keyboard.c ****                 }
 152:../../tmk_core_custom/common/keyboard.c ****                 matrix_ghost[r] = matrix_row;
 153:../../tmk_core_custom/common/keyboard.c ****                 continue;
 154:../../tmk_core_custom/common/keyboard.c ****             }
 155:../../tmk_core_custom/common/keyboard.c ****             matrix_ghost[r] = matrix_row;
 156:../../tmk_core_custom/common/keyboard.c **** #endif
 157:../../tmk_core_custom/common/keyboard.c ****             if (debug_matrix) matrix_print();
 158:../../tmk_core_custom/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 159:../../tmk_core_custom/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 160:../../tmk_core_custom/common/keyboard.c ****                     action_exec((keyevent_t){
 161:../../tmk_core_custom/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 162:../../tmk_core_custom/common/keyboard.c ****                         .pressed = (matrix_row & ((matrix_row_t)1<<c)),
 163:../../tmk_core_custom/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 164:../../tmk_core_custom/common/keyboard.c ****                     });
 165:../../tmk_core_custom/common/keyboard.c ****                     // record a processed key
 166:../../tmk_core_custom/common/keyboard.c ****                     matrix_prev[r] ^= ((matrix_row_t)1<<c);
 167:../../tmk_core_custom/common/keyboard.c ****                     // process a key per task call
 168:../../tmk_core_custom/common/keyboard.c ****                     goto MATRIX_LOOP_END;
 169:../../tmk_core_custom/common/keyboard.c ****                 }
 170:../../tmk_core_custom/common/keyboard.c ****             }
 171:../../tmk_core_custom/common/keyboard.c ****         }
 172:../../tmk_core_custom/common/keyboard.c ****     }
 173:../../tmk_core_custom/common/keyboard.c ****     // call with pseudo tick event when no real key event.
 174:../../tmk_core_custom/common/keyboard.c ****     action_exec(TICK);
 175:../../tmk_core_custom/common/keyboard.c **** 
 176:../../tmk_core_custom/common/keyboard.c **** MATRIX_LOOP_END:
 177:../../tmk_core_custom/common/keyboard.c **** 
 178:../../tmk_core_custom/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 179:../../tmk_core_custom/common/keyboard.c ****     // mousekey repeat & acceleration
 180:../../tmk_core_custom/common/keyboard.c ****     mousekey_task();
 181:../../tmk_core_custom/common/keyboard.c **** #endif
 182:../../tmk_core_custom/common/keyboard.c **** 
 183:../../tmk_core_custom/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 184:../../tmk_core_custom/common/keyboard.c ****     if (ps2_mouse_enabled) {
 185:../../tmk_core_custom/common/keyboard.c ****         ps2_mouse_task();
 186:../../tmk_core_custom/common/keyboard.c ****     }
 187:../../tmk_core_custom/common/keyboard.c **** #endif
 188:../../tmk_core_custom/common/keyboard.c **** 
 189:../../tmk_core_custom/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 190:../../tmk_core_custom/common/keyboard.c ****         serial_mouse_task();
 191:../../tmk_core_custom/common/keyboard.c **** #endif
 192:../../tmk_core_custom/common/keyboard.c **** 
 193:../../tmk_core_custom/common/keyboard.c ****     // update LED
 194:../../tmk_core_custom/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 195:../../tmk_core_custom/common/keyboard.c ****         led_status = host_keyboard_leds();
 196:../../tmk_core_custom/common/keyboard.c ****         keyboard_set_leds(led_status);
 197:../../tmk_core_custom/common/keyboard.c ****     }
 198:../../tmk_core_custom/common/keyboard.c **** }
 199:../../tmk_core_custom/common/keyboard.c **** 
 200:../../tmk_core_custom/common/keyboard.c **** void keyboard_set_leds(uint8_t leds)
 201:../../tmk_core_custom/common/keyboard.c **** {
  82               		.loc 2 201 0
  83               		.cfi_startproc
  84               	.LVL7:
  85 0000 CF93      		push r28
  86               	.LCFI0:
  87               		.cfi_def_cfa_offset 3
  88               		.cfi_offset 28, -2
  89               	/* prologue: function */
  90               	/* frame size = 0 */
  91               	/* stack size = 1 */
  92               	.L__stack_usage = 1
  93 0002 C82F      		mov r28,r24
 202:../../tmk_core_custom/common/keyboard.c ****     if (debug_keyboard) { debug("keyboard_set_led: "); debug_hex8(leds); debug("\n"); }
  94               		.loc 2 202 0
  95 0004 8091 0000 		lds r24,debug_config
  96               	.LVL8:
  97 0008 82FF      		sbrs r24,2
  98 000a 00C0      		rjmp .L6
  99               		.loc 2 202 0 is_stmt 0 discriminator 1
 100 000c 80FF      		sbrs r24,0
 101 000e 00C0      		rjmp .L7
 102 0010 80E0      		ldi r24,lo8(__c.4860)
 103 0012 90E0      		ldi r25,hi8(__c.4860)
 104 0014 0E94 0000 		call xputs
 105               	.LVL9:
 106               	.L7:
 107               		.loc 2 202 0 discriminator 2
 108 0018 8091 0000 		lds r24,debug_config
 109 001c 80FF      		sbrs r24,0
 110 001e 00C0      		rjmp .L8
 111               		.loc 2 202 0 discriminator 1
 112 0020 1F92      		push __zero_reg__
 113               	.LCFI1:
 114               		.cfi_def_cfa_offset 4
 115 0022 CF93      		push r28
 116               	.LCFI2:
 117               		.cfi_def_cfa_offset 5
 118 0024 20E0      		ldi r18,lo8(__c.4862)
 119 0026 30E0      		ldi r19,hi8(__c.4862)
 120 0028 3F93      		push r19
 121               	.LCFI3:
 122               		.cfi_def_cfa_offset 6
 123 002a 2F93      		push r18
 124               	.LCFI4:
 125               		.cfi_def_cfa_offset 7
 126 002c 0E94 0000 		call __xprintf
 127               	.LVL10:
 128 0030 0F90      		pop __tmp_reg__
 129 0032 0F90      		pop __tmp_reg__
 130 0034 0F90      		pop __tmp_reg__
 131 0036 0F90      		pop __tmp_reg__
 132               	.LCFI5:
 133               		.cfi_def_cfa_offset 3
 134               	.L8:
 135               		.loc 2 202 0 discriminator 2
 136 0038 8091 0000 		lds r24,debug_config
 137 003c 80FF      		sbrs r24,0
 138 003e 00C0      		rjmp .L6
 139               		.loc 2 202 0 discriminator 1
 140 0040 80E0      		ldi r24,lo8(__c.4864)
 141 0042 90E0      		ldi r25,hi8(__c.4864)
 142 0044 0E94 0000 		call xputs
 143               	.LVL11:
 144               	.L6:
 203:../../tmk_core_custom/common/keyboard.c ****     led_set(leds);
 145               		.loc 2 203 0 is_stmt 1
 146 0048 8C2F      		mov r24,r28
 147               	/* epilogue start */
 204:../../tmk_core_custom/common/keyboard.c **** }
 148               		.loc 2 204 0
 149 004a CF91      		pop r28
 150               	.LVL12:
 203:../../tmk_core_custom/common/keyboard.c ****     led_set(leds);
 151               		.loc 2 203 0
 152 004c 0C94 0000 		jmp led_set
 153               	.LVL13:
 154               		.cfi_endproc
 155               	.LFE107:
 157               		.section	.text.keyboard_task,"ax",@progbits
 158               	.global	keyboard_task
 160               	keyboard_task:
 161               	.LFB106:
 129:../../tmk_core_custom/common/keyboard.c **** {
 162               		.loc 2 129 0
 163               		.cfi_startproc
 164 0000 CF92      		push r12
 165               	.LCFI6:
 166               		.cfi_def_cfa_offset 3
 167               		.cfi_offset 12, -2
 168 0002 DF92      		push r13
 169               	.LCFI7:
 170               		.cfi_def_cfa_offset 4
 171               		.cfi_offset 13, -3
 172 0004 EF92      		push r14
 173               	.LCFI8:
 174               		.cfi_def_cfa_offset 5
 175               		.cfi_offset 14, -4
 176 0006 FF92      		push r15
 177               	.LCFI9:
 178               		.cfi_def_cfa_offset 6
 179               		.cfi_offset 15, -5
 180 0008 0F93      		push r16
 181               	.LCFI10:
 182               		.cfi_def_cfa_offset 7
 183               		.cfi_offset 16, -6
 184 000a 1F93      		push r17
 185               	.LCFI11:
 186               		.cfi_def_cfa_offset 8
 187               		.cfi_offset 17, -7
 188 000c CF93      		push r28
 189               	.LCFI12:
 190               		.cfi_def_cfa_offset 9
 191               		.cfi_offset 28, -8
 192 000e DF93      		push r29
 193               	.LCFI13:
 194               		.cfi_def_cfa_offset 10
 195               		.cfi_offset 29, -9
 196 0010 CDB7      		in r28,__SP_L__
 197 0012 DEB7      		in r29,__SP_H__
 198               	.LCFI14:
 199               		.cfi_def_cfa_register 28
 200 0014 2B97      		sbiw r28,11
 201               	.LCFI15:
 202               		.cfi_def_cfa_offset 21
 203 0016 0FB6      		in __tmp_reg__,__SREG__
 204 0018 F894      		cli
 205 001a DEBF      		out __SP_H__,r29
 206 001c 0FBE      		out __SREG__,__tmp_reg__
 207 001e CDBF      		out __SP_L__,r28
 208               	/* prologue: function */
 209               	/* frame size = 11 */
 210               	/* stack size = 19 */
 211               	.L__stack_usage = 19
 212               	.LVL14:
 138:../../tmk_core_custom/common/keyboard.c ****     matrix_scan();
 213               		.loc 2 138 0
 214 0020 0E94 0000 		call matrix_scan
 215               	.LVL15:
 216 0024 30E0      		ldi r19,lo8(matrix_prev.4840)
 217 0026 E32E      		mov r14,r19
 218 0028 30E0      		ldi r19,hi8(matrix_prev.4840)
 219 002a F32E      		mov r15,r19
 220 002c 00E0      		ldi r16,0
 221 002e 10E0      		ldi r17,0
 222               	.LVL16:
 223               	.L30:
 224 0030 C02E      		mov r12,r16
 225               	.LVL17:
 226               	.LBB2:
 140:../../tmk_core_custom/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 227               		.loc 2 140 0
 228 0032 802F      		mov r24,r16
 229 0034 0E94 0000 		call matrix_get_row
 230               	.LVL18:
 141:../../tmk_core_custom/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 231               		.loc 2 141 0
 232 0038 F701      		movw r30,r14
 233 003a D190      		ld r13,Z+
 234 003c 7F01      		movw r14,r30
 235 003e D826      		eor r13,r24
 236               	.LVL19:
 142:../../tmk_core_custom/common/keyboard.c ****         if (matrix_change) {
 237               		.loc 2 142 0
 238 0040 01F4      		brne .L21
 239               	.LVL20:
 240               	.L28:
 241 0042 0F5F      		subi r16,-1
 242 0044 1F4F      		sbci r17,-1
 243               	.LVL21:
 139:../../tmk_core_custom/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 244               		.loc 2 139 0
 245 0046 0630      		cpi r16,6
 246 0048 1105      		cpc r17,__zero_reg__
 247 004a 01F4      		brne .L30
 248               	.LBE2:
 174:../../tmk_core_custom/common/keyboard.c ****     action_exec(TICK);
 249               		.loc 2 174 0
 250 004c 8FEF      		ldi r24,lo8(-1)
 251 004e 8983      		std Y+1,r24
 252 0050 8A83      		std Y+2,r24
 253 0052 1B82      		std Y+3,__zero_reg__
 254 0054 0E94 0000 		call timer_read
 255               	.LVL22:
 256 0058 8160      		ori r24,1
 257 005a 782F      		mov r23,r24
 258 005c 9D83      		std Y+5,r25
 259 005e 8C83      		std Y+4,r24
 260 0060 4981      		ldd r20,Y+1
 261 0062 5A81      		ldd r21,Y+2
 262 0064 6B81      		ldd r22,Y+3
 263 0066 8D81      		ldd r24,Y+5
 264 0068 0E94 0000 		call action_exec
 265               	.LVL23:
 266 006c 00C0      		rjmp .L27
 267               	.LVL24:
 268               	.L21:
 269               	.LBB4:
 157:../../tmk_core_custom/common/keyboard.c ****             if (debug_matrix) matrix_print();
 270               		.loc 2 157 0
 271 006e 9091 0000 		lds r25,debug_config
 272 0072 91FF      		sbrs r25,1
 273 0074 00C0      		rjmp .L24
 157:../../tmk_core_custom/common/keyboard.c ****             if (debug_matrix) matrix_print();
 274               		.loc 2 157 0 is_stmt 0 discriminator 1
 275 0076 8B87      		std Y+11,r24
 276 0078 0E94 0000 		call matrix_print
 277               	.LVL25:
 278 007c 8B85      		ldd r24,Y+11
 279               	.L24:
 280               	.LVL26:
 281               	.LBE4:
 138:../../tmk_core_custom/common/keyboard.c ****     matrix_scan();
 282               		.loc 2 138 0 is_stmt 1
 283 007e 20E0      		ldi r18,0
 284 0080 30E0      		ldi r19,0
 285               	.LBB5:
 286               	.LBB3:
 159:../../tmk_core_custom/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 287               		.loc 2 159 0
 288 0082 4D2D      		mov r20,r13
 289 0084 50E0      		ldi r21,0
 290               	.LVL27:
 291               	.L29:
 292 0086 922F      		mov r25,r18
 293               	.LVL28:
 294 0088 BA01      		movw r22,r20
 295 008a 022E      		mov r0,r18
 296 008c 00C0      		rjmp 2f
 297               		1:
 298 008e 7595      		asr r23
 299 0090 6795      		ror r22
 300               		2:
 301 0092 0A94      		dec r0
 302 0094 02F4      		brpl 1b
 303 0096 60FF      		sbrs r22,0
 304 0098 00C0      		rjmp .L25
 160:../../tmk_core_custom/common/keyboard.c ****                     action_exec((keyevent_t){
 305               		.loc 2 160 0
 306 009a 2E83      		std Y+6,r18
 307 009c CF82      		std Y+7,r12
 162:../../tmk_core_custom/common/keyboard.c ****                         .pressed = (matrix_row & ((matrix_row_t)1<<c)),
 308               		.loc 2 162 0
 309 009e EE24      		clr r14
 310 00a0 E394      		inc r14
 311 00a2 F12C      		mov r15,__zero_reg__
 312               	.LVL29:
 313 00a4 00C0      		rjmp 2f
 314               		1:
 315 00a6 EE0C      		lsl r14
 316 00a8 FF1C      		rol r15
 317               		2:
 318 00aa 9A95      		dec r25
 319 00ac 02F4      		brpl 1b
 320 00ae 90E0      		ldi r25,0
 321 00b0 8E21      		and r24,r14
 322 00b2 9F21      		and r25,r15
 323 00b4 21E0      		ldi r18,lo8(1)
 324 00b6 892B      		or r24,r25
 325 00b8 01F4      		brne .L26
 326 00ba 20E0      		ldi r18,0
 327               	.L26:
 160:../../tmk_core_custom/common/keyboard.c ****                     action_exec((keyevent_t){
 328               		.loc 2 160 0
 329 00bc 2887      		std Y+8,r18
 163:../../tmk_core_custom/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 330               		.loc 2 163 0
 331 00be 0E94 0000 		call timer_read
 332               	.LVL30:
 333 00c2 8160      		ori r24,1
 160:../../tmk_core_custom/common/keyboard.c ****                     action_exec((keyevent_t){
 334               		.loc 2 160 0
 335 00c4 782F      		mov r23,r24
 336 00c6 9A87      		std Y+10,r25
 337 00c8 8987      		std Y+9,r24
 338 00ca 4E81      		ldd r20,Y+6
 339 00cc 5F81      		ldd r21,Y+7
 340 00ce 6885      		ldd r22,Y+8
 341 00d0 8A85      		ldd r24,Y+10
 342 00d2 0E94 0000 		call action_exec
 343               	.LVL31:
 166:../../tmk_core_custom/common/keyboard.c ****                     matrix_prev[r] ^= ((matrix_row_t)1<<c);
 344               		.loc 2 166 0
 345 00d6 F801      		movw r30,r16
 346 00d8 E050      		subi r30,lo8(-(matrix_prev.4840))
 347 00da F040      		sbci r31,hi8(-(matrix_prev.4840))
 348 00dc 8081      		ld r24,Z
 349 00de 8E25      		eor r24,r14
 350 00e0 8083      		st Z,r24
 168:../../tmk_core_custom/common/keyboard.c ****                     goto MATRIX_LOOP_END;
 351               		.loc 2 168 0
 352 00e2 00C0      		rjmp .L27
 353               	.LVL32:
 354               	.L25:
 355 00e4 2F5F      		subi r18,-1
 356 00e6 3F4F      		sbci r19,-1
 357               	.LVL33:
 158:../../tmk_core_custom/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 358               		.loc 2 158 0
 359 00e8 2430      		cpi r18,4
 360 00ea 3105      		cpc r19,__zero_reg__
 361 00ec 01F4      		brne .L29
 362 00ee 00C0      		rjmp .L28
 363               	.LVL34:
 364               	.L27:
 365               	.LBE3:
 366               	.LBE5:
 180:../../tmk_core_custom/common/keyboard.c ****     mousekey_task();
 367               		.loc 2 180 0
 368 00f0 0E94 0000 		call mousekey_task
 369               	.LVL35:
 194:../../tmk_core_custom/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 370               		.loc 2 194 0
 371 00f4 1091 0000 		lds r17,led_status.4841
 372 00f8 0E94 0000 		call host_keyboard_leds
 373               	.LVL36:
 374 00fc 1817      		cp r17,r24
 375 00fe 01F0      		breq .L20
 195:../../tmk_core_custom/common/keyboard.c ****         led_status = host_keyboard_leds();
 376               		.loc 2 195 0
 377 0100 0E94 0000 		call host_keyboard_leds
 378               	.LVL37:
 379 0104 8093 0000 		sts led_status.4841,r24
 380               	/* epilogue start */
 198:../../tmk_core_custom/common/keyboard.c **** }
 381               		.loc 2 198 0
 382 0108 2B96      		adiw r28,11
 383 010a 0FB6      		in __tmp_reg__,__SREG__
 384 010c F894      		cli
 385 010e DEBF      		out __SP_H__,r29
 386 0110 0FBE      		out __SREG__,__tmp_reg__
 387 0112 CDBF      		out __SP_L__,r28
 388 0114 DF91      		pop r29
 389 0116 CF91      		pop r28
 390 0118 1F91      		pop r17
 391 011a 0F91      		pop r16
 392 011c FF90      		pop r15
 393 011e EF90      		pop r14
 394 0120 DF90      		pop r13
 395               	.LVL38:
 396 0122 CF90      		pop r12
 196:../../tmk_core_custom/common/keyboard.c ****         keyboard_set_leds(led_status);
 397               		.loc 2 196 0
 398 0124 0C94 0000 		jmp keyboard_set_leds
 399               	.LVL39:
 400               	.L20:
 401               	/* epilogue start */
 198:../../tmk_core_custom/common/keyboard.c **** }
 402               		.loc 2 198 0
 403 0128 2B96      		adiw r28,11
 404 012a 0FB6      		in __tmp_reg__,__SREG__
 405 012c F894      		cli
 406 012e DEBF      		out __SP_H__,r29
 407 0130 0FBE      		out __SREG__,__tmp_reg__
 408 0132 CDBF      		out __SP_L__,r28
 409 0134 DF91      		pop r29
 410 0136 CF91      		pop r28
 411 0138 1F91      		pop r17
 412 013a 0F91      		pop r16
 413 013c FF90      		pop r15
 414 013e EF90      		pop r14
 415 0140 DF90      		pop r13
 416               	.LVL40:
 417 0142 CF90      		pop r12
 418 0144 0895      		ret
 419               		.cfi_endproc
 420               	.LFE106:
 422               		.section	.progmem.data.__c.4864,"a",@progbits
 425               	__c.4864:
 426 0000 0A00      		.string	"\n"
 427               		.section	.progmem.data.__c.4862,"a",@progbits
 430               	__c.4862:
 431 0000 2530 3258 		.string	"%02X"
 431      00
 432               		.section	.progmem.data.__c.4860,"a",@progbits
 435               	__c.4860:
 436 0000 6B65 7962 		.string	"keyboard_set_led: "
 436      6F61 7264 
 436      5F73 6574 
 436      5F6C 6564 
 436      3A20 00
 437               		.section	.bss.led_status.4841,"aw",@nobits
 440               	led_status.4841:
 441 0000 00        		.zero	1
 442               		.section	.bss.matrix_prev.4840,"aw",@nobits
 445               	matrix_prev.4840:
 446 0000 0000 0000 		.zero	6
 446      0000 
 447               		.comm	keymap_config,1,1
 448               		.text
 449               	.Letext0:
 450               		.file 3 "/usr/local/CrossPack-AVR-20131216/avr/include/stdint.h"
 451               		.file 4 "../../tmk_core_custom/common/matrix.h"
 452               		.file 5 "../../tmk_core_custom/common/keymap.h"
 453               		.file 6 "../../tmk_core_custom/common/debug.h"
 454               		.file 7 "../../tmk_core_custom/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
 455               		.file 8 "../../tmk_core_custom/common/timer.h"
 456               		.file 9 "../../tmk_core_custom/common/bootmagic.h"
 457               		.file 10 "../../tmk_core_custom/common/ledmap_in_eeprom.h"
 458               		.file 11 "../../tmk_core_custom/common/ledmap.h"
 459               		.file 12 "../../tmk_core_custom/common/softpwm_led.h"
 460               		.file 13 "../../tmk_core_custom/common/backlight.h"
 461               		.file 14 "../../tmk_core_custom/common/avr/xprintf.h"
 462               		.file 15 "../../tmk_core_custom/common/led.h"
 463               		.file 16 "../../tmk_core_custom/common/action.h"
 464               		.file 17 "../../tmk_core_custom/common/mousekey.h"
 465               		.file 18 "../../tmk_core_custom/common/host.h"
DEFINED SYMBOLS
                            *ABS*:00000000 keyboard.c
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//cc7GKKeb.s:2      *ABS*:0000003e __SP_H__
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//cc7GKKeb.s:3      *ABS*:0000003d __SP_L__
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//cc7GKKeb.s:4      *ABS*:0000003f __SREG__
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//cc7GKKeb.s:5      *ABS*:00000000 __tmp_reg__
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//cc7GKKeb.s:6      *ABS*:00000001 __zero_reg__
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//cc7GKKeb.s:13     .text.matrix_power_up:00000000 matrix_power_up
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//cc7GKKeb.s:29     .text.matrix_power_down:00000000 matrix_power_down
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//cc7GKKeb.s:44     .text.keyboard_init:00000000 keyboard_init
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//cc7GKKeb.s:80     .text.keyboard_set_leds:00000000 keyboard_set_leds
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//cc7GKKeb.s:435    .progmem.data.__c.4860:00000000 __c.4860
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//cc7GKKeb.s:430    .progmem.data.__c.4862:00000000 __c.4862
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//cc7GKKeb.s:425    .progmem.data.__c.4864:00000000 __c.4864
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//cc7GKKeb.s:160    .text.keyboard_task:00000000 keyboard_task
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//cc7GKKeb.s:445    .bss.matrix_prev.4840:00000000 matrix_prev.4840
/var/folders/21/2h6z05gn50s9p53ctp4w8vd00000gn/T//cc7GKKeb.s:440    .bss.led_status.4841:00000000 led_status.4841
                            *COM*:00000001 keymap_config

UNDEFINED SYMBOLS
timer_init
matrix_init
bootmagic
ledmap_in_eeprom_init
ledmap_init
softpwm_init
backlight_init
debug_config
xputs
__xprintf
led_set
matrix_scan
matrix_get_row
timer_read
action_exec
matrix_print
mousekey_task
host_keyboard_leds
__do_clear_bss
